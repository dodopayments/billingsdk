{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-table-five",
  "type": "registry:block",
  "title": "Pricing Table Five",
  "description": "A modern pricing table component with contact us plan",
  "dependencies": [
    "lucide-react",
    "class-variance-authority",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "card",
    "badge",
    "radio-group",
    "label",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/pricing-table-five.tsx",
      "content": "\"use client\"\r\n\r\nimport { useState, useId } from \"react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\r\nimport { Check, Phone } from \"lucide-react\"\r\nimport { type Plan } from \"@/lib/billingsdk-config\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { AnimatePresence, motion } from \"motion/react\"\r\n\r\nconst sectionVariants = cva(\"py-32 relative overflow-hidden\", {\r\n  variants: {\r\n    size: {\r\n      small: \"py-12\",\r\n      medium: \"py-20\",\r\n      large: \"py-32\",\r\n    },\r\n    theme: {\r\n      minimal: \"bg-background\",\r\n      classic: \"bg-gradient-to-b from-background to-muted/20\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"medium\",\r\n    theme: \"minimal\",\r\n  },\r\n});\r\n\r\nconst titleVariants = cva(\"font-bold mb-4 text-foreground\", {\r\n  variants: {\r\n    size: {\r\n      small: \"text-3xl lg:text-4xl\",\r\n      medium: \"text-4xl lg:text-5xl\",\r\n      large: \"text-4xl lg:text-6xl\",\r\n    },\r\n    theme: {\r\n      minimal: \"\",\r\n      classic: \"bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"medium\",\r\n    theme: \"minimal\",\r\n  },\r\n});\r\n\r\nconst descriptionVariants = cva(\"text-muted-foreground max-w-3xl mx-auto mb-8\", {\r\n  variants: {\r\n    size: {\r\n      small: \"text-base lg:text-lg\",\r\n      medium: \"text-lg lg:text-xl\",\r\n      large: \"lg:text-xl\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"medium\",\r\n  },\r\n});\r\n\r\nconst toggleVariants = cva(\r\n  \"flex h-11 w-fit shrink-0 items-center rounded-md p-1 text-lg\",\r\n  {\r\n    variants: {\r\n      theme: {\r\n        minimal: \"bg-muted\",\r\n        classic: \"bg-muted/50 backdrop-blur-sm border border-border/50 shadow-lg\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      theme: \"minimal\",\r\n    },\r\n  }\r\n);\r\n\r\nconst planCardVariants = cva(\r\n  \"relative border transition-all duration-300 rounded-lg\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        small: \"p-4\",\r\n        medium: \"p-5\",\r\n        large: \"p-6\",\r\n      },\r\n      theme: {\r\n        minimal: \"bg-card border-border hover:bg-muted/30 shadow-sm\",\r\n        classic: \"bg-card border-border/50 hover:shadow-xl hover:border-border backdrop-blur-sm shadow-md\",\r\n      },\r\n      highlight: {\r\n        true: \"\",\r\n        false: \"\",\r\n      },\r\n    },\r\n    compoundVariants: [\r\n      {\r\n        theme: \"classic\",\r\n        highlight: true,\r\n        className: \"ring-1 ring-primary/20 border-primary/30 bg-gradient-to-b from-primary/5 to-card shadow-lg\",\r\n      },\r\n      {\r\n        theme: \"minimal\",\r\n        highlight: true,\r\n        className: \"bg-muted/50 border-primary/20 shadow-md\",\r\n      },\r\n    ],\r\n    defaultVariants: {\r\n      size: \"large\",\r\n      theme: \"minimal\",\r\n      highlight: false,\r\n    },\r\n  }\r\n);\r\n\r\nconst contactCardVariants = cva(\r\n  \"border transition-all duration-300 h-full rounded-lg\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        small: \"p-6\",\r\n        medium: \"p-7\",\r\n        large: \"p-8\",\r\n      },\r\n      theme: {\r\n        minimal: \"bg-muted/50 border-border hover:bg-muted/70 shadow-sm\",\r\n        classic: \"bg-card border-border/50 hover:shadow-xl hover:border-primary/20 backdrop-blur-sm shadow-md\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"large\",\r\n      theme: \"minimal\",\r\n    },\r\n  }\r\n);\r\n\r\nconst priceTextVariants = cva(\"font-bold\", {\r\n  variants: {\r\n    size: {\r\n      small: \"text-3xl\",\r\n      medium: \"text-4xl\",\r\n      large: \"text-4xl\",\r\n    },\r\n    theme: {\r\n      minimal: \"text-foreground\",\r\n      classic: \"font-extrabold bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"large\",\r\n    theme: \"minimal\",\r\n  },\r\n});\r\n\r\nconst featureIconVariants = cva(\"flex-none\", {\r\n  variants: {\r\n    size: {\r\n      small: \"w-3 h-3\",\r\n      medium: \"w-4 h-4\",\r\n      large: \"w-4 h-4\",\r\n    },\r\n    theme: {\r\n      minimal: \"text-primary\",\r\n      classic: \"text-emerald-500\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"large\",\r\n    theme: \"minimal\",\r\n  },\r\n});\r\n\r\nexport interface PricingTableFiveProps extends VariantProps<typeof sectionVariants> {\r\n  plans: Plan[]\r\n  title?: string\r\n  description?: string\r\n  onPlanSelect?: (planId: string) => void\r\n  className?: string\r\n}\r\n\r\nexport function PricingTableFive({ \r\n  plans, \r\n  title = \"Pricing Plans\", \r\n  description = \"Choose the plan that's right for you\",\r\n  onPlanSelect,\r\n  className,\r\n  size = \"medium\",\r\n  theme = \"minimal\"\r\n}: PricingTableFiveProps) {\r\n  const [isAnnually, setIsAnnually] = useState(false)\r\n  const uniqueId = useId()\r\n\r\n  function calculateDiscount(monthlyPrice: string, yearlyPrice: string): number {\r\n    const monthly = parseFloat(monthlyPrice);\r\n    const yearly = parseFloat(yearlyPrice);\r\n\r\n    if (\r\n      monthlyPrice.toLowerCase() === \"custom\" ||\r\n      yearlyPrice.toLowerCase() === \"custom\" ||\r\n      isNaN(monthly) ||\r\n      isNaN(yearly) ||\r\n      monthly === 0\r\n    ) {\r\n      return 0;\r\n    }\r\n\r\n    const discount = ((monthly * 12 - yearly) / (monthly * 12)) * 100;\r\n    return Math.round(discount);\r\n  }\r\n\r\n  const yearlyPriceDiscount = plans.length\r\n    ? Math.max(\r\n      ...plans.map((plan) =>\r\n        calculateDiscount(plan.monthlyPrice, plan.yearlyPrice)\r\n      )\r\n    )\r\n    : 0;\r\n\r\n  const regularPlans = plans.slice(0, -1);\r\n  const contactUsPlan = plans[plans.length - 1];\r\n\r\n  return (\r\n    <section className={cn(sectionVariants({ size, theme }), className)}>\r\n      {/* Classic theme background elements */}\r\n      {theme === \"classic\" && (\r\n        <>\r\n          <div className=\"absolute inset-0 bg-grid-pattern opacity-5\" />\r\n          <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-primary/5 rounded-full blur-3xl\" />\r\n          <div className=\"absolute top-1/4 right-1/4 w-64 h-64 bg-secondary/5 rounded-full blur-2xl\" />\r\n        </>\r\n      )}\r\n\r\n      <div className=\"container max-w-7xl mx-auto relative\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-12\">\r\n          <h2 className={cn(titleVariants({ size, theme }))}>{title}</h2>\r\n          <p className={cn(descriptionVariants({ size }))}>{description}</p>\r\n\r\n          {/* Billing Toggle */}\r\n          <div className={cn(\"flex justify-center mt-8 mx-auto\", toggleVariants({ theme }))}>\r\n            <RadioGroup\r\n              defaultValue=\"monthly\"\r\n              className=\"h-full grid-cols-2\"\r\n              onValueChange={(value) => {\r\n                setIsAnnually(value === \"annually\");\r\n              }}\r\n            >\r\n              <div className='has-[button[data-state=\"checked\"]]:bg-background h-full rounded-md transition-all'>\r\n                <RadioGroupItem\r\n                  value=\"monthly\"\r\n                  id={`${uniqueId}-monthly`}\r\n                  className=\"peer sr-only\"\r\n                />\r\n                <Label\r\n                  htmlFor={`${uniqueId}-monthly`}\r\n                  className=\"text-muted-foreground peer-data-[state=checked]:text-primary flex h-full cursor-pointer items-center justify-center px-2 md:px-7 font-semibold transition-all hover:text-foreground\"\r\n                >\r\n                  Monthly\r\n                </Label>\r\n              </div>\r\n              <div className='has-[button[data-state=\"checked\"]]:bg-background h-full rounded-md transition-all'>\r\n                <RadioGroupItem\r\n                  value=\"annually\"\r\n                  id={`${uniqueId}-annually`}\r\n                  className=\"peer sr-only\"\r\n                />\r\n                <Label\r\n                  htmlFor={`${uniqueId}-annually`}\r\n                  className=\"text-muted-foreground peer-data-[state=checked]:text-primary flex h-full cursor-pointer items-center justify-center gap-1 px-2 md:px-7 font-semibold transition-all hover:text-foreground\"\r\n                >\r\n                  Annually\r\n                  {yearlyPriceDiscount > 0 && (\r\n                    <span className=\"ml-1 rounded bg-primary/10 px-2 py-0.5 text-xs text-primary border border-primary/20 font-medium\">\r\n                      Save {yearlyPriceDiscount}%\r\n                    </span>\r\n                  )}\r\n                </Label>\r\n              </div>\r\n            </RadioGroup>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Plans Layout */}\r\n        <div className=\"flex flex-col lg:flex-row gap-6\">\r\n          {/* Regular Plans */}\r\n          <div className=\"flex flex-col gap-4 lg:w-2/3\">\r\n            {regularPlans.map((plan, index) => (\r\n              <motion.div\r\n                key={plan.id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.4, delay: index * 0.1 }}\r\n              >\r\n                <Card className={cn(planCardVariants({ size, theme, highlight: plan.highlight }))}>\r\n                  {plan.badge && (\r\n                    <Badge className={cn(\r\n                      \"absolute -top-3 left-1/2 transform -translate-x-1/2 z-10\",\r\n                      theme === \"classic\" \r\n                        ? \"bg-gradient-to-r from-primary to-primary/80 text-primary-foreground border-primary/20 shadow-lg\"\r\n                        : \"bg-primary text-primary-foreground\"\r\n                    )}>\r\n                      {plan.badge}\r\n                    </Badge>\r\n                  )}\r\n                  \r\n                  {theme === \"classic\" && plan.highlight && (\r\n                    <div className=\"absolute -top-px left-1/2 -translate-x-1/2 w-32 h-px bg-gradient-to-r from-transparent via-primary to-transparent\" />\r\n                  )}\r\n\r\n                  <CardContent className=\"p-0 flex flex-col md:flex-row md:items-center md:justify-between gap-6\">\r\n                    {/* Plan Info and Price */}\r\n                    <div className=\"flex flex-col gap-3 min-w-[200px]\">\r\n                      <Badge \r\n                        variant=\"outline\" \r\n                        className=\"w-fit text-xs font-medium uppercase\"\r\n                      >\r\n                        {plan.title}\r\n                      </Badge>\r\n                      \r\n                      <AnimatePresence mode=\"wait\">\r\n                        <motion.div\r\n                          key={isAnnually ? \"year\" : \"month\"}\r\n                          initial={{ opacity: 0, y: 10 }}\r\n                          animate={{ opacity: 1, y: 0 }}\r\n                          exit={{ opacity: 0, y: -10 }}\r\n                          transition={{ duration: 0.2 }}\r\n                          className=\"flex items-baseline gap-1\"\r\n                        >\r\n                          <span className={cn(priceTextVariants({ size, theme }))}>\r\n                            {parseFloat(isAnnually ? plan.yearlyPrice : plan.monthlyPrice) >= 0 && (\r\n                              <>{plan.currency}</>\r\n                            )}\r\n                            {isAnnually ? plan.yearlyPrice : plan.monthlyPrice}\r\n                          </span>\r\n                          <span className=\"text-muted-foreground text-sm\">\r\n                            /{isAnnually ? \"year\" : \"month\"}\r\n                          </span>\r\n                        </motion.div>\r\n                      </AnimatePresence>\r\n\r\n                      <Button \r\n                        onClick={() => onPlanSelect?.(plan.id)} \r\n                        className={cn(\r\n                          \"w-full md:w-auto\",\r\n                          plan.highlight && theme === \"minimal\" && \"shadow hover:bg-primary/90 h-9 py-2 group bg-primary text-primary-foreground ring-primary before:from-primary-foreground/20 after:from-primary-foreground/10 relative isolate inline-flex items-center justify-center overflow-hidden rounded-md px-6 text-left text-sm font-medium ring-1 before:pointer-events-none before:absolute before:inset-0 before:-z-10 before:rounded-md before:bg-gradient-to-b before:opacity-80 before:transition-opacity before:duration-300 before:ease-[cubic-bezier(0.4,0.36,0,1)] after:pointer-events-none after:absolute after:inset-0 after:-z-10 after:rounded-md after:bg-gradient-to-b after:to-transparent after:mix-blend-overlay hover:cursor-pointer\"\r\n                        )}\r\n                        variant={plan.highlight ? \"default\" : \"secondary\"}\r\n                      >\r\n                        {plan.buttonText}\r\n                      </Button>\r\n                    </div>\r\n\r\n                    {/* Features */}\r\n                    <div className=\"flex-1 grid gap-3 md:grid-cols-2\">\r\n                      {plan.features.map((feature, featureIndex) => (\r\n                        <motion.div \r\n                          key={featureIndex} \r\n                          className=\"flex items-start gap-2\"\r\n                          initial={{ opacity: 0, x: -10 }}\r\n                          animate={{ opacity: 1, x: 0 }}\r\n                          transition={{ duration: 0.3, delay: featureIndex * 0.05 }}\r\n                        >\r\n                          <Check className={cn(featureIconVariants({ size, theme }), \"mt-0.5\")} />\r\n                          <span className={cn(\r\n                            \"text-sm\",\r\n                            theme === \"classic\" ? \"text-foreground/90\" : \"text-muted-foreground\"\r\n                          )}>\r\n                            {feature.name}\r\n                          </span>\r\n                        </motion.div>\r\n                      ))}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Contact Card */}\r\n          <motion.div\r\n            className=\"lg:w-1/3\"\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.4, delay: regularPlans.length * 0.1 }}\r\n          >\r\n            <Card className={cn(contactCardVariants({ size, theme }), \"rounded-lg\")}>\r\n              <CardContent className=\"p-0 flex flex-col items-center text-center space-y-6\">\r\n                <div className=\"w-16 h-16 rounded-full flex items-center justify-center bg-primary/10\">\r\n                  <Phone className=\"w-8 h-8 text-primary\" />\r\n                </div>\r\n                \r\n                <div>\r\n                  <h3 className={cn(\r\n                    \"text-2xl font-bold mb-2\",\r\n                    theme === \"classic\" && \"bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\"\r\n                  )}>\r\n                    {contactUsPlan.title}\r\n                  </h3>\r\n                  <p className=\"text-sm text-muted-foreground leading-relaxed\">\r\n                    {contactUsPlan.description}\r\n                  </p>\r\n                </div>\r\n\r\n                <Button \r\n                  onClick={() => onPlanSelect?.(contactUsPlan.id)} \r\n                  variant=\"outline\"\r\n                  className=\"w-full hover:bg-primary hover:text-primary-foreground transition-colors\"\r\n                >\r\n                  {contactUsPlan.buttonText}\r\n                </Button>\r\n\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Custom pricing and solutions available\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/billingsdk/pricing-table-five.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/pricing-table-five-demo.tsx",
      "content": "\"use client\"\r\n\r\nimport { PricingTableFive } from \"@/components/billingsdk/pricing-table-five\"\r\nimport { plans } from \"@/lib/billingsdk-config\"\r\n\r\nexport function PricingTableFiveDemo() {\r\n  return (\r\n    <PricingTableFive\r\n      plans={plans}\r\n      theme=\"classic\"\r\n      onPlanSelect={(planId: string) => console.log(\"Selected plan:\", planId)}\r\n      title=\"Budget-friendly pricing alternatives\"\r\n      description=\"Get started free or upgrade to share your impact for all completed tasks with multiple people\"\r\n    />\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/pricing-table-five-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\r\n    id: string\r\n    title: string\r\n    description: string\r\n    highlight?: boolean\r\n    type?: 'monthly' | 'yearly'\r\n    currency?: string\r\n    monthlyPrice: string\r\n    yearlyPrice: string\r\n    buttonText: string\r\n    badge?: string\r\n    features: {\r\n        name: string\r\n        icon: string\r\n        iconColor?: string\r\n    }[]\r\n}\r\n\r\nexport interface CurrentPlan {\r\n    plan: Plan\r\n    type: 'monthly' | 'yearly' | 'custom'\r\n    price?: string\r\n    nextBillingDate: string\r\n    paymentMethod: string\r\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\r\n}\r\n\r\nexport const plans: Plan[] = [\r\n    {\r\n        id: 'starter',\r\n        title: 'Starter',\r\n        description: 'For developers testing out Liveblocks locally.',\r\n        currency: '$',\r\n        monthlyPrice: '0',\r\n        yearlyPrice: '0',\r\n        buttonText: 'Start today for free',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'pro',\r\n        title: 'Pro',\r\n        description: 'For companies adding collaboration in production.',\r\n        currency: '$',\r\n        monthlyPrice: '20',\r\n        yearlyPrice: '199',\r\n        buttonText: 'Sign up',\r\n        badge: 'Most popular',\r\n        highlight: true,\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'enterprise',\r\n        title: 'Enterprise',\r\n        description: 'For organizations that need more support and compliance features.',\r\n        currency: '$',\r\n        monthlyPrice: 'Custom',\r\n        yearlyPrice: 'Custom',\r\n        buttonText: 'Contact sales',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    }\r\n];\r\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}