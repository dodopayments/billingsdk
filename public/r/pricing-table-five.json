{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-table-five",
  "type": "registry:block",
  "title": "Pricing Table Five",
  "description": "A modern pricing table component with contact us plan",
  "dependencies": [
    "lucide-react",
    "class-variance-authority",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "card",
    "badge",
    "switch",
    "radio-group",
    "label",
    "separator",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/pricing-table-five.tsx",
      "content": "\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Check, Phone } from \"lucide-react\"\r\nimport { type Plan } from \"@/lib/billingsdk-config\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Switch } from \"@/components/ui/switch\"\r\nimport { cva } from \"class-variance-authority\"\r\nimport { AnimatePresence, motion } from \"motion/react\"\r\n\r\nexport interface PricingTableFiveProps {\r\n  plans: Plan[]\r\n  title: string\r\n  description: string\r\n  onPlanSelect: (planId: string) => void\r\n  className?: string\r\n  variant?: \"default\" | \"minimal\"\r\n}\r\n\r\n\r\nconst switchScaleVariants = cva(\"transition-all\", {\r\n  variants: {\r\n    size: {\r\n      small: \"scale-90\",\r\n      medium: \"scale-95\",\r\n      large: \"\",\r\n    },\r\n    theme: {\r\n      minimal: \"\",\r\n      classic: \"data-[state=checked]:bg-primary\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"large\",\r\n    theme: \"minimal\",\r\n  },\r\n});\r\n\r\n\r\nconst contactCardVariants = cva(\"border-border shadow-sm w-full md:!w-[30%]\", {\r\n  variants: {\r\n    variant: {\r\n      default: \"bg-primary text-primary-foreground\",\r\n      minimal: \"bg-card text-foreground\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n});\r\n\r\nconst contactIconContainerVariants = cva(\"w-12 h-12 rounded-lg flex items-center justify-center mx-auto\", {\r\n  variants: {\r\n    variant: {\r\n      default: \"bg-primary\",\r\n      minimal: \"bg-card\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n});\r\n\r\n\r\nconst contactIconVariants = cva(\"w-9 h-9\", {\r\n  variants: {\r\n    variant: {\r\n      default: \"text-primary-foreground\",\r\n      minimal: \"text-foreground\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n});\r\n\r\nconst contactTitleVariants = cva(\"text-2xl font-bold mb-3\", {\r\n  variants: {\r\n    variant: {\r\n      default: \"text-primary-foreground\",\r\n      minimal: \"text-foreground\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n});\r\n\r\n\r\nconst contactDescriptionVariants = cva(\"text-sm leading-relaxed\", {\r\n  variants: {\r\n    variant: {\r\n      default: \"text-primary-foreground\",\r\n      minimal: \"text-muted-foreground\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n});\r\n\r\nconst contactButtonVariants = cva(\"w-full\", {\r\n  variants: {\r\n    variant: {\r\n      default: \"bg-primary-foreground text-foreground hover:bg-foreground/60\",\r\n      minimal: \"bg-primary text-primary-foreground hover:bg-primary/60\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n});\r\n\r\nconst contactFooterVariants = cva(\"text-xs\", {\r\n  variants: {\r\n    variant: {\r\n      default: \"text-primary-foreground\",\r\n      minimal: \"text-muted-foreground\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n});\r\n\r\nexport function PricingTableFive({ plans, title, description, onPlanSelect,className,variant=\"default\" }: PricingTableFiveProps) {\r\n  const [isAnnual, setIsAnnual] = useState(false)\r\n\r\n\r\n  function calculateDiscount(monthlyPrice: string, yearlyPrice: string): number {\r\n    const monthly = parseFloat(monthlyPrice);\r\n    const yearly = parseFloat(yearlyPrice);\r\n\r\n    if (\r\n      monthlyPrice.toLowerCase() === \"custom\" ||\r\n      yearlyPrice.toLowerCase() === \"custom\" ||\r\n      isNaN(monthly) ||\r\n      isNaN(yearly) ||\r\n      monthly === 0\r\n    ) {\r\n      return 0;\r\n    }\r\n\r\n    const discount = ((monthly * 12 - yearly) / (monthly * 12)) * 100;\r\n    return Math.round(discount);\r\n  }\r\n\r\n\r\n  const yearlyPriceDiscount = plans.length\r\n  ? Math.max(\r\n    ...plans.map((plan) =>\r\n      calculateDiscount(plan.monthlyPrice, plan.yearlyPrice)\r\n    )\r\n  )\r\n  : 0;\r\n\r\n  const regularPlans = plans.slice(0, -1);\r\n  const contactUsPlan = plans[plans.length - 1];\r\n  return (\r\n    <div className={cn(className,\"w-full\")}>\r\n      <div className=\"text-center mb-12\">\r\n        <h1 className=\"text-4xl font-bold text-foreground mb-4 text-balance\">{title}</h1>\r\n        <p className=\"text-lg text-muted-foreground mb-8 text-pretty\">\r\n          {description}\r\n        </p>\r\n\r\n        {/* Billing Toggle */}\r\n        <div className=\"flex items-center justify-center gap-4 mb-4\">\r\n          <span className={`text-sm font-medium ${!isAnnual ? \"text-foreground\" : \"text-muted-foreground\"}`}>MONTHLY</span>\r\n          <Switch\r\n            checked={isAnnual}\r\n            onCheckedChange={setIsAnnual}\r\n            className={cn(switchScaleVariants({ size: \"large\", theme: \"minimal\" }))}\r\n          />\r\n          <span className={`text-sm font-medium ${isAnnual ? \"text-foreground\" : \"text-muted-foreground\"}`}>ANNUAL</span>\r\n        <div className=\"flex justify-center\">\r\n          {yearlyPriceDiscount > 0 && (\r\n            <motion.span\r\n              className={cn(\r\n                \"text-xs  text-emerald-500 font-medium bg-emerald-500/10 px-2 py-1 rounded-md\"\r\n              )}\r\n              initial={{ opacity: 0 }}\r\n              whileInView={{ opacity: 1 }}\r\n              viewport={{ once: true }}\r\n              transition={{ duration: 0.5, delay: 0.2 }}\r\n            >\r\n              Save {yearlyPriceDiscount}%\r\n            </motion.span>\r\n          )}\r\n        </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col md:!flex-row justify-between gap-4\">\r\n        <div className=\"flex flex-col gap-5 w-full md:!w-[70%]\">\r\n          {regularPlans.map((plan) => (\r\n              <Card key={plan.id} className=\"relative bg-card border border-border shadow-sm  py-4\">\r\n                {plan.highlight && (\r\n                  <Badge className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 bg-primary text-primary-foreground px-4 py-1\">\r\n                    {plan.badge}\r\n                  </Badge>\r\n                )}\r\n                <CardContent className=\"w-full flex flex-col md:!flex-row md:!justify-between gap-6\">\r\n                      <div className=\"flex flex-col justify-center gap-2\">\r\n                        <CardTitle className=\"w-fit text-sm px-2 py-1 font-medium text-foreground uppercase border  border-border rounded-md\">{plan.title}</CardTitle>\r\n                        <AnimatePresence mode=\"wait\">\r\n                        {isAnnual ? (\r\n                          <motion.div\r\n                            key=\"yearly\"\r\n                            initial={{ opacity: 0, y: 10 }}\r\n                            animate={{ opacity: 1, y: 0 }}\r\n                            exit={{ opacity: 0, y: -10 }}\r\n                            transition={{ duration: 0.3 }}\r\n                          >\r\n                            <span className=\"text-4xl font-bold text-foreground\">${plan.yearlyPrice}</span>\r\n                            <span className=\"text-foreground\">/{isAnnual ? \"Year\" : \"Month\"}</span>\r\n                          </motion.div>\r\n                        ) : (\r\n                          <motion.div\r\n                            key=\"monthly\"\r\n                            initial={{ opacity: 0, y: 10 }}\r\n                            animate={{ opacity: 1, y: 0 }}\r\n                            exit={{ opacity: 0, y: -10 }}\r\n                            transition={{ duration: 0.3 }}\r\n                          >\r\n                            <span className=\"text-4xl font-bold text-foreground\">${plan.monthlyPrice}</span>\r\n                            <span className=\"text-foreground\">/{isAnnual ? \"Year\" : \"Month\"}</span>\r\n                          </motion.div>\r\n                        )}\r\n                      </AnimatePresence>\r\n                        <Button onClick={() => onPlanSelect(plan.id)} className=\"w-full bg-primary text-primary-foreground hover:bg-primary/60\">{plan.buttonText}</Button>\r\n                      </div>\r\n                      <div className=\"grid gap-4\">\r\n                        {plan.features.map((feature, index) => (\r\n                          <div key={index} className=\"flex items-center gap-3\">\r\n                            <div className=\"flex-shrink-0 w-5 h-5 rounded-full border-2 border-muted-foreground flex items-center justify-center\">\r\n                              <Check className=\"w-3 h-3 text-muted-foreground\" />\r\n                            </div>\r\n                            <span className=\"text-sm text-muted-foreground\">{feature.name}</span>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                </CardContent>\r\n              </Card>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Contact Us Card */}\r\n        <Card className={cn(contactCardVariants({ variant }))} >\r\n          <CardContent className=\"p-8 text-center space-y-6\">\r\n            <div className={cn(contactIconContainerVariants({ variant }))}>\r\n              <Phone className={cn(contactIconVariants({ variant }))} />\r\n            </div>\r\n            <div>\r\n              <h3 className={cn(contactTitleVariants({ variant }))}>{contactUsPlan.title}</h3>\r\n              <p className={cn(contactDescriptionVariants({ variant }))}>\r\n                {contactUsPlan.description}\r\n              </p>\r\n            </div>\r\n            <Button onClick={() => onPlanSelect(plans[plans.length - 1].id)} variant=\"secondary\" className={cn(contactButtonVariants({ variant }))}>\r\n              {contactUsPlan.buttonText}\r\n            </Button>\r\n            <p className={cn(contactFooterVariants({ variant }))}>{contactUsPlan.description}</p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/billingsdk/pricing-table-five.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/pricing-table-five-demo.tsx",
      "content": "'use client'\r\n\r\nimport { PricingTableFive } from '../pricing-table-five';\r\nimport { plans } from '@/lib/billingsdk-config';\r\n\r\nexport function PricingTableFiveDemo() {\r\n    return (\r\n        <PricingTableFive \r\n            plans={plans}\r\n            onPlanSelect={(planId: string) => console.log('Selected plan:', planId)}\r\n            title=\"Budget-friendly pricing alternatives\"\r\n            description=\"Get started free or upgrade to share your impact for all completed tasks with multiple people\"\r\n        />\r\n    );\r\n}\r\n",
      "type": "registry:component",
      "target": "components/pricing-table-five-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\r\n    id: string\r\n    title: string\r\n    description: string\r\n    highlight?: boolean\r\n    type?: 'monthly' | 'yearly'\r\n    currency?: string\r\n    monthlyPrice: string\r\n    yearlyPrice: string\r\n    buttonText: string\r\n    badge?: string\r\n    features: {\r\n        name: string\r\n        icon: string\r\n        iconColor?: string\r\n    }[]\r\n}\r\n\r\nexport interface CurrentPlan {\r\n    plan: Plan\r\n    type: 'monthly' | 'yearly' | 'custom'\r\n    price?: string\r\n    nextBillingDate: string\r\n    paymentMethod: string\r\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\r\n}\r\n\r\nexport const plans: Plan[] = [\r\n    {\r\n        id: 'starter',\r\n        title: 'Starter',\r\n        description: 'For developers testing out Liveblocks locally.',\r\n        currency: '$',\r\n        monthlyPrice: '0',\r\n        yearlyPrice: '0',\r\n        buttonText: 'Start today for free',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'pro',\r\n        title: 'Pro',\r\n        description: 'For companies adding collaboration in production.',\r\n        currency: '$',\r\n        monthlyPrice: '20',\r\n        yearlyPrice: '199',\r\n        buttonText: 'Sign up',\r\n        badge: 'Most popular',\r\n        highlight: true,\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'enterprise',\r\n        title: 'Enterprise',\r\n        description: 'For organizations that need more support and compliance features.',\r\n        currency: '$',\r\n        monthlyPrice: 'Custom',\r\n        yearlyPrice: 'Custom',\r\n        buttonText: 'Contact sales',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    }\r\n];\r\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}