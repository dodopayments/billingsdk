{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "payment-card",
  "type": "registry:block",
  "title": "Payment Card",
  "description": "A payment card component",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "card",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/payment-card.tsx",
      "content": "\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { ArrowRight, Check } from \"lucide-react\"\r\nimport { AnimatePresence, motion } from \"motion/react\"\r\n\r\nexport interface finalTextProps {\r\n  text: string\r\n}\r\n\r\nexport interface PaymentCardProps {\r\n  title: string\r\n  description: string\r\n  price: string\r\n  feature?: string\r\n  featuredescription?: string\r\n  feature2?: string\r\n  feature2description?: string\r\n  finalText?: finalTextProps[]\r\n  onPay?: (data: { cardNumber: string; expiry: string; cvc: string }) => Promise<void> | void\r\n  className?: string\r\n}\r\n\r\nexport function PaymentCard({ title, description, price, feature, featuredescription, feature2, feature2description, finalText = [], onPay, className }: PaymentCardProps) {\r\n  const [cardNumber, setCardNumber] = useState(\"\")\r\n  const [expiry, setExpiry] = useState(\"\")\r\n  const [cvc, setCvc] = useState(\"\")\r\n  const [index, setIndex] = useState(0)\r\n  const [errors, setErrors] = useState<{ card?: string; expiry?: string; cvc?: string }>({})\r\n\r\n  const validate = () => {\r\n    const newErrors: typeof errors = {}\r\n    \r\n    // Card number validation\r\n    if (!/^[0-9 ]{16,19}$/.test(cardNumber)) {\r\n      newErrors.card = \"Card number must be 16 digits and only numbers.\"\r\n    }\r\n\r\n    // Expiry validation \r\n    if (!/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expiry)) {\r\n      newErrors.expiry = \"Enter a valid expiry date (MM/YY).\"\r\n    } else {\r\n      const [month, year] = expiry.split(\"/\").map(Number)\r\n      const now = new Date()\r\n      const expDate = new Date(2000 + year, month - 1)\r\n      if (expDate < now) {\r\n        newErrors.expiry = \"Expiry date cannot be in the past.\"\r\n      }\r\n    }\r\n\r\n    // CVC validation\r\n    if (!/^[0-9]{3,4}$/.test(cvc)) {\r\n      newErrors.cvc = \"CVC must be 3 or 4 digits.\"\r\n    }\r\n\r\n    setErrors(newErrors)\r\n    return Object.keys(newErrors).length === 0\r\n  }\r\n\r\n  const handlePay = () => {\r\n    if (validate()) {\r\n      if (onPay) {\r\n        onPay({ cardNumber, expiry, cvc })\r\n        console.log(\"Payment processed!\")\r\n      } else {\r\n        console.log(\"error\")\r\n      }\r\n    }\r\n  }\r\n\r\n  // Final text animation\r\n  useEffect(() => {\r\n    if (!finalText || finalText.length === 0) return\r\n\r\n    const interval = setInterval(() => {\r\n      setIndex((prev) => (prev + 1) % finalText.length)\r\n    }, 2000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [finalText])\r\n\r\n  return (\r\n    <div className={cn(\"w-full max-w-4xl mx-auto\", className)}>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        {/* Order Summary */}\r\n        <div className=\"order-2 md:order-1\">\r\n          <div className=\"md:sticky md:top-6 space-y-4\">\r\n            {/* Price Summary */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Order Summary</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between text-sm\">\r\n                    <span className=\"text-muted-foreground\">Subtotal</span>\r\n                    <span className=\"tabular-nums\">${price || \"320\"}.00</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between border-t pt-2\">\r\n                    <span className=\"font-medium\">Total</span>\r\n                    <span className=\"text-xl font-semibold tabular-nums\">${price || \"320\"}.00</span>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Features */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>What's Included</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex gap-3\">\r\n                    <Check className=\"h-4 w-4 text-primary shrink-0 mt-0.5\" />\r\n                    <div className=\"space-y-1\">\r\n                      <p className=\"text-sm font-medium leading-none\">{feature || \"Payment & Invoice\"}</p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        {featuredescription || \"Automated billing and detailed transaction records\"}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex gap-3\">\r\n                    <Check className=\"h-4 w-4 text-primary shrink-0 mt-0.5\" />\r\n                    <div className=\"space-y-1\">\r\n                      <p className=\"text-sm font-medium leading-none\">{feature2 || \"Priority Support\"}</p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        {feature2description || \"Faster response times and technical support\"}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Payment Form */}\r\n        <Card className=\"order-1 md:order-2\">\r\n          <CardHeader>\r\n            <CardTitle>{title || \"Complete your payment\"}</CardTitle>\r\n            <CardDescription>\r\n              {description || \"Enter your card details to finalize your subscription\"}\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            {/* Card Number */}\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"cardNumber\">Card number</Label>\r\n              <div className=\"relative\">\r\n                <div className=\"absolute left-3 top-1/2 -translate-y-1/2 w-8 h-6 flex items-center justify-center overflow-hidden z-10\">\r\n                  <AnimatePresence mode=\"wait\">\r\n                    <motion.img\r\n                      key={index}\r\n                      src={[\r\n                        \"https://img.icons8.com/color/48/visa.png\",\r\n                        \"https://img.icons8.com/color/48/mastercard-logo.png\",\r\n                        \"https://img.icons8.com/color/48/amex.png\",\r\n                        \"https://img.icons8.com/color/48/rupay.png\",\r\n                      ][index % 4]}\r\n                      alt=\"card\"\r\n                      className=\"w-6 h-6\"\r\n                      initial={{ opacity: 0, y: 10 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      exit={{ opacity: 0, y: -10 }}\r\n                      transition={{ duration: 0.5 }}\r\n                    />\r\n                  </AnimatePresence>\r\n                </div>\r\n                <Input\r\n                  id=\"cardNumber\"\r\n                  value={cardNumber}\r\n                  onChange={(e) => setCardNumber(e.target.value)}\r\n                  className=\"pl-14 font-mono tracking-wider\"\r\n                  placeholder=\"1234 5678 9012 3456\"\r\n                  maxLength={19}\r\n                />\r\n              </div>\r\n              {errors.card && <p className=\"text-sm text-destructive\">{errors.card}</p>}\r\n            </div>\r\n\r\n            {/* Expiry and CVC */}\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"expiry\">Expiry date</Label>\r\n                <Input\r\n                  id=\"expiry\"\r\n                  value={expiry}\r\n                  onChange={(e) => setExpiry(e.target.value)}\r\n                  className=\"font-mono\"\r\n                  placeholder=\"MM/YY\"\r\n                  maxLength={5}\r\n                />\r\n                {errors.expiry && <p className=\"text-sm text-destructive\">{errors.expiry}</p>}\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"cvc\">CVC</Label>\r\n                <Input\r\n                  id=\"cvc\"\r\n                  type=\"password\"\r\n                  value={cvc}\r\n                  onChange={(e) => setCvc(e.target.value)}\r\n                  className=\"font-mono\"\r\n                  placeholder=\"123\"\r\n                  maxLength={4}\r\n                />\r\n                {errors.cvc && <p className=\"text-sm text-destructive\">{errors.cvc}</p>}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Discount Code */}\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"discount\">Discount code (optional)</Label>\r\n              <div className=\"flex gap-2\">\r\n                <Input\r\n                  id=\"discount\"\r\n                  placeholder=\"Enter code\"\r\n                  maxLength={12}\r\n                  className=\"flex-1\"\r\n                />\r\n                <Button variant=\"secondary\" type=\"button\">\r\n                  Apply\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Pay Button */}\r\n            <Button className=\"w-full mt-2\" onClick={handlePay}>\r\n              Pay ${price || \"320\"}.00\r\n              <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/billingsdk/payment-card.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/payment-card-demo.tsx",
      "content": "'use client';\r\nimport {PaymentCard} from \"@/components/billingsdk/payment-card\";\r\n\r\nexport function PaymentCardDemo() {\r\n  return <PaymentCard\r\n  title=\"Final step, make the payment.\"\r\n  description=\"To finalize your subscription, kindly complete your payment using a valid credit card.\"\r\n  price=\"100\"\r\n  finalText={[\r\n    { text: \"Automated billing & invoices\" },\r\n    { text: \"Priority support\" },\r\n    { text: \"Exclusive member benefits\" },\r\n  ]}\r\n  feature=\"Payment & Invoice\"\r\n  featuredescription=\"Automated billing and invoicing with detailed transaction records. Professional receipts delivered instantly to your email.\"\r\n  feature2=\"Priority Support\"\r\n  feature2description=\"Get dedicated customer support with faster response times and direct access to our technical team for any issues.\"\r\n  onPay={async ({ cardNumber, expiry, cvc }) => {\r\n    console.log(`Payment Processed! ${cardNumber}, exp ${expiry}, cvc ${cvc}`);\r\n  }}\r\n  />;\r\n}\r\n\r\nexport default PaymentCardDemo;",
      "type": "registry:component",
      "target": "components/payment-card-demo.tsx"
    }
  ]
}