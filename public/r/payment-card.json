{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "payment-card",
  "type": "registry:block",
  "title": "Payment Card",
  "description": "A payment card component",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "card",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/payment-card.tsx",
      "content": "'use client';\r\nimport { useEffect, useState } from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport {Card,CardContent} from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { ArrowRight, Calendar, CreditCard, Gift, Lock } from \"lucide-react\";\r\nimport { AnimatePresence, motion } from \"motion/react\";\r\n\r\nexport interface finalTextProps {\r\n  text: string;\r\n}\r\n\r\nexport interface PaymentCardProps {\r\n  title: string;\r\n  description: string;\r\n  price: string;\r\n  feature?: string;\r\n  featuredescription?: string;\r\n  feature2?: string;\r\n  feature2description?: string;\r\n  finalText?:finalTextProps[];\r\n  onPay?: (data: { cardNumber: string; expiry: string; cvc: string }) => Promise<void> | void;\r\n  className?: string;\r\n}\r\n\r\nexport function PaymentCard({ title, description, price, feature, featuredescription, feature2, feature2description, finalText = [], onPay, className }: PaymentCardProps) {\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [expiry, setExpiry] = useState(\"\");\r\n  const [cvc, setCvc] = useState(\"\");\r\n  const [index, setIndex] = useState(0);\r\n  const [errors, setErrors] = useState<{ card?: string; expiry?: string; cvc?: string }>({});\r\n\r\n  const validate = () => {\r\n    const newErrors: typeof errors = {};\r\n    // Card number validation\r\n    if (!/^[0-9 ]{16,19}$/.test(cardNumber)) {\r\n      newErrors.card = \"Card number must be 16 digits and only numbers.\";\r\n    }\r\n\r\n    // Expiry validation \r\n    if (!/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(expiry)) {\r\n      newErrors.expiry = \"Enter a valid expiry date (MM/YY).\";\r\n    } else {\r\n      const [month, year] = expiry.split(\"/\").map(Number);\r\n      const now = new Date();\r\n      const expDate = new Date(2000 + year, month - 1);\r\n      if (expDate < now) {\r\n        newErrors.expiry = \"Expiry date cannot be in the past.\";\r\n      }\r\n    }\r\n\r\n    // CVC validation\r\n    if (!/^[0-9]{3,4}$/.test(cvc)) {\r\n      newErrors.cvc = \"CVC must be 3 or 4 digits.\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if(Object.keys(newErrors).length === 0){\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handlePay = ()=>{\r\n    if (validate()) {\r\n      if(onPay){\r\n        onPay({ cardNumber, expiry, cvc });\r\n        console.log(\"Payment processed!\");\r\n      }\r\n      else{\r\n        console.log(\"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n // Final text animation\r\n  useEffect(() => {\r\n    if (!finalText || finalText.length === 0) return;\r\n\r\n    const interval = setInterval(() => {\r\n      setIndex((prev) => (prev + 1) % finalText.length)\r\n    }, 2000) \r\n\r\n    return () => clearInterval(interval)\r\n  }, [finalText])\r\n\r\n  return (\r\n    <Card\r\n      className={cn(\r\n        \"w-full max-w-4xl px-1 md:px-5 md:py-3 flex flex-col md:flex-row overflow-hidden md:gap-1 gap-2 pt-1\",\r\n        className\r\n      )}\r\n    >\r\n      {/* Right: Summary */}\r\n      <CardContent className=\"order-1 md:order-2 w-full md:max-w-[350px]\r\n       py-2 px-2 sm:py-3 md:py-6 h-fit my-auto md:px-4 md:w-1/2  \r\n        rounded-lg bg-gradient-to-br from-[#F8CEF8]/15 via-background to-[#F8CEF8]/10  \r\n        flex flex-col gap-4 md:gap-6\">\r\n        <div className=\" px-2 py-1\">\r\n          <h2 className=\"md:text-lg text-xl font-medium \">You've to pay</h2>\r\n          <p className=\"text-xl md:text-2xl lg:text-3xl font-mono text-foreground mt-1\">\r\n           ${price || \"320\"}\r\n        <span className=\"text-xs  font-mono text-foreground\">.00</span>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col gap-3 md:gap-4 mt-4 px-2\">\r\n          <div>\r\n          <h3 className=\"flex items-center gap-2 text-foreground  text-sm md:text-base\">\r\n          <motion.svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"20\"\r\n            height=\"20\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            className=\"text-foreground\"\r\n          >\r\n            <motion.circle\r\n              cx=\"12\"\r\n              cy=\"12\"\r\n              r=\"10\"\r\n              initial={{ pathLength: 0 }}\r\n              animate={{ pathLength: 1 }}\r\n              transition={{ duration: 0.6 }}\r\n            />\r\n            <motion.path\r\n              d=\"M9 12l2 2 4-4\"\r\n              initial={{ pathLength: 0 }}\r\n              animate={{ pathLength: 1 }}\r\n              transition={{ duration: 0.6, delay: 0.6 }}\r\n            />\r\n          </motion.svg>\r\n            {feature || \"Payment & Invoice\"}\r\n          </h3>\r\n            <p className=\"text-xs md:text-sm  mt-2 leading-relaxed\">\r\n              {featuredescription || \"Automated billing and invoicing with detailed transaction records. Professional receipts delivered instantly to your email.\"}\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"flex items-center gap-2   text-sm md:text-base\">\r\n          <motion.svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"20\"\r\n          height=\"20\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          className=\"text-foreground\"\r\n        >\r\n          <motion.circle\r\n            cx=\"12\"\r\n            cy=\"12\"\r\n            r=\"10\"\r\n            initial={{ pathLength: 0 }}\r\n            animate={{ pathLength: 1 }}\r\n            transition={{ duration: 0.6 }}\r\n          />\r\n          <motion.path\r\n            d=\"M9 12l2 2 4-4\"\r\n            initial={{ pathLength: 0 }}\r\n            animate={{ pathLength: 1 }}\r\n            transition={{ duration: 0.6, delay: 0.6 }}\r\n          />\r\n        </motion.svg>\r\n   {feature2 || \"Priority Support\"}\r\n            </h3>\r\n            <p className=\"text-xs md:text-sm  mt-2 leading-relaxed text-foreground\">\r\n              {feature2description || \"Get dedicated customer support with faster response times and direct access to our technical team for any issues.\"}\r\n            </p>\r\n          </div>\r\n\r\n        \r\n        </div>\r\n\r\n        <div className=\" rounded-lg py-2 md:px-1 md:py-4 text-foreground  md:mt-2 flex justify-center items-center overflow-hidden \">\r\n        <AnimatePresence mode=\"wait\">\r\n        <motion.p\r\n          key={index}\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          exit={{ opacity: 0, y: -10 }}\r\n          transition={{ duration: 0.6 }}\r\n          className=\"text-xs sm:text-sm text-center leading-relaxed absolute text-center overflow-hidden text-foreground\"\r\n        >\r\n          {finalText[index].text}\r\n        </motion.p>\r\n      </AnimatePresence>\r\n        </div>\r\n      </CardContent>\r\n\r\n      {/* Left: Payment Form */}\r\n      <CardContent className=\"order-2 md:order-1 w-full py-6 px-4 sm:py-8 sm:px-6 lg:px-10 flex flex-col gap-6 md:flex-1\">\r\n        <div className=\"flex flex-col gap-6 w-full\">\r\n          <div className=\"flex flex-col gap-2\">\r\n            <h2 className=\"text-foreground text-xl sm:text-2xl font-medium\">\r\n              {title || \"Final step, make the payment.\"}\r\n            </h2>\r\n            <p className=\"text-muted-foreground text-sm sm:text-base text-foreground\">\r\n              {description ||\"To finalize your subscription, kindly complete your payment using a valid credit card.\"}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Card Number */}\r\n          <div className=\"flex flex-col gap-3\">\r\n  <label className=\"text-sm font-medium text-foreground flex items-center gap-2\">\r\n    <CreditCard className=\"w-4 h-4\" /> Card number\r\n  </label>\r\n  <div className=\"relative\">\r\n    <div className=\"flex items-center rounded-lg border border-border bg-card px-4 py-3 w-full transition-colors hover:border-muted-foreground/50 focus-within:border-ring focus-within:ring-1 focus-within:ring-ring\">\r\n      \r\n      {/* Animated Logos */}\r\n      <div className=\"relative w-16 h-6  overflow-hidden flex items-center\">\r\n  <AnimatePresence mode=\"wait\">\r\n    <motion.img\r\n      key={index} \r\n      src={[\r\n        \"https://img.icons8.com/color/48/visa.png\",\r\n        \"https://img.icons8.com/color/48/mastercard-logo.png\",\r\n        \"https://img.icons8.com/color/48/amex.png\",\r\n        \"https://img.icons8.com/color/48/rupay.png\",\r\n      ][index % 4]}\r\n      alt=\"card\"\r\n      className=\"w-6 h-6\"\r\n      initial={{ opacity: 0, y: 10 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0, y: -10 }}\r\n      transition={{ duration: 0.5 }}\r\n    />\r\n  </AnimatePresence>\r\n    </div>\r\n\r\n      {/* Input */}\r\n      <input\r\n        value={cardNumber}\r\n        onChange={(e) => setCardNumber(e.target.value)}\r\n        className=\"flex-1 bg-transparent outline-none text-sm placeholder:text-muted-foreground\"\r\n        placeholder=\"1234 5678 9012 3456\"\r\n        maxLength={19}\r\n      />\r\n    </div>\r\n    {errors.card && (\r\n      <p className=\"text-xs text-destructive mt-1\">{errors.card}</p>\r\n    )}\r\n      </div>\r\n    </div>\r\n          <div className=\"flex gap-6 items-start\">\r\n            <div className=\"flex flex-col gap-1 w-fit\">\r\n              <label className=\"text-xs sm:text-sm font-medium text-foreground flex items-center gap-1 sm:gap-2\">\r\n                <Calendar className=\"w-3 h-3 sm:w-4 sm:h-4\" /> Expiry\r\n              </label>\r\n              <div className=\"relative w-20 pt-2\">\r\n                <input\r\n                  value={expiry}\r\n                  onChange={(e) => setExpiry(e.target.value)}\r\n                  className=\"w-full rounded-md border border-border bg-card px-2 py-2 sm:px-3 sm:py-2.5 text-xs sm:text-sm text-center placeholder:text-muted-foreground transition-colors hover:border-muted-foreground/50 focus:border-ring focus:ring-1 focus:ring-ring focus:outline-none\"\r\n                  placeholder=\"MM/YY\"\r\n                  maxLength={5}\r\n                />\r\n                {errors.expiry && (\r\n                  <p className=\"text-xs text-destructive mt-1\">{errors.expiry}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-col gap-1 w-fit\">\r\n              <label className=\"text-xs sm:text-sm font-medium text-foreground flex items-center gap-1 sm:gap-2\">\r\n                <Lock className=\"w-3 h-3 sm:w-4 sm:h-4\" /> CVC\r\n              </label>\r\n              <div className=\"relative w-20 pt-2\">\r\n                <input\r\n                 \r\n                  value={cvc}\r\n                  onChange={(e) => setCvc(e.target.value)}\r\n                  className=\"w-full rounded-md border border-border bg-card px-2 py-2 sm:px-3 sm:py-2.5 text-xs sm:text-sm text-center placeholder:text-muted-foreground transition-colors hover:border-muted-foreground/50 focus:border-ring focus:ring-1 focus:ring-ring focus:outline-none\"\r\n                  placeholder=\"123\"\r\n                  maxLength={4}\r\n                />\r\n                {errors.cvc && (\r\n                  <p className=\"text-xs text-destructive mt-1\">{errors.cvc}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col gap-3\">\r\n            <label className=\"text-sm font-medium text-foreground flex items-center gap-2\">\r\n              <Gift className=\"w-4 h-4\" /> Discount code\r\n            </label>\r\n            <div className=\"flex items-center sm:flex-row gap-3\">\r\n              <input\r\n                className=\"flex-1 rounded-lg border border-border bg-card px-4 py-3 text-sm placeholder:text-muted-foreground transition-colors hover:border-muted-foreground/50 focus:border-ring focus:ring-1 focus:ring-ring focus:outline-none\"\r\n                placeholder=\"Enter discount code\"\r\n                maxLength={12}\r\n              />\r\n              <Button variant=\"outline\" size=\"default\" className=\"px-3 whitespace-nowrap\">\r\n                Apply\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Button \r\n            variant=\"default\"\r\n            className=\"mt-6 w-full sm:w-auto px-8 py-3 text-base font-medium\" \r\n            onClick={handlePay}\r\n          >\r\n            Pay now\r\n            <ArrowRight className=\"w-4 h-4 ml-2\" />\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": "components/billingsdk/payment-card.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/payment-card-demo.tsx",
  onPay={async ({ cardNumber, expiry }) => {
    // Mask the PAN to only the last 4 digits; do not log CVC
    const last4 = cardNumber.replace(/\s+/g, "").slice(-4);
    console.log(`Payment processed •••• ${last4}, exp ${expiry}`);
  }}
      "type": "registry:component",
      "target": "components/payment-card-demo.tsx"
    }
  ]
}