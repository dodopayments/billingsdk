{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "invoice-history",
  "type": "registry:block",
  "title": "Invoice History",
  "description": "A read-only invoice history table",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "card",
    "button",
    "table",
    "badge",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/invoice-history.tsx",
      "content": "\"use client\"\n\nimport { cn } from \"@/lib/utils\"\nimport {\n    Card,\n    CardContent,\n    CardDescription,\n    CardHeader,\n    CardTitle,\n} from \"@/components/ui/card\"\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableCaption,\n    TableHead,\n    TableHeader,\n    TableRow,\n} from \"@/components/ui/table\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { CalendarDays, Download, ReceiptText } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\n\nexport interface InvoiceItem {\n    id: string\n    date: string\n    amount: string\n    status: \"paid\" | \"refunded\" | \"open\" | \"void\"\n    invoiceUrl?: string\n    description?: string\n}\n\ninterface InvoiceHistoryProps {\n    className?: string\n    title?: string\n    description?: string\n    invoices: InvoiceItem[]\n    onDownload?: (invoiceId: string) => void\n}\n\nexport function InvoiceHistory({\n    className,\n    title = \"Invoice History\",\n    description = \"Your past invoices and payment receipts.\",\n    invoices,\n    onDownload,\n}: InvoiceHistoryProps) {\n    if (!invoices) return null\n\n    const statusBadge = (status: InvoiceItem[\"status\"]) => {\n        switch (status) {\n            case \"paid\":\n                return <Badge className=\"bg-emerald-600 text-emerald-50 border-emerald-700/40\">Paid</Badge>\n            case \"refunded\":\n                return <Badge variant=\"secondary\">Refunded</Badge>\n            case \"open\":\n                return <Badge variant=\"outline\">Open</Badge>\n            case \"void\":\n                return <Badge variant=\"outline\">Void</Badge>\n        }\n    }\n\n    return (\n        <Card className={cn(\"w-full\", className)}>\n            {(title || description) && (\n                <CardHeader className=\"space-y-1\">\n                    {title && (\n                        <CardTitle className=\"text-base font-medium leading-tight truncate flex items-center gap-2 sm:gap-3 text-lg sm:text-xl\">\n                            <ReceiptText className=\"h-4 w-4 text-primary\" />\n                            {title}\n                        </CardTitle>\n                    )}\n                    {description && (\n                        <CardDescription className=\"text-sm text-muted-foreground\">\n                            {description}\n                        </CardDescription>\n                    )}\n                </CardHeader>\n            )}\n            <CardContent>\n                <Table>\n                    <TableCaption className=\"sr-only\">List of past invoices with dates, amounts, status and download actions</TableCaption>\n                    <TableHeader>\n                        <TableRow>\n                            <TableHead className=\"w-[120px]\">Date</TableHead>\n                            <TableHead>Description</TableHead>\n                            <TableHead className=\"text-right\">Amount</TableHead>\n                            <TableHead className=\"text-right\">Status</TableHead>\n                            <TableHead className=\"text-right\">Action</TableHead>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                        {invoices.length === 0 && (\n                            <TableRow>\n                                <TableCell colSpan={5} className=\"h-24 text-center text-muted-foreground\">\n                                    No invoices yet\n                                </TableCell>\n                            </TableRow>\n                        )}\n                        {invoices.map((inv) => (\n                            <TableRow key={inv.id} className=\"group\">\n                                <TableCell className=\"text-muted-foreground\">\n                                    <div className=\"inline-flex items-center gap-2\">\n                                        <CalendarDays className=\"h-3.5 w-3.5\" />\n                                        {inv.date}\n                                    </div>\n                                </TableCell>\n                                <TableCell className=\"max-w-[320px]\">\n                                    <div className=\"truncate\" title={inv.description || \"Invoice\"}>\n                                        {inv.description || \"Invoice\"}\n                                    </div>\n                                </TableCell>\n                                <TableCell className=\"text-right font-medium\">\n                                    {inv.amount}\n                                </TableCell>\n                                <TableCell className=\"text-right\">\n                                    {statusBadge(inv.status)}\n                                </TableCell>\n                                <TableCell className=\"text-right\">\n                                    <Button\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        className=\"h-8 text-xs\"\n                                        onClick={() =>\n                                            inv.invoiceUrl\n                                                ? window.open(inv.invoiceUrl, \"_blank\", \"noopener,noreferrer\")\n                                                : onDownload?.(inv.id)\n                                        }\n                                        aria-label={`Download invoice ${inv.id}`}\n                                    >\n                                        <Download className=\"h-3.5 w-3.5\" />\n                                        Download\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </CardContent>\n        </Card>\n    )\n}\n\n\n",
      "type": "registry:component",
      "target": "components/billingsdk/invoice-history.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/invoice-history-demo.tsx",
      "content": "'use client'\n\nimport { InvoiceHistory, type InvoiceItem } from '@/components/billingsdk/invoice-history';\n\nexport default function InvoiceHistoryDemo() {\n  const invoices: InvoiceItem[] = [\n    { id: 'inv_001', date: '2025-06-01', amount: '$49.00', status: 'paid', description: 'Pro plan — May 2025', invoiceUrl: 'https://example.com/invoices/inv_001.pdf' },\n    { id: 'inv_002', date: '2025-05-01', amount: '$49.00', status: 'paid', description: 'Pro plan — April 2025', invoiceUrl: 'https://example.com/invoices/inv_002.pdf' },\n    { id: 'inv_003', date: '2025-04-01', amount: '$49.00', status: 'refunded', description: 'Pro plan — March 2025' },\n    { id: 'inv_004', date: '2025-03-01', amount: '$49.00', status: 'open', description: 'Pro plan — February 2025' },\n  ];\n\n  return (\n    <div className=\"w-full\">\n      <InvoiceHistory invoices={invoices} />\n    </div>\n  );\n}\n\n\n",
      "type": "registry:component",
      "target": "components/invoice-history-demo.tsx"
    }
  ]
}