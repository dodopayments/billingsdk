{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "invoice-history",
  "type": "registry:block",
  "title": "Invoice History",
  "description": "A read-only invoice history table",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "card",
    "button",
    "table",
    "badge",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/invoice-history.tsx",
      "content": "\"use client\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardDescription,\r\n    CardHeader,\r\n    CardTitle,\r\n} from \"@/components/ui/card\"\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableCaption,\r\n    TableHead,\r\n    TableHeader,\r\n    TableRow,\r\n} from \"@/components/ui/table\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { CalendarDays, Download, ReceiptText } from \"lucide-react\"\r\nimport { Button } from \"@/components/ui/button\"\r\n\r\nexport interface InvoiceItem {\r\n    id: string\r\n    date: string\r\n    amount: string\r\n    status: \"paid\" | \"refunded\" | \"open\" | \"void\"\r\n    invoiceUrl?: string\r\n    description?: string\r\n}\r\n\r\ninterface InvoiceHistoryProps {\r\n    className?: string\r\n    title?: string\r\n    description?: string\r\n    invoices: InvoiceItem[]\r\n    onDownload?: (invoiceId: string) => void\r\n}\r\n\r\nexport function InvoiceHistory({\r\n    className,\r\n    title = \"Invoice History\",\r\n    description = \"Your past invoices and payment receipts.\",\r\n    invoices,\r\n    onDownload,\r\n}: InvoiceHistoryProps) {\r\n    if (!invoices) return null\r\n\r\n    const statusBadge = (status: InvoiceItem[\"status\"]) => {\r\n        switch (status) {\r\n            case \"paid\":\r\n                return <Badge className=\"bg-emerald-600 text-emerald-50 border-emerald-700/40\">Paid</Badge>\r\n            case \"refunded\":\r\n                return <Badge variant=\"secondary\">Refunded</Badge>\r\n            case \"open\":\r\n                return <Badge variant=\"outline\">Open</Badge>\r\n            case \"void\":\r\n                return <Badge variant=\"outline\">Void</Badge>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className={cn(\"w-full\", className)}>\r\n            {(title || description) && (\r\n                <CardHeader className=\"space-y-1\">\r\n                    {title && (\r\n                        <CardTitle className=\"text-base font-medium leading-tight truncate flex items-center gap-2 sm:gap-3 text-lg sm:text-xl\">\r\n                            <ReceiptText className=\"h-4 w-4 text-primary\" />\r\n                            {title}\r\n                        </CardTitle>\r\n                    )}\r\n                    {description && (\r\n                        <CardDescription className=\"text-sm text-muted-foreground\">\r\n                            {description}\r\n                        </CardDescription>\r\n                    )}\r\n                </CardHeader>\r\n            )}\r\n            <CardContent>\r\n                <Table>\r\n                    <TableCaption className=\"sr-only\">List of past invoices with dates, amounts, status and download actions</TableCaption>\r\n                    <TableHeader>\r\n                        <TableRow>\r\n                            <TableHead className=\"w-[120px]\">Date</TableHead>\r\n                            <TableHead>Description</TableHead>\r\n                            <TableHead className=\"text-right\">Amount</TableHead>\r\n                            <TableHead className=\"text-right\">Status</TableHead>\r\n                            <TableHead className=\"text-right\">Action</TableHead>\r\n                        </TableRow>\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                        {invoices.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell colSpan={5} className=\"h-24 text-center text-muted-foreground\">\r\n                                    No invoices yet\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                        {invoices.map((inv) => (\r\n                            <TableRow key={inv.id} className=\"group\">\r\n                                <TableCell className=\"text-muted-foreground\">\r\n                                    <div className=\"inline-flex items-center gap-2\">\r\n                                        <CalendarDays className=\"h-3.5 w-3.5\" />\r\n                                        {inv.date}\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell className=\"max-w-[320px]\">\r\n                                    <div className=\"truncate\" title={inv.description || \"Invoice\"}>\r\n                                        {inv.description || \"Invoice\"}\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell className=\"text-right font-medium\">\r\n                                    {inv.amount}\r\n                                </TableCell>\r\n                                <TableCell className=\"text-right\">\r\n                                    {statusBadge(inv.status)}\r\n                                </TableCell>\r\n                                <TableCell className=\"text-right\">\r\n                                    <Button\r\n                                        variant=\"outline\"\r\n                                        size=\"sm\"\r\n                                        className=\"h-8 text-xs\"\r\n                                        onClick={() =>\r\n                                            inv.invoiceUrl\r\n                                                ? window.open(inv.invoiceUrl, \"_blank\", \"noopener,noreferrer\")\r\n                                                : onDownload?.(inv.id)\r\n                                        }\r\n                                        aria-label={`Download invoice ${inv.id}`}\r\n                                    >\r\n                                        <Download className=\"h-3.5 w-3.5\" />\r\n                                        Download\r\n                                    </Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\n",
      "type": "registry:component",
      "target": "components/billingsdk/invoice-history.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/invoice-history-demo.tsx",
      "content": "'use client'\r\n\r\nimport { InvoiceHistory, type InvoiceItem } from '@/components/billingsdk/invoice-history';\r\n\r\nexport default function InvoiceHistoryDemo() {\r\n  const invoices: InvoiceItem[] = [\r\n    { id: 'inv_001', date: '2025-06-01', amount: '$49.00', status: 'paid', description: 'Pro plan — May 2025', invoiceUrl: 'https://example.com/invoices/inv_001.pdf' },\r\n    { id: 'inv_002', date: '2025-05-01', amount: '$49.00', status: 'paid', description: 'Pro plan — April 2025', invoiceUrl: 'https://example.com/invoices/inv_002.pdf' },\r\n    { id: 'inv_003', date: '2025-04-01', amount: '$49.00', status: 'refunded', description: 'Pro plan — March 2025' },\r\n    { id: 'inv_004', date: '2025-03-01', amount: '$49.00', status: 'open', description: 'Pro plan — February 2025' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <InvoiceHistory invoices={invoices} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n",
      "type": "registry:component",
      "target": "components/invoice-history-demo.tsx"
    }
  ]
}