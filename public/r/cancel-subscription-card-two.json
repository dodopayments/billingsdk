{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cancel-subscription-card-two",
  "type": "registry:block",
  "title": "Cancel Subscription Card",
  "description": "A modern cancel subscription card component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "badge",
    "card",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/cancel-subscription-card-two.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { type Plan } from \"@/lib/billingsdk-config\";\nimport { cn } from \"@/lib/utils\";\nimport { ChevronDown, Circle } from \"lucide-react\";\nimport { BiSupport } from \"react-icons/bi\";\n\nexport interface CancelSubscriptionCardTwoProps {\n    title: string;\n    description: string;\n    plan: Plan;\n    warningText?: string;\n    supportText?: string;\n    supportLink?:string;\n    keepButtonText?: string;\n    continueButtonText?: string;\n    finalTitle?: string;\n    finalSubtitle?: string;\n    goBackButtonText?: string;\n    confirmButtonText?: string;\n    onCancel: (planId: string) => Promise<void> | void;\n    onKeepSubscription?: (planId: string) => Promise<void> | void;\n    className?: string;\n}\n\nexport function CancelSubscriptionCardTwo({\n    title,\n    description,\n    plan,\n    warningText,\n    supportText,\n    keepButtonText,\n    continueButtonText,\n    finalTitle,\n    finalSubtitle,\n    supportLink,\n    goBackButtonText,\n    confirmButtonText,\n    onCancel,\n    onKeepSubscription,\n    className,\n}: CancelSubscriptionCardTwoProps) {\n    const [showFinalConfirmation, setShowFinalConfirmation] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [showBenefits, setShowBenefits] = useState(true); // collapse \n\n    const handleContinueCancellation = () => {\n        setShowFinalConfirmation(true);\n        setError(null);\n    };\n\n    const handleKeepSubscription = async () => {\n        try {\n            setIsLoading(true);\n            setError(null);\n            if (onKeepSubscription) {\n                await onKeepSubscription(plan.id);\n            }\n        } catch (err) {\n            setError(err instanceof Error ? err.message : 'Failed to keep subscription');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleBack = () => {\n        setShowFinalConfirmation(false);\n        setError(null);\n    };\n\n    const handleConfirmCancellation = async () => {\n        try {\n            setIsLoading(true);\n            setError(null);\n            if (onCancel) {\n                await onCancel(plan.id);\n            }\n        } catch (err) {\n            setError(err instanceof Error ? err.message : 'Failed to cancel subscription');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <Card className={cn(\"max-w-2xl mx-auto w-full\", className)}>\n            <CardHeader className=\"space-y-4\">\n                <CardTitle className=\"text-lg sm:text-xl\">{title}</CardTitle>\n                <p className=\"text-sm text-muted-foreground\">{description}</p>\n                {error && (\n                    <div className=\"p-3 bg-destructive/10 border border-destructive/20 rounded-md\">\n                        <p className=\"text-sm text-destructive\">{error}</p>\n                    </div>\n                )}\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              \n                {/* Subscription Details */}\n                {!showFinalConfirmation && (\n                    <div className=\"flex flex-col gap-4 p-4 bg-muted/50 rounded-lg\">\n                        <div className=\"flex items-center justify-between\">\n                            <div className=\"flex flex-col gap-1\">\n                                <span className=\"font-semibold text-lg\">{plan.title} Plan</span>\n                                <span className=\"text-sm text-muted-foreground\">Current subscription</span>\n                            </div>\n                            <Badge variant=\"secondary\">\n                                {parseFloat(plan.monthlyPrice) >= 0 ? `${plan.currency}${plan.monthlyPrice}/monthly` : `${plan.monthlyPrice}/monthly`}\n                            </Badge>\n                        </div>\n                        <div className=\"flex flex-col gap-2\">\n                            <Button \n                                variant=\"ghost\"\n                                className=\"w-full justify-between p-0 h-auto font-medium text-sm hover:bg-transparent\"\n                                onClick={() => setShowBenefits(!showBenefits)}\n                            >\n                                <span>Your Current Plan Benefits</span>\n                                <ChevronDown className={cn(\"w-4 h-4 transition-transform\", showBenefits && \"rotate-180\")} />\n                            </Button>\n                            {showBenefits && (\n                                <div className=\"space-y-2 pl-2\">\n                                    {plan.features.slice(0, 4).map((feature, index) => (\n                                        <div key={index} className=\"flex items-center gap-2\">\n                                            <Circle className=\"w-2 h-2 fill-primary text-primary\" />\n                                            <span className=\"text-sm text-muted-foreground\">{feature.name}</span>\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                )}\n\n                {/* Support Section */}\n                {!showFinalConfirmation && (supportText || supportLink) && (\n                    <div className=\"rounded-lg border p-4 bg-muted/10\">\n                        {supportText && (\n                            <p className=\"text-sm text-muted-foreground mb-3\">{supportText}</p>\n                        )}\n                        {supportLink && (\n                            <div className=\"flex items-center gap-2\">\n                                <BiSupport className=\"w-4 h-4 text-muted-foreground\" />\n                                <a \n                                    href={supportLink}\n                                    className=\"text-sm text-muted-foreground hover:text-primary transition-colors\"\n                                >\n                                    Contact Support\n                                </a>\n                            </div>\n                        )}\n                    </div>\n                )}\n\n                {!showFinalConfirmation ? (\n                    <div className=\"flex flex-col sm:flex-row gap-3\">\n                        <Button\n                            className=\"flex-1\"\n                            onClick={handleKeepSubscription}\n                            disabled={isLoading}\n                        >\n                            {isLoading ? \"Processing...\" : (keepButtonText || \"Keep My Subscription\")}\n                        </Button>\n                        <Button\n                            variant=\"destructive\"\n                            className=\"flex-1\"\n                            onClick={handleContinueCancellation}\n                            disabled={isLoading}\n                        >\n                            {continueButtonText || \"Continue Cancellation\"}\n                        </Button>\n                    </div>\n                ) : (\n                    <div className=\"flex flex-col gap-4\">\n                        <div className=\"text-center p-4 bg-muted/50 rounded-lg\">\n                            <h3 className=\"font-semibold mb-2 text-foreground\">\n                                {finalTitle || \"Final Step - Confirm Cancellation\"}\n                            </h3>\n                            <p className=\"text-sm text-muted-foreground mb-2\">\n                                {finalSubtitle || \"You'll lose access to all Pro features and your data will be permanently deleted after 30 days.\"}\n                            </p>\n                            <p className=\"text-sm text-destructive\">\n                                {warningText || \"This action cannot be undone and you'll lose access to all premium features.\"}\n                            </p>\n                        </div>\n                        <div className=\"flex flex-col sm:flex-row gap-3\">\n                            <Button\n                                variant=\"outline\"\n                                className=\"flex-1\"\n                                onClick={handleBack}\n                                disabled={isLoading}\n                            >\n                                {goBackButtonText || \"Go Back\"}\n                            </Button>\n                            <Button\n                                variant=\"destructive\"\n                                className=\"flex-1\"\n                                onClick={handleConfirmCancellation}\n                                disabled={isLoading}\n                            >\n                                {isLoading ? \"Cancelling...\" : (confirmButtonText || \"Yes, Cancel Subscription\")}\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            </CardContent>\n        </Card>\n    )\n}",
      "type": "registry:component",
      "target": "components/billingsdk/cancel-subscription-card-two.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/cancel-subscription-card-two-demo.tsx",
      "content": "\"use client\";\n\nimport { CancelSubscriptionCardTwo } from \"@/components/billingsdk/cancel-subscription-card-two\";\nimport { plans } from \"@/lib/billingsdk-config\";\n\n\nexport function CancelSubscriptionCardTwoDemo() {\n    return(\n        <div className=\"flex flex-1 flex-col justify-center items-center p-4 min-h-[400px]\">\n            <CancelSubscriptionCardTwo\n                title=\"We're sorry to see you go...\"\n                description={`Before you cancel, we hope you'll consider upgrading to a ${plans[1].title} plan again.`}\n                plan={plans[1]}\n                warningText=\"If you cancel your subscription, you will lose access to your account and all your data will be deleted.\"\n                supportText=\"Need help? Our team is here to assist you.\"\n                supportLink=\"https://google.com/\"\n                finalTitle=\"Final Step - Confirm Cancellation\"\n                finalSubtitle=\"You'll lose access to all Pro features and your data will be permanently deleted after 30 days.\"\n                keepButtonText={`Keep My ${plans[1].title} Plan`}\n                continueButtonText=\"Continue with Cancellation\"\n                goBackButtonText=\"Wait, Go Back\"\n                confirmButtonText=\"Yes, Cancel My Subscription\"\n                onCancel={async (planId) => {\n                    console.log('cancel subscription', planId);\n                    return new Promise((resolve) => {\n                        setTimeout(() => {\n                            resolve(void 0);\n                        }, 2000); \n                    });\n                }}\n                onKeepSubscription={async (planId) => {\n                    console.log('keep subscription', planId);\n                    return new Promise((resolve) => {\n                        setTimeout(() => {\n                            resolve(void 0);\n                        }, 1000);\n                    });\n                }}\n            />\n        </div>\n    )\n}",
      "type": "registry:component",
      "target": "components/cancel-subscription-card-two-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\r\n    id: string\r\n    title: string\r\n    description: string\r\n    highlight?: boolean\r\n    type?: 'monthly' | 'yearly'\r\n    currency?: string\r\n    monthlyPrice: string\r\n    yearlyPrice: string\r\n    buttonText: string\r\n    badge?: string\r\n    features: {\r\n        name: string\r\n        icon: string\r\n        iconColor?: string\r\n    }[]\r\n}\r\n\r\nexport interface CurrentPlan {\r\n    plan: Plan\r\n    type: 'monthly' | 'yearly' | 'custom'\r\n    price?: string\r\n    nextBillingDate: string\r\n    paymentMethod: string\r\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\r\n}\r\n\r\nexport const plans: Plan[] = [\r\n    {\r\n        id: 'starter',\r\n        title: 'Starter',\r\n        description: 'For developers testing out Liveblocks locally.',\r\n        currency: '$',\r\n        monthlyPrice: '0',\r\n        yearlyPrice: '0',\r\n        buttonText: 'Start today for free',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'pro',\r\n        title: 'Pro',\r\n        description: 'For companies adding collaboration in production.',\r\n        currency: '$',\r\n        monthlyPrice: '20',\r\n        yearlyPrice: '199',\r\n        buttonText: 'Sign up',\r\n        badge: 'Most popular',\r\n        highlight: true,\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'enterprise',\r\n        title: 'Enterprise',\r\n        description: 'For organizations that need more support and compliance features.',\r\n        currency: '$',\r\n        monthlyPrice: 'Custom',\r\n        yearlyPrice: 'Custom',\r\n        buttonText: 'Contact sales',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    }\r\n];\r\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}