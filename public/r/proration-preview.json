{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "proration-preview",
  "type": "registry:block",
  "title": "Proration Preview",
  "description": "Interactive component that shows billing adjustments when users change subscription plans, featuring cost breakdowns, credits, and prorated charges",
  "dependencies": [
    "lucide-react",
    "class-variance-authority",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "card",
    "badge",
    "separator",
    "tabs",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/proration-preview.tsx",
      "content": "\"use client\";\r\n\r\nimport { motion } from \"motion/react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { ArrowRight, Calendar, CreditCard, Calculator, Clock } from \"lucide-react\";\r\nimport { type Plan, type CurrentPlan } from \"@/lib/billingsdk-config\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nconst prorationPreviewVariants = cva(\"w-full max-w-4xl mx-auto\", {\r\n  variants: {\r\n    theme: {\r\n      minimal: \"\",\r\n      classic: \"relative overflow-hidden rounded-xl border border-border/50 bg-gradient-to-br from-card/50 to-muted/30 backdrop-blur-sm\",\r\n    },\r\n    size: {\r\n      small: \"text-sm\",\r\n      medium: \"text-base\", \r\n      large: \"text-lg\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    theme: \"minimal\",\r\n    size: \"medium\",\r\n  },\r\n});\r\n\r\nconst cardVariants = cva(\"transition-all duration-300\", {\r\n  variants: {\r\n    theme: {\r\n      minimal: \"border border-border bg-card\",\r\n      classic: \"border border-border/30 bg-gradient-to-br from-card/80 to-muted/20 backdrop-blur-sm shadow-lg\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    theme: \"minimal\",\r\n  },\r\n});\r\n\r\nexport interface ProrationPreviewProps extends VariantProps<typeof prorationPreviewVariants> {\r\n  className?: string;\r\n  currentPlan: CurrentPlan;\r\n  newPlan: Plan;\r\n  billingCycle: 'monthly' | 'yearly';\r\n  daysRemaining?: number;\r\n  effectiveDate?: string;\r\n  onConfirm?: () => void;\r\n  onCancel?: () => void;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n}\r\n\r\nexport function ProrationPreview({\r\n  className,\r\n  currentPlan,\r\n  newPlan,\r\n  billingCycle,\r\n  daysRemaining = 15,\r\n  effectiveDate = \"immediately\",\r\n  onConfirm,\r\n  onCancel,\r\n  confirmText = \"Confirm Change\",\r\n  cancelText = \"Cancel\",\r\n  theme = \"minimal\",\r\n  size = \"medium\",\r\n}: ProrationPreviewProps) {\r\n  \r\n  // Prices & proration (robust) - Fixed CodeRabbit issues\r\n  const currentCycleDays = currentPlan.type === 'yearly' ? 365 : 30;\r\n  const newCycleDays = billingCycle === 'yearly' ? 365 : 30;\r\n  const isNumericValue = (v?: string) => {\r\n    if (v == null) return false;\r\n    const s = String(v).replace(/[^\\d.\\-]/g, \"\");\r\n    const n = Number.parseFloat(s);\r\n    return Number.isFinite(n);\r\n  };\r\n  const toNumber = (v?: string) => {\r\n    if (v == null) return undefined;\r\n    const s = String(v).replace(/[^\\d.\\-]/g, \"\");\r\n    const n = Number.parseFloat(s);\r\n    return Number.isFinite(n) ? n : undefined;\r\n  };\r\n  const currentRaw =\r\n    currentPlan.type === 'monthly' ? currentPlan.plan.monthlyPrice :\r\n    currentPlan.type === 'yearly' ? currentPlan.plan.yearlyPrice :\r\n    currentPlan.price;\r\n  const newRaw = billingCycle === 'monthly' ? newPlan.monthlyPrice : newPlan.yearlyPrice;\r\n  const currentPrice = toNumber(currentRaw);\r\n  const newPrice = toNumber(newRaw);\r\n  const isCustomCurrent = !isNumericValue(currentRaw);\r\n  const isCustomNew = !isNumericValue(newRaw);\r\n  const chargeCurrency = newPlan.currency ?? currentPlan.plan.currency ?? \"$\";\r\n  const creditCurrency = currentPlan.plan.currency ?? newPlan.currency ?? \"$\";\r\n  const clampedUnusedDays = Math.max(0, Math.min(daysRemaining, currentCycleDays));\r\n  const isNextCycle = typeof effectiveDate === 'string' && effectiveDate.toLowerCase().includes('next');\r\n  \r\n  const prorationDays = isNextCycle ? 0 : clampedUnusedDays;\r\n  const canCompute = !isNextCycle && !isCustomCurrent && !isCustomNew && currentPrice !== undefined && newPrice !== undefined;\r\n  const creditAmount = canCompute ? (currentPrice! / currentCycleDays) * clampedUnusedDays : 0;\r\n  const proratedCharge = canCompute ? (newPrice! / newCycleDays) * prorationDays : 0;\r\n  const netAmount = proratedCharge - creditAmount;\r\n  \r\n  const normalizedCurrentMonthly = currentPlan.type === 'yearly' && currentPrice !== undefined ? currentPrice / 12 : (currentPrice ?? 0);\r\n  const normalizedNewMonthly = billingCycle === 'yearly' && newPrice !== undefined ? newPrice / 12 : (newPrice ?? 0);\r\n  const hasComparablePrices = !isCustomCurrent && !isCustomNew && currentPrice !== undefined && newPrice !== undefined;\r\n  const isUpgrade = hasComparablePrices && normalizedNewMonthly > normalizedCurrentMonthly;\r\n  const isDowngrade = hasComparablePrices && normalizedNewMonthly < normalizedCurrentMonthly;\r\n\r\n  return (\r\n    <div className={cn(prorationPreviewVariants({ theme, size }), className)}>\r\n      {theme === \"classic\" && (\r\n        <>\r\n          <div className=\"absolute inset-0 bg-grid-pattern opacity-5\" />\r\n          <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-64 h-64 bg-primary/5 rounded-full blur-3xl\" />\r\n        </>\r\n      )}\r\n      \r\n      <Card className={cn(cardVariants({ theme }))}>\r\n        <CardHeader className=\"pb-4\">\r\n          <CardTitle className=\"flex items-center gap-2 text-xl\">\r\n            <div className=\"p-2 rounded-lg bg-primary/10 ring-1 ring-primary/20\">\r\n              <Calculator className=\"h-5 w-5 text-primary\" />\r\n            </div>\r\n            Plan Change Preview\r\n          </CardTitle>\r\n          <p className=\"text-muted-foreground\">\r\n            Review the charges and credits for your plan change\r\n          </p>\r\n        </CardHeader>\r\n\r\n        <CardContent className=\"space-y-6\">\r\n          {/* From/To Plans */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-center\">\r\n            {/* Current Plan */}\r\n            <motion.div\r\n              initial={{ opacity: 0, x: -20 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              className={cn(\r\n                \"p-4 rounded-lg border\",\r\n                theme === \"classic\" \r\n                  ? \"bg-gradient-to-br from-muted/50 to-background/50 border-border/50\"\r\n                  : \"bg-muted/50 border-border\"\r\n              )}\r\n            >\r\n              <div className=\"flex items-center gap-2 mb-2\">\r\n                <Badge variant=\"outline\" className=\"text-xs\">Current</Badge>\r\n                {isDowngrade && (\r\n                  <Badge variant=\"secondary\" className=\"text-xs bg-orange-500/10 text-orange-700 border-orange-200\">\r\n                    Downgrading\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n              <h3 className=\"font-semibold text-lg\">{currentPlan.plan.title}</h3>\r\n              <p className=\"text-sm text-muted-foreground mb-3\">\r\n                {isCustomCurrent ? 'Custom' : `${creditCurrency}${currentPrice}/${currentPlan.type}`}\r\n              </p>\r\n              <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\r\n                <Clock className=\"h-3 w-3\" />\r\n                {daysRemaining} days remaining\r\n              </div>\r\n            </motion.div>\r\n\r\n            {/* Arrow */}\r\n            <div className=\"flex justify-center\">\r\n              <motion.div\r\n                initial={{ scale: 0 }}\r\n                animate={{ scale: 1 }}\r\n                transition={{ duration: 0.3, delay: 0.2 }}\r\n                className={cn(\r\n                  \"p-2 rounded-full\",\r\n                  theme === \"classic\" \r\n                    ? \"bg-gradient-to-r from-primary to-primary/80 text-primary-foreground shadow-lg\"\r\n                    : \"bg-primary/10 text-primary\"\r\n                )}\r\n              >\r\n                <ArrowRight className=\"h-4 w-4\" />\r\n              </motion.div>\r\n            </div>\r\n\r\n            {/* New Plan */}\r\n            <motion.div\r\n              initial={{ opacity: 0, x: 20 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.3, delay: 0.1 }}\r\n              className={cn(\r\n                \"p-4 rounded-lg border\",\r\n                theme === \"classic\"\r\n                  ? \"bg-gradient-to-br from-primary/5 to-primary/10 border-primary/30\"\r\n                  : \"bg-primary/5 border-primary/30\"\r\n              )}\r\n            >\r\n              <div className=\"flex items-center gap-2 mb-2\">\r\n                <Badge variant=\"default\" className=\"text-xs\">New Plan</Badge>\r\n                {isUpgrade && (\r\n                  <Badge variant=\"secondary\" className=\"text-xs bg-green-500/10 text-green-700 border-green-200\">\r\n                    Upgrading\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n              <h3 className=\"font-semibold text-lg\">{newPlan.title}</h3>\r\n              <p className=\"text-sm text-muted-foreground mb-3\">\r\n                {isCustomNew ? 'Custom' : `${chargeCurrency}${newPrice}/${billingCycle}`}\r\n              </p>\r\n              <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\r\n                <Calendar className=\"h-3 w-3\" />\r\n                Effective {effectiveDate}\r\n              </div>\r\n            </motion.div>\r\n          </div>\r\n\r\n          <Separator className={cn(\r\n            theme === \"classic\" && \"bg-gradient-to-r from-transparent via-border to-transparent\"\r\n          )} />\r\n\r\n          {/* Calculation Breakdown */}\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3, delay: 0.4 }}\r\n            className={cn(\r\n              \"p-4 rounded-lg border\",\r\n              theme === \"classic\"\r\n                ? \"bg-gradient-to-br from-muted/30 to-background/30 border-border/50\"\r\n                : \"bg-muted/30 border-border\"\r\n            )}\r\n          >\r\n            <h4 className=\"font-medium mb-4 flex items-center gap-2\">\r\n              <CreditCard className=\"h-4 w-4\" />\r\n              Billing Breakdown\r\n            </h4>\r\n            \r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-muted-foreground\">Credit for unused time</span>\r\n                <span className=\"text-green-600 font-medium\">\r\n                  {canCompute ? `-${creditCurrency}${Math.abs(creditAmount).toFixed(2)}` : \"—\"}\r\n                </span>\r\n              </div>\r\n              \r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-muted-foreground\">\r\n                  Prorated charge ({prorationDays} days)\r\n                </span>\r\n                <span className=\"font-medium\">\r\n                  {canCompute ? `+${chargeCurrency}${proratedCharge.toFixed(2)}` : \"—\"}\r\n                </span>\r\n              </div>\r\n              \r\n              <Separator className=\"my-2\" />\r\n              \r\n              <div className=\"flex justify-between items-center font-semibold\">\r\n                <span>{canCompute ? (netAmount >= 0 ? \"Amount to charge\" : \"Credit to account\") : \"Amount due will be calculated at checkout\"}</span>\r\n                <span className={cn(\r\n                  \"text-lg\",\r\n                  canCompute ? (netAmount >= 0 ? \"text-foreground\" : \"text-green-600\") : \"text-muted-foreground\"\r\n                )}>\r\n                  {canCompute ? `${netAmount >= 0 ? \"+\" : \"\"}${chargeCurrency}${netAmount.toFixed(2)}` : \"—\"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Timeline */}\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ duration: 0.3, delay: 0.6 }}\r\n            className=\"text-center p-3 bg-muted/20 rounded-lg border border-border/50\"\r\n          >\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              Your plan will change {effectiveDate}. \r\n              {isNextCycle ? ' No immediate charge.' : (hasComparablePrices\r\n                ? (netAmount >= 0\r\n                    ? ` You'll be charged ${chargeCurrency}${Math.abs(netAmount).toFixed(2)}.`\r\n                    : ` You'll receive a ${chargeCurrency}${Math.abs(netAmount).toFixed(2)} credit.`)\r\n                : ' Amount will be finalized at checkout.')}\r\n            </p>\r\n          </motion.div>\r\n\r\n          {/* Action Buttons */}\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3, delay: 0.8 }}\r\n            className=\"flex flex-col sm:flex-row gap-3 pt-4\"\r\n          >\r\n            <Button\r\n              onClick={onConfirm}\r\n              className={cn(\r\n                \"flex-1\",\r\n                theme === \"classic\" && \"bg-gradient-to-r from-primary to-primary/90 hover:shadow-lg active:scale-95 transition-all duration-200\"\r\n              )}\r\n              size=\"lg\"\r\n            >\r\n              {confirmText}\r\n              <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={onCancel}\r\n              className=\"flex-1\"\r\n              size=\"lg\"\r\n            >\r\n              {cancelText}\r\n            </Button>\r\n          </motion.div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}",
      "type": "registry:component",
      "target": "components/billingsdk/proration-preview.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/proration-preview-demo.tsx",
      "content": "\"use client\";\r\n\r\nimport { ProrationPreview } from \"@/components/billingsdk/proration-preview\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\n\r\nconst currentPlan = {\r\n  plan: {\r\n    id: \"pro\",\r\n    title: \"Pro\",\r\n    description: \"Best for small teams\",\r\n    monthlyPrice: \"29.99\",\r\n    yearlyPrice: \"299.99\",\r\n    currency: \"$\",\r\n    buttonText: \"Current Plan\",\r\n    features: [\r\n      { name: \"Advanced features\", icon: \"check\" },\r\n      { name: \"Priority support\", icon: \"check\" },\r\n    ],\r\n  },\r\n  type: \"monthly\" as const,\r\n  price: \"29.99\",\r\n  nextBillingDate: \"2024-01-15\",\r\n  paymentMethod: \"•••• 4242\",\r\n  status: \"active\" as const,\r\n};\r\n\r\nconst yearlyCurrentPlan = {\r\n  plan: {\r\n    id: \"pro-yearly\",\r\n    title: \"Pro\", \r\n    description: \"Best for small teams\",\r\n    monthlyPrice: \"29.99\",\r\n    yearlyPrice: \"299.99\",\r\n    currency: \"$\",\r\n    buttonText: \"Current Plan\",\r\n    features: [\r\n      { name: \"Advanced features\", icon: \"check\" },\r\n      { name: \"Priority support\", icon: \"check\" },\r\n    ],\r\n  },\r\n  type: \"yearly\" as const,\r\n  price: \"299.99\",\r\n  nextBillingDate: \"2024-12-15\",\r\n  paymentMethod: \"•••• 4242\",\r\n  status: \"active\" as const,\r\n};\r\n\r\nconst basicPlan = {\r\n  id: \"basic\",\r\n  title: \"Basic\",\r\n  description: \"Perfect for getting started\",\r\n  monthlyPrice: \"9.99\",\r\n  yearlyPrice: \"99.99\", \r\n  currency: \"$\",\r\n  buttonText: \"Downgrade\",\r\n  features: [\r\n    { name: \"Basic features\", icon: \"check\" },\r\n    { name: \"Email support\", icon: \"check\" },\r\n  ],\r\n};\r\n\r\nconst enterprisePlan = {\r\n  id: \"enterprise\",\r\n  title: \"Enterprise\",\r\n  description: \"For large organizations\",\r\n  monthlyPrice: \"99.99\",\r\n  yearlyPrice: \"999.99\",\r\n  currency: \"$\",\r\n  buttonText: \"Upgrade\",\r\n  features: [\r\n    { name: \"All features\", icon: \"check\" },\r\n    { name: \"Priority support\", icon: \"check\" },\r\n    { name: \"Custom integrations\", icon: \"check\" },\r\n  ],\r\n};\r\n\r\nconst customPlan = {\r\n  id: \"custom\",\r\n  title: \"Custom\",\r\n  description: \"Tailored for your needs\",\r\n  monthlyPrice: \"Custom\",\r\n  yearlyPrice: \"Custom\",\r\n  currency: \"$\",\r\n  buttonText: \"Contact Sales\",\r\n  features: [\r\n    { name: \"Custom features\", icon: \"check\" },\r\n    { name: \"Dedicated support\", icon: \"check\" },\r\n  ],\r\n};\r\n\r\nexport function ProrationPreviewDemo() {\r\n  return (\r\n    <div className=\"space-y-8\">\r\n\r\n      <Tabs defaultValue=\"upgrade\" className=\"w-full\">\r\n        <TabsList className=\"grid w-full grid-cols-4\">\r\n          <TabsTrigger value=\"upgrade\">Upgrade</TabsTrigger>\r\n          <TabsTrigger value=\"downgrade\">Downgrade</TabsTrigger>\r\n          <TabsTrigger value=\"cycle-change\">Cycle Change</TabsTrigger>\r\n          <TabsTrigger value=\"next-cycle\">Next Cycle</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"upgrade\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Monthly to Enterprise Upgrade</CardTitle>\r\n              <CardDescription>\r\n                Upgrading from Pro monthly to Enterprise monthly with 15 days remaining\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ProrationPreview\r\n                currentPlan={currentPlan}\r\n                newPlan={enterprisePlan}\r\n                billingCycle=\"monthly\"\r\n                daysRemaining={15}\r\n                effectiveDate=\"immediately\"\r\n                theme=\"minimal\"\r\n                onConfirm={() => console.log(\"Upgrade confirmed\")}\r\n                onCancel={() => console.log(\"Upgrade cancelled\")}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"downgrade\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Enterprise to Basic Downgrade</CardTitle>\r\n              <CardDescription>\r\n                Downgrading from Enterprise to Basic with account credit\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ProrationPreview\r\n                currentPlan={{\r\n                  plan: enterprisePlan,\r\n                  type: \"monthly\",\r\n                  price: \"99.99\",\r\n                  nextBillingDate: \"2024-01-15\",\r\n                  paymentMethod: \"•••• 4242\",\r\n                  status: \"active\",\r\n                }}\r\n                newPlan={basicPlan}\r\n                billingCycle=\"monthly\"\r\n                daysRemaining={20}\r\n                effectiveDate=\"immediately\"\r\n                theme=\"minimal\"\r\n                onConfirm={() => console.log(\"Downgrade confirmed\")}\r\n                onCancel={() => console.log(\"Downgrade cancelled\")}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"cycle-change\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Monthly to Yearly Switch</CardTitle>\r\n              <CardDescription>\r\n                Switching from monthly to yearly billing for the same plan\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ProrationPreview\r\n                currentPlan={currentPlan}\r\n                newPlan={currentPlan.plan}\r\n                billingCycle=\"yearly\"\r\n                daysRemaining={10}\r\n                effectiveDate=\"immediately\"\r\n                theme=\"minimal\"\r\n                onConfirm={() => console.log(\"Cycle change confirmed\")}\r\n                onCancel={() => console.log(\"Cycle change cancelled\")}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Yearly to Monthly Switch</CardTitle>\r\n              <CardDescription>\r\n                Switching from yearly to monthly billing\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ProrationPreview\r\n                currentPlan={yearlyCurrentPlan}\r\n                newPlan={yearlyCurrentPlan.plan}\r\n                billingCycle=\"monthly\"\r\n                daysRemaining={120}\r\n                effectiveDate=\"immediately\"\r\n                theme=\"classic\"\r\n                onConfirm={() => console.log(\"Cycle change confirmed\")}\r\n                onCancel={() => console.log(\"Cycle change cancelled\")}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"next-cycle\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Next Cycle Change</CardTitle>\r\n              <CardDescription>\r\n                Plan change effective at the next billing cycle with no immediate charge\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ProrationPreview\r\n                currentPlan={currentPlan}\r\n                newPlan={enterprisePlan}\r\n                billingCycle=\"monthly\"\r\n                daysRemaining={25}\r\n                effectiveDate=\"next billing cycle\"\r\n                theme=\"minimal\"\r\n                onConfirm={() => console.log(\"Next cycle change confirmed\")}\r\n                onCancel={() => console.log(\"Next cycle change cancelled\")}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Custom Pricing Scenario</CardTitle>\r\n              <CardDescription>\r\n                Handling custom/enterprise pricing that doesn't follow standard rates\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ProrationPreview\r\n                currentPlan={currentPlan}\r\n                newPlan={customPlan}\r\n                billingCycle=\"monthly\"\r\n                daysRemaining={12}\r\n                effectiveDate=\"next billing cycle\"\r\n                theme=\"classic\"\r\n                onConfirm={() => console.log(\"Custom plan confirmed\")}\r\n                onCancel={() => console.log(\"Custom plan cancelled\")}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}",
      "type": "registry:component",
      "target": "components/proration-preview-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\r\n    id: string\r\n    title: string\r\n    description: string\r\n    highlight?: boolean\r\n    type?: 'monthly' | 'yearly'\r\n    currency?: string\r\n    monthlyPrice: string\r\n    yearlyPrice: string\r\n    buttonText: string\r\n    badge?: string\r\n    features: {\r\n        name: string\r\n        icon: string\r\n        iconColor?: string\r\n    }[]\r\n}\r\n\r\nexport interface CurrentPlan {\r\n    plan: Plan\r\n    type: 'monthly' | 'yearly' | 'custom'\r\n    price?: string\r\n    nextBillingDate: string\r\n    paymentMethod: string\r\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\r\n}\r\n\r\nexport const plans: Plan[] = [\r\n    {\r\n        id: 'starter',\r\n        title: 'Starter',\r\n        description: 'For developers testing out Liveblocks locally.',\r\n        currency: '$',\r\n        monthlyPrice: '0',\r\n        yearlyPrice: '0',\r\n        buttonText: 'Start today for free',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'pro',\r\n        title: 'Pro',\r\n        description: 'For companies adding collaboration in production.',\r\n        currency: '$',\r\n        monthlyPrice: '20',\r\n        yearlyPrice: '199',\r\n        buttonText: 'Sign up',\r\n        badge: 'Most popular',\r\n        highlight: true,\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'enterprise',\r\n        title: 'Enterprise',\r\n        description: 'For organizations that need more support and compliance features.',\r\n        currency: '$',\r\n        monthlyPrice: 'Custom',\r\n        yearlyPrice: 'Custom',\r\n        buttonText: 'Contact sales',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    }\r\n];\r\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}