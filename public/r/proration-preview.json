{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "proration-preview",
  "type": "registry:block",
  "title": "Proration Preview",
  "description": "Interactive component that shows billing adjustments when users change subscription plans, featuring cost breakdowns, credits, and prorated charges",
  "dependencies": [
    "lucide-react",
    "class-variance-authority",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "card",
    "badge",
    "separator",
    "tabs",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/proration-preview.tsx",
      "content": "\"use client\";\n\nimport { motion } from \"motion/react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { ArrowRight, Calendar, CreditCard, Calculator, Clock } from \"lucide-react\";\nimport { type Plan, type CurrentPlan } from \"@/lib/billingsdk-config\";\nimport { cn } from \"@/lib/utils\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nconst prorationPreviewVariants = cva(\"w-full max-w-4xl mx-auto\", {\n  variants: {\n    theme: {\n      minimal: \"\",\n      classic: \"relative overflow-hidden rounded-xl border border-border/50 bg-gradient-to-br from-card/50 to-muted/30 backdrop-blur-sm\",\n    },\n    size: {\n      small: \"text-sm\",\n      medium: \"text-base\", \n      large: \"text-lg\",\n    },\n  },\n  defaultVariants: {\n    theme: \"minimal\",\n    size: \"medium\",\n  },\n});\n\nconst cardVariants = cva(\"transition-all duration-300\", {\n  variants: {\n    theme: {\n      minimal: \"border border-border bg-card\",\n      classic: \"border border-border/30 bg-gradient-to-br from-card/80 to-muted/20 backdrop-blur-sm shadow-lg\",\n    },\n  },\n  defaultVariants: {\n    theme: \"minimal\",\n  },\n});\n\nexport interface ProrationPreviewProps extends VariantProps<typeof prorationPreviewVariants> {\n  className?: string;\n  currentPlan: CurrentPlan;\n  newPlan: Plan;\n  billingCycle: 'monthly' | 'yearly';\n  daysRemaining?: number;\n  effectiveDate?: string;\n  onConfirm?: () => void;\n  onCancel?: () => void;\n  confirmText?: string;\n  cancelText?: string;\n}\n\nexport function ProrationPreview({\n  className,\n  currentPlan,\n  newPlan,\n  billingCycle,\n  daysRemaining = 15,\n  effectiveDate = \"immediately\",\n  onConfirm,\n  onCancel,\n  confirmText = \"Confirm Change\",\n  cancelText = \"Cancel\",\n  theme = \"minimal\",\n  size = \"medium\",\n}: ProrationPreviewProps) {\n  \n  // Prices & proration (robust) - Fixed CodeRabbit issues\n  const currentCycleDays = currentPlan.type === 'yearly' ? 365 : 30;\n  const newCycleDays = billingCycle === 'yearly' ? 365 : 30;\n  const toNumber = (v?: string) => {\n    const n = parseFloat(String(v));\n    return Number.isFinite(n) ? n : 0;\n  };\n  const currentPrice = toNumber(\n    currentPlan.type === 'monthly' ? currentPlan.plan.monthlyPrice :\n    currentPlan.type === 'yearly' ? currentPlan.plan.yearlyPrice :\n    currentPlan.price\n  );\n  const newPrice = toNumber(billingCycle === 'monthly' ? newPlan.monthlyPrice : newPlan.yearlyPrice);\n  const chargeCurrency = newPlan.currency ?? currentPlan.plan.currency ?? \"$\";\n  const creditCurrency = currentPlan.plan.currency ?? newPlan.currency ?? \"$\";\n  const clampedUnusedDays = Math.max(0, Math.min(daysRemaining, currentCycleDays));\n  const isNextCycle = typeof effectiveDate === 'string' && effectiveDate.toLowerCase().includes('next');\n  \n  // Fixed: Use remaining days (not elapsed days) for credit calculation\n  const creditAmount = isNextCycle ? 0 : (currentPrice / currentCycleDays) * clampedUnusedDays;\n  const prorationDays = isNextCycle ? 0 : clampedUnusedDays;\n  const proratedCharge = isNextCycle ? 0 : (newPrice / newCycleDays) * prorationDays;\n  const netAmount = proratedCharge - creditAmount;\n  \n  const normalizedCurrentMonthly = currentPlan.type === 'yearly' ? currentPrice / 12 : currentPrice;\n  const normalizedNewMonthly = billingCycle === 'yearly' ? newPrice / 12 : newPrice;\n  const isUpgrade = normalizedNewMonthly > normalizedCurrentMonthly;\n  const isDowngrade = normalizedNewMonthly < normalizedCurrentMonthly;\n\n  return (\n    <div className={cn(prorationPreviewVariants({ theme, size }), className)}>\n      {theme === \"classic\" && (\n        <>\n          <div className=\"absolute inset-0 bg-grid-pattern opacity-5\" />\n          <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-64 h-64 bg-primary/5 rounded-full blur-3xl\" />\n        </>\n      )}\n      \n      <Card className={cn(cardVariants({ theme }))}>\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"flex items-center gap-2 text-xl\">\n            <div className=\"p-2 rounded-lg bg-primary/10 ring-1 ring-primary/20\">\n              <Calculator className=\"h-5 w-5 text-primary\" />\n            </div>\n            Plan Change Preview\n          </CardTitle>\n          <p className=\"text-muted-foreground\">\n            Review the charges and credits for your plan change\n          </p>\n        </CardHeader>\n\n        <CardContent className=\"space-y-6\">\n          {/* From/To Plans */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-center\">\n            {/* Current Plan */}\n            <motion.div\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.3 }}\n              className={cn(\n                \"p-4 rounded-lg border\",\n                theme === \"classic\" \n                  ? \"bg-gradient-to-br from-muted/50 to-background/50 border-border/50\"\n                  : \"bg-muted/50 border-border\"\n              )}\n            >\n              <div className=\"flex items-center gap-2 mb-2\">\n                <Badge variant=\"outline\" className=\"text-xs\">Current</Badge>\n                {isDowngrade && (\n                  <Badge variant=\"secondary\" className=\"text-xs bg-orange-500/10 text-orange-700 border-orange-200\">\n                    Downgrading\n                  </Badge>\n                )}\n              </div>\n              <h3 className=\"font-semibold text-lg\">{currentPlan.plan.title}</h3>\n              <p className=\"text-sm text-muted-foreground mb-3\">\n                {creditCurrency}{currentPrice}/{currentPlan.type}\n              </p>\n              <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                <Clock className=\"h-3 w-3\" />\n                {daysRemaining} days remaining\n              </div>\n            </motion.div>\n\n            {/* Arrow */}\n            <div className=\"flex justify-center\">\n              <motion.div\n                initial={{ scale: 0 }}\n                animate={{ scale: 1 }}\n                transition={{ duration: 0.3, delay: 0.2 }}\n                className={cn(\n                  \"p-2 rounded-full\",\n                  theme === \"classic\" \n                    ? \"bg-gradient-to-r from-primary to-primary/80 text-primary-foreground shadow-lg\"\n                    : \"bg-primary/10 text-primary\"\n                )}\n              >\n                <ArrowRight className=\"h-4 w-4\" />\n              </motion.div>\n            </div>\n\n            {/* New Plan */}\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.3, delay: 0.1 }}\n              className={cn(\n                \"p-4 rounded-lg border\",\n                theme === \"classic\"\n                  ? \"bg-gradient-to-br from-primary/5 to-primary/10 border-primary/30\"\n                  : \"bg-primary/5 border-primary/30\"\n              )}\n            >\n              <div className=\"flex items-center gap-2 mb-2\">\n                <Badge variant=\"default\" className=\"text-xs\">New Plan</Badge>\n                {isUpgrade && (\n                  <Badge variant=\"secondary\" className=\"text-xs bg-green-500/10 text-green-700 border-green-200\">\n                    Upgrading\n                  </Badge>\n                )}\n              </div>\n              <h3 className=\"font-semibold text-lg\">{newPlan.title}</h3>\n              <p className=\"text-sm text-muted-foreground mb-3\">\n                {chargeCurrency}{newPrice}/{billingCycle}\n              </p>\n              <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                <Calendar className=\"h-3 w-3\" />\n                Effective {effectiveDate}\n              </div>\n            </motion.div>\n          </div>\n\n          <Separator className={cn(\n            theme === \"classic\" && \"bg-gradient-to-r from-transparent via-border to-transparent\"\n          )} />\n\n          {/* Calculation Breakdown */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3, delay: 0.4 }}\n            className={cn(\n              \"p-4 rounded-lg border\",\n              theme === \"classic\"\n                ? \"bg-gradient-to-br from-muted/30 to-background/30 border-border/50\"\n                : \"bg-muted/30 border-border\"\n            )}\n          >\n            <h4 className=\"font-medium mb-4 flex items-center gap-2\">\n              <CreditCard className=\"h-4 w-4\" />\n              Billing Breakdown\n            </h4>\n            \n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between items-center text-sm\">\n                <span className=\"text-muted-foreground\">Credit for unused time</span>\n                <span className=\"text-green-600 font-medium\">\n                  -{creditCurrency}{Math.abs(creditAmount).toFixed(2)}\n                </span>\n              </div>\n              \n              <div className=\"flex justify-between items-center text-sm\">\n                <span className=\"text-muted-foreground\">\n                  Prorated charge ({prorationDays} days)\n                </span>\n                <span className=\"font-medium\">\n                  +{chargeCurrency}{proratedCharge.toFixed(2)}\n                </span>\n              </div>\n              \n              <Separator className=\"my-2\" />\n              \n              <div className=\"flex justify-between items-center font-semibold\">\n                <span>\n                  {netAmount >= 0 ? \"Amount to charge\" : \"Credit to account\"}\n                </span>\n                <span className={cn(\n                  \"text-lg\",\n                  netAmount >= 0 ? \"text-foreground\" : \"text-green-600\"\n                )}>\n                  {netAmount >= 0 ? \"+\" : \"\"}{chargeCurrency}{netAmount.toFixed(2)}\n                </span>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Timeline */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.3, delay: 0.6 }}\n            className=\"text-center p-3 bg-muted/20 rounded-lg border border-border/50\"\n          >\n            <p className=\"text-sm text-muted-foreground\">\n              Your plan will change {effectiveDate}. \n              {isNextCycle\n                ? ' No immediate charge.'\n                : (netAmount >= 0\n                    ? ` You'll be charged ${chargeCurrency}${Math.abs(netAmount).toFixed(2)}.`\n                    : ` You'll receive a ${chargeCurrency}${Math.abs(netAmount).toFixed(2)} credit.`)\n              }\n            </p>\n          </motion.div>\n\n          {/* Action Buttons */}\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3, delay: 0.8 }}\n            className=\"flex flex-col sm:flex-row gap-3 pt-4\"\n          >\n            <Button\n              onClick={onConfirm}\n              className={cn(\n                \"flex-1\",\n                theme === \"classic\" && \"bg-gradient-to-r from-primary to-primary/90 hover:shadow-lg active:scale-95 transition-all duration-200\"\n              )}\n              size=\"lg\"\n            >\n              {confirmText}\n              <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Button>\n            <Button\n              variant=\"outline\"\n              onClick={onCancel}\n              className=\"flex-1\"\n              size=\"lg\"\n            >\n              {cancelText}\n            </Button>\n          </motion.div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}",
      "type": "registry:component",
      "target": "components/billingsdk/proration-preview.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/proration-preview-demo.tsx",
      "content": "\"use client\";\n\nimport { ProrationPreview } from \"@/components/billingsdk/proration-preview\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\nconst currentPlan = {\n  plan: {\n    id: \"pro\",\n    title: \"Pro\",\n    description: \"Best for small teams\",\n    monthlyPrice: \"29.99\",\n    yearlyPrice: \"299.99\",\n    currency: \"$\",\n    buttonText: \"Current Plan\",\n    features: [\n      { name: \"Advanced features\", icon: \"check\" },\n      { name: \"Priority support\", icon: \"check\" },\n    ],\n  },\n  type: \"monthly\" as const,\n  price: \"29.99\",\n  nextBillingDate: \"2024-01-15\",\n  paymentMethod: \"•••• 4242\",\n  status: \"active\" as const,\n};\n\nconst yearlyCurrentPlan = {\n  plan: {\n    id: \"pro-yearly\",\n    title: \"Pro\", \n    description: \"Best for small teams\",\n    monthlyPrice: \"29.99\",\n    yearlyPrice: \"299.99\",\n    currency: \"$\",\n    buttonText: \"Current Plan\",\n    features: [\n      { name: \"Advanced features\", icon: \"check\" },\n      { name: \"Priority support\", icon: \"check\" },\n    ],\n  },\n  type: \"yearly\" as const,\n  price: \"299.99\",\n  nextBillingDate: \"2024-12-15\",\n  paymentMethod: \"•••• 4242\",\n  status: \"active\" as const,\n};\n\nconst basicPlan = {\n  id: \"basic\",\n  title: \"Basic\",\n  description: \"Perfect for getting started\",\n  monthlyPrice: \"9.99\",\n  yearlyPrice: \"99.99\", \n  currency: \"$\",\n  buttonText: \"Downgrade\",\n  features: [\n    { name: \"Basic features\", icon: \"check\" },\n    { name: \"Email support\", icon: \"check\" },\n  ],\n};\n\nconst enterprisePlan = {\n  id: \"enterprise\",\n  title: \"Enterprise\",\n  description: \"For large organizations\",\n  monthlyPrice: \"99.99\",\n  yearlyPrice: \"999.99\",\n  currency: \"$\",\n  buttonText: \"Upgrade\",\n  features: [\n    { name: \"All features\", icon: \"check\" },\n    { name: \"Priority support\", icon: \"check\" },\n    { name: \"Custom integrations\", icon: \"check\" },\n  ],\n};\n\nconst customPlan = {\n  id: \"custom\",\n  title: \"Custom\",\n  description: \"Tailored for your needs\",\n  monthlyPrice: \"Custom\",\n  yearlyPrice: \"Custom\",\n  currency: \"$\",\n  buttonText: \"Contact Sales\",\n  features: [\n    { name: \"Custom features\", icon: \"check\" },\n    { name: \"Dedicated support\", icon: \"check\" },\n  ],\n};\n\nexport function ProrationPreviewDemo() {\n  return (\n    <div className=\"space-y-8\">\n\n      <Tabs defaultValue=\"upgrade\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"upgrade\">Upgrade</TabsTrigger>\n          <TabsTrigger value=\"downgrade\">Downgrade</TabsTrigger>\n          <TabsTrigger value=\"cycle-change\">Cycle Change</TabsTrigger>\n          <TabsTrigger value=\"next-cycle\">Next Cycle</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"upgrade\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Monthly to Enterprise Upgrade</CardTitle>\n              <CardDescription>\n                Upgrading from Pro monthly to Enterprise monthly with 15 days remaining\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ProrationPreview\n                currentPlan={currentPlan}\n                newPlan={enterprisePlan}\n                billingCycle=\"monthly\"\n                daysRemaining={15}\n                effectiveDate=\"immediately\"\n                theme=\"minimal\"\n                onConfirm={() => console.log(\"Upgrade confirmed\")}\n                onCancel={() => console.log(\"Upgrade cancelled\")}\n              />\n            </CardContent>\n          </Card>\n\n        </TabsContent>\n\n        <TabsContent value=\"downgrade\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Enterprise to Basic Downgrade</CardTitle>\n              <CardDescription>\n                Downgrading from Enterprise to Basic with account credit\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ProrationPreview\n                currentPlan={{\n                  plan: enterprisePlan,\n                  type: \"monthly\",\n                  price: \"99.99\",\n                  nextBillingDate: \"2024-01-15\",\n                  paymentMethod: \"•••• 4242\",\n                  status: \"active\",\n                }}\n                newPlan={basicPlan}\n                billingCycle=\"monthly\"\n                daysRemaining={20}\n                effectiveDate=\"immediately\"\n                theme=\"minimal\"\n                onConfirm={() => console.log(\"Downgrade confirmed\")}\n                onCancel={() => console.log(\"Downgrade cancelled\")}\n              />\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"cycle-change\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Monthly to Yearly Switch</CardTitle>\n              <CardDescription>\n                Switching from monthly to yearly billing for the same plan\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ProrationPreview\n                currentPlan={currentPlan}\n                newPlan={currentPlan.plan}\n                billingCycle=\"yearly\"\n                daysRemaining={10}\n                effectiveDate=\"immediately\"\n                theme=\"minimal\"\n                onConfirm={() => console.log(\"Cycle change confirmed\")}\n                onCancel={() => console.log(\"Cycle change cancelled\")}\n              />\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Yearly to Monthly Switch</CardTitle>\n              <CardDescription>\n                Switching from yearly to monthly billing\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ProrationPreview\n                currentPlan={yearlyCurrentPlan}\n                newPlan={yearlyCurrentPlan.plan}\n                billingCycle=\"monthly\"\n                daysRemaining={120}\n                effectiveDate=\"immediately\"\n                theme=\"classic\"\n                onConfirm={() => console.log(\"Cycle change confirmed\")}\n                onCancel={() => console.log(\"Cycle change cancelled\")}\n              />\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"next-cycle\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Next Cycle Change</CardTitle>\n              <CardDescription>\n                Plan change effective at the next billing cycle with no immediate charge\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ProrationPreview\n                currentPlan={currentPlan}\n                newPlan={enterprisePlan}\n                billingCycle=\"monthly\"\n                daysRemaining={25}\n                effectiveDate=\"next billing cycle\"\n                theme=\"minimal\"\n                onConfirm={() => console.log(\"Next cycle change confirmed\")}\n                onCancel={() => console.log(\"Next cycle change cancelled\")}\n              />\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Custom Pricing Scenario</CardTitle>\n              <CardDescription>\n                Handling custom/enterprise pricing that doesn't follow standard rates\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ProrationPreview\n                currentPlan={currentPlan}\n                newPlan={customPlan}\n                billingCycle=\"monthly\"\n                daysRemaining={12}\n                effectiveDate=\"next billing cycle\"\n                theme=\"classic\"\n                onConfirm={() => console.log(\"Custom plan confirmed\")}\n                onCancel={() => console.log(\"Custom plan cancelled\")}\n              />\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}",
      "type": "registry:component",
      "target": "components/proration-preview-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\n    id: string\n    title: string\n    description: string\n    highlight?: boolean\n    type?: 'monthly' | 'yearly'\n    currency?: string\n    monthlyPrice: string\n    yearlyPrice: string\n    buttonText: string\n    badge?: string\n    features: {\n        name: string\n        icon: string\n        iconColor?: string\n    }[]\n}\n\nexport interface CurrentPlan {\n    plan: Plan\n    type: 'monthly' | 'yearly' | 'custom'\n    price?: string\n    nextBillingDate: string\n    paymentMethod: string\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\n}\n\nexport const plans: Plan[] = [\n    {\n        id: 'starter',\n        title: 'Starter',\n        description: 'For developers testing out Liveblocks locally.',\n        currency: '$',\n        monthlyPrice: '0',\n        yearlyPrice: '0',\n        buttonText: 'Start today for free',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'pro',\n        title: 'Pro',\n        description: 'For companies adding collaboration in production.',\n        currency: '$',\n        monthlyPrice: '20',\n        yearlyPrice: '199',\n        buttonText: 'Sign up',\n        badge: 'Most popular',\n        highlight: true,\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'enterprise',\n        title: 'Enterprise',\n        description: 'For organizations that need more support and compliance features.',\n        currency: '$',\n        monthlyPrice: 'Custom',\n        yearlyPrice: 'Custom',\n        buttonText: 'Contact sales',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    }\n];\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}