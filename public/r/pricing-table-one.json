{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-table-one",
  "type": "registry:block",
  "title": "Pricing Table One",
  "description": "A pricing table component",
  "dependencies": [
    "lucide-react",
    "class-variance-authority",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "card",
    "badge",
    "switch",
    "radio-group",
    "label",
    "separator",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/pricing-table-one.tsx",
      "content": "\"use client\";\n\nimport { Check, Zap } from \"lucide-react\";\nimport { useState, useId } from \"react\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { type Plan } from \"@/lib/billingsdk-config\";\nimport { cn } from \"@/lib/utils\";\n\nconst sectionVariants = cva(\"py-32\", {\n  variants: {\n    size: {\n      small: \"py-6 md:py-12\",\n      medium: \"py-10 md:py-20\",\n      large: \"py-16 md:py-32\",\n    },\n    theme: {\n      minimal: \"\",\n      classic: \"bg-gradient-to-b from-background to-muted/20 relative overflow-hidden\",\n    },\n  },\n  defaultVariants: {\n    size: \"medium\",\n    theme: \"minimal\",\n  },\n});\n\nconst titleVariants = cva(\"text-pretty text-left font-bold\", {\n  variants: {\n    size: {\n      small: \"text-3xl lg:text-4xl\",\n      medium: \"text-4xl lg:text-5xl\",\n      large: \"text-4xl lg:text-6xl\",\n    },\n    theme: {\n      minimal: \"\",\n      classic: \"text-center bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent p-1\",\n    },\n  },\n  defaultVariants: {\n    size: \"large\",\n    theme: \"minimal\",\n  },\n});\n\nconst descriptionVariants = cva(\"text-muted-foreground max-w-3xl\", {\n  variants: {\n    size: {\n      small: \"text-base lg:text-lg\",\n      medium: \"text-lg lg:text-xl\",\n      large: \"lg:text-xl\",\n    },\n    theme: {\n      minimal: \"text-left\",\n      classic: \"text-center mx-auto\",\n    },\n  },\n  defaultVariants: {\n    size: \"large\",\n    theme: \"minimal\",\n  },\n});\n\nconst cardVariants = cva(\n  \"flex w-full flex-col rounded-lg border text-left h-full transition-all duration-300\",\n  {\n    variants: {\n      size: {\n        small: \"p-4\",\n        medium: \"p-5\",\n        large: \"p-6\",\n      },\n      theme: {\n        minimal: \"\",\n        classic: \"hover:shadow-xl backdrop-blur-sm bg-card/50 border-border/50\",\n      },\n      highlight: {\n        true: \"\",\n        false: \"\",\n      },\n    },\n    compoundVariants: [\n      {\n        theme: \"classic\",\n        highlight: true,\n        className: \"ring-2 ring-primary/20 border-primary/30 bg-gradient-to-b from-primary/5 to-transparent relative overflow-hidden\",\n      },\n      {\n        theme: \"minimal\",\n        highlight: true,\n        className: \"bg-muted\",\n      },\n    ],\n    defaultVariants: {\n      size: \"large\",\n      theme: \"minimal\",\n      highlight: false,\n    },\n  }\n);\n\nconst priceTextVariants = cva(\"font-medium\", {\n  variants: {\n    size: {\n      small: \"text-3xl\",\n      medium: \"text-4xl\",\n      large: \"text-4xl\",\n    },\n    theme: {\n      minimal: \"\",\n      classic: \"text-5xl font-extrabold bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\",\n    },\n  },\n  defaultVariants: {\n    size: \"large\",\n    theme: \"minimal\",\n  },\n});\n\nconst featureIconVariants = cva(\"\", {\n  variants: {\n    size: {\n      small: \"size-3\",\n      medium: \"size-4\",\n      large: \"size-4\",\n    },\n    theme: {\n      minimal: \"text-primary\",\n      classic: \"text-emerald-500\",\n    },\n  },\n  defaultVariants: {\n    size: \"large\",\n    theme: \"minimal\",\n  },\n});\n\nconst highlightBadgeVariants = cva(\"mb-8 block w-fit\", {\n  variants: {\n    theme: {\n      minimal: \"\",\n      classic: \"bg-gradient-to-r from-primary to-primary/80 text-primary-foreground border-primary/20 shadow-lg\",\n    },\n  },\n  defaultVariants: {\n    theme: \"minimal\",\n  },\n});\n\nconst toggleVariants = cva(\"flex h-11 w-fit shrink-0 items-center rounded-md p-1 text-lg\", {\n  variants: {\n    theme: {\n      minimal: \"bg-muted\",\n      classic: \"bg-muted/50 backdrop-blur-sm border border-border/50 shadow-lg\",\n    },\n  },\n  defaultVariants: {\n    theme: \"minimal\",\n  },\n});\n\nconst buttonVariants = cva(\n  \"gap-2 whitespace-nowrap focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 transition-all duration-300\",\n  {\n    variants: {\n      theme: {\n        minimal: \"shadow hover:bg-primary/90 h-9 py-2 group bg-primary text-primary-foreground ring-primary before:from-primary-foreground/20 after:from-primary-foreground/10 relative isolate inline-flex w-full items-center justify-center overflow-hidden rounded-md px-3 text-left text-sm font-medium ring-1 before:pointer-events-none before:absolute before:inset-0 before:-z-10 before:rounded-md before:bg-gradient-to-b before:opacity-80 before:transition-opacity before:duration-300 before:ease-[cubic-bezier(0.4,0.36,0,1)] after:pointer-events-none after:absolute after:inset-0 after:-z-10 after:rounded-md after:bg-gradient-to-b after:to-transparent after:mix-blend-overlay hover:cursor-pointer\",\n        classic: \"relative overflow-hidden bg-gradient-to-r from-primary to-primary/80 text-primary-foreground font-semibold py-3 px-6 rounded-lg hover:shadow-xl active:scale-95 border border-primary/20\",\n      },\n    },\n    defaultVariants: {\n      theme: \"minimal\",\n    },\n  }\n);\n\ninterface PricingTableOneProps extends VariantProps<typeof sectionVariants> {\n  className?: string;\n  plans: Plan[];\n  title?: string;\n  description?: string;\n  onPlanSelect?: (planId: string) => void;\n}\n\nexport function PricingTableOne({ \n  className, \n  plans, \n  title, \n  description, \n  onPlanSelect, \n  size,\n  theme = \"minimal\"\n}: PricingTableOneProps) {\n  const [isAnnually, setIsAnnually] = useState(false);\n  const uniqueId = useId(); // Generate unique ID automatically\n\n  function calculateDiscount(monthlyPrice: string, yearlyPrice: string): number {\n    const monthly = parseFloat(monthlyPrice);\n    const yearly = parseFloat(yearlyPrice);\n\n    if (\n      monthlyPrice.toLowerCase() === \"custom\" ||\n      yearlyPrice.toLowerCase() === \"custom\" ||\n      isNaN(monthly) ||\n      isNaN(yearly) ||\n      monthly === 0\n    ) {\n      return 0;\n    }\n\n    const discount = ((monthly * 12 - yearly) / (monthly * 12)) * 100;\n    return Math.round(discount);\n  }\n\n  const yearlyPriceDiscount = plans.length\n    ? Math.max(\n      ...plans.map((plan) =>\n        calculateDiscount(plan.monthlyPrice, plan.yearlyPrice)\n      )\n    )\n    : 0;\n\n  return (\n    <section className={cn(sectionVariants({ size, theme }), className)}>\n      {/* Classic theme background elements */}\n      {theme === \"classic\" && (\n        <>\n          <div className=\"absolute inset-0 bg-grid-pattern opacity-5\" />\n          <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-primary/5 rounded-full blur-3xl\" />\n          <div className=\"absolute top-1/4 right-1/4 w-64 h-64 bg-secondary/5 rounded-full blur-2xl\" />\n        </>\n      )}\n      \n      <div className={cn(\"container relative\", \"p-0 md:p-[1rem]\")}>\n        <div className=\"mx-auto flex max-w-7xl flex-col gap-6\">\n          <div className={cn(\"flex flex-col gap-4\", theme === \"classic\" && \"text-center\")}>\n            <h2 className={cn(titleVariants({ size, theme }))}>\n              {title || \"Pricing\"}\n            </h2>\n          </div>\n\n          <div className={cn(\n            \"flex flex-col justify-between gap-5 md:gap-10\",\n            theme === \"classic\" ? \"md:flex-col md:items-center\" : \"md:flex-row\"\n          )}>\n            <p className={cn(descriptionVariants({ size, theme }))}>\n              {description || \"Transparent pricing with no hidden fees. Upgrade or downgrade anytime.\"}\n            </p>\n            <div className={cn(toggleVariants({ theme }), theme === \"classic\" && \"mx-auto\")}>\n              <RadioGroup\n                defaultValue=\"monthly\"\n                className=\"h-full grid-cols-2\"\n                onValueChange={(value) => {\n                  setIsAnnually(value === \"annually\");\n                }}\n              >\n                <div className='has-[button[data-state=\"checked\"]]:bg-background h-full rounded-md transition-all'>\n                  <RadioGroupItem\n                    value=\"monthly\"\n                    id={`${uniqueId}-monthly`}\n                    className=\"peer sr-only\"\n                  />\n                  <Label\n                    htmlFor={`${uniqueId}-monthly`}\n                    className=\"text-muted-foreground peer-data-[state=checked]:text-primary flex h-full cursor-pointer items-center justify-center px-2 md:px-7 font-semibold transition-all hover:text-foreground\"\n                  >\n                    Monthly\n                  </Label>\n                </div>\n                <div className='has-[button[data-state=\"checked\"]]:bg-background h-full rounded-md transition-all'>\n                  <RadioGroupItem\n                    value=\"annually\"\n                    id={`${uniqueId}-annually`}\n                    className=\"peer sr-only\"\n                  />\n                  <Label\n                    htmlFor={`${uniqueId}-annually`}\n                    className=\"text-muted-foreground peer-data-[state=checked]:text-primary flex h-full cursor-pointer items-center justify-center gap-1 px-2 md:px-7 font-semibold transition-all hover:text-foreground\"\n                  >\n                    Yearly\n                    {yearlyPriceDiscount > 0 && (\n                      <span className=\"ml-1 rounded bg-primary/10 px-2 py-0.5 text-xs text-primary border border-primary/20 font-medium\">\n                        Save {yearlyPriceDiscount}%\n                      </span>\n                    )}\n                  </Label>\n                </div>\n              </RadioGroup>\n            </div>\n          </div>\n\n          <div className=\"flex w-full flex-col items-stretch gap-6 md:flex-row md:items-stretch\">\n            {plans.map((plan, index) => (\n              <motion.div\n                key={plan.id}\n                layout\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ duration: 0.3, delay: index * 0.1 }}\n                className={cn(\n                  cardVariants({ \n                    size, \n                    theme, \n                    highlight: plan.highlight \n                  })\n                )}\n              >\n                {/* Classic theme highlight effect */}\n                {theme === \"classic\" && plan.highlight && (\n                  <>\n                    <div className=\"absolute -top-px left-1/2 -translate-x-1/2 w-32 h-px bg-gradient-to-r from-transparent via-primary to-transparent\" />\n                    <div className=\"absolute top-4 right-4\">\n                      <Badge className={highlightBadgeVariants({ theme })}>\n                        Most Popular\n                      </Badge>\n                    </div>\n                  </>\n                )}\n                \n                <Badge className={cn(\n                  theme === \"classic\" && !plan.highlight \n                    ? \"bg-muted text-muted-foreground border-border/50 mb-8\" \n                    : highlightBadgeVariants({ theme })\n                )}>\n                  {plan.title}\n                </Badge>\n                \n                <AnimatePresence mode=\"wait\">\n                  <motion.div\n                    key={isAnnually ? \"year\" : \"month\"}\n                    initial={{ opacity: 0, y: 10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -10 }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    {isAnnually ? (\n                      <>\n                        <span className={cn(\"my-auto\", priceTextVariants({ size, theme }))}>\n                          {parseFloat(plan.yearlyPrice) >= 0 && (\n                            <>\n                              {plan.currency}\n                            </>\n                          )}\n                          {plan.yearlyPrice}\n                          {calculateDiscount(plan.monthlyPrice, plan.yearlyPrice) > 0 && (\n                            <span className={cn(\n                              \"text-xs ml-2\",\n                              theme === \"classic\" ? \"text-emerald-500 font-semibold\" : \"underline\"\n                            )}>\n                              {calculateDiscount(plan.monthlyPrice, plan.yearlyPrice)}% off\n                            </span>\n                          )}\n                        </span>\n                        <p className=\"text-muted-foreground\">per year</p>\n                      </>\n                    ) : (\n                      <>\n                        <span className={cn(priceTextVariants({ size, theme }))}>\n                          {parseFloat(plan.monthlyPrice) >= 0 && (\n                            <>\n                              {plan.currency}\n                            </>\n                          )}\n                          {plan.monthlyPrice}\n                        </span>\n                        <p className=\"text-muted-foreground\">per month</p>\n                      </>\n                    )}\n                  </motion.div>\n                </AnimatePresence>\n\n                <Separator className={cn(\n                  \"my-6\",\n                  theme === \"classic\" && \"bg-gradient-to-r from-transparent via-border to-transparent\"\n                )} />\n                \n                <div className=\"flex h-full flex-col justify-between gap-10\">\n                  <ul className=\"text-muted-foreground space-y-4\">\n                    {plan.features.map((feature, featureIndex) => (\n                      <motion.li \n                        key={featureIndex} \n                        className=\"flex items-center gap-3\"\n                        initial={{ opacity: 0, x: -10 }}\n                        animate={{ opacity: 1, x: 0 }}\n                        transition={{ duration: 0.3, delay: featureIndex * 0.05 }}\n                      >\n                        <Check className={cn(featureIconVariants({ size, theme }))} />\n                        <span className={cn(\n                          theme === \"classic\" && \"text-foreground/90\"\n                        )}>\n                          {feature.name}\n                        </span>\n                      </motion.li>\n                    ))}\n                  </ul>\n\n                  <Button\n                    className={buttonVariants({ theme })}\n                    onClick={() => onPlanSelect?.(plan.id)}\n                    aria-label={`Select ${plan.title} plan`}\n                  >\n                    {theme === \"classic\" && plan.highlight && (\n                      <Zap className=\"w-4 h-4 mr-1\" />\n                    )}\n                    {plan.buttonText}\n                    {theme === \"classic\" && (\n                      <div className=\"absolute inset-0 bg-gradient-to-r from-white/0 via-white/10 to-white/0 translate-x-[-100%] hover:translate-x-[100%] transition-transform duration-700\" />\n                    )}\n                  </Button>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}",
      "type": "registry:component",
      "target": "components/billingsdk/pricing-table-one.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/pricing-table-one-demo.tsx",
      "content": "\"use client\"\n\nimport { PricingTableOne } from \"@/components/billingsdk/pricing-table-one\"\nimport { plans } from \"@/lib/billingsdk-config\"\n\nexport function PricingTableOneDemo() {\n    return <>\n        <PricingTableOne plans={plans}\n            title=\"Pricing\"\n            description=\"Choose the plan that's right for you\"\n            onPlanSelect={(planId) => console.log('Selected plan:', planId)}\n            size=\"small\" // small, medium, large\n            theme=\"classic\" // minimal or classic\n            className=\"w-full\"\n        />\n    </>\n}",
      "type": "registry:component",
      "target": "components/pricing-table-one-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\n    id: string\n    title: string\n    description: string\n    highlight?: boolean\n    type?: 'monthly' | 'yearly'\n    currency?: string\n    monthlyPrice: string\n    yearlyPrice: string\n    buttonText: string\n    badge?: string\n    features: {\n        name: string\n        icon: string\n        iconColor?: string\n    }[]\n}\n\nexport interface CurrentPlan {\n    plan: Plan\n    type: 'monthly' | 'yearly' | 'custom'\n    price?: string\n    nextBillingDate: string\n    paymentMethod: string\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\n}\n\nexport const plans: Plan[] = [\n    {\n        id: 'starter',\n        title: 'Starter',\n        description: 'For developers testing out Liveblocks locally.',\n        currency: '$',\n        monthlyPrice: '0',\n        yearlyPrice: '0',\n        buttonText: 'Start today for free',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'pro',\n        title: 'Pro',\n        description: 'For companies adding collaboration in production.',\n        currency: '$',\n        monthlyPrice: '20',\n        yearlyPrice: '199',\n        buttonText: 'Sign up',\n        badge: 'Most popular',\n        highlight: true,\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'enterprise',\n        title: 'Enterprise',\n        description: 'For organizations that need more support and compliance features.',\n        currency: '$',\n        monthlyPrice: 'Custom',\n        yearlyPrice: 'Custom',\n        buttonText: 'Contact sales',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    }\n];\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}