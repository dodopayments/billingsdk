{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-table-six",
  "type": "registry:block",
  "title": "Pricing Table Six",
  "description": "A comprehensive pricing table component with interactive slider, pricing plans, and detailed comparison table",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "card",
    "badge",
    "slider",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/pricing-table-six.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Slider } from \"@/components/ui/slider\"\nimport { Check, Info } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nconst plans = [\n  {\n    id: \"basic\",\n    name: \"Basic plan\",\n    description: \"Our most popular plan.\",\n    price: 10,\n    popular: false,\n    users: 5,\n  },\n  {\n    id: \"business\",\n    name: \"Business plan\",\n    description: \"Best for growing teams.\",\n    price: 20,\n    popular: true,\n    users: 15,\n  },\n  {\n    id: \"enterprise\",\n    name: \"Enterprise plan\",\n    description: \"Best for large teams.\",\n    price: 40,\n    popular: false,\n    users: \"25+\",\n  },\n]\n\nconst features = [\n  {\n    category: \"Overview\",\n    items: [\n      { name: \"Basic features\", tooltip: true, basic: true, business: true, enterprise: true },\n      { name: \"Users\", tooltip: true, basic: \"10\", business: \"20\", enterprise: \"Unlimited\" },\n      { name: \"Individual data\", tooltip: true, basic: \"20GB\", business: \"40GB\", enterprise: \"Unlimited\" },\n      { name: \"Support\", tooltip: true, basic: true, business: true, enterprise: true },\n      { name: \"Automated workflows\", tooltip: true, basic: false, business: true, enterprise: true },\n      { name: \"200+ integrations\", tooltip: true, basic: false, business: true, enterprise: true },\n    ],\n  },\n  {\n    category: \"Reporting and analytics\",\n    items: [\n      { name: \"Analytics\", tooltip: true, basic: \"Basic\", business: \"Advanced\", enterprise: \"Advanced\" },\n      { name: \"Export reports\", tooltip: true, basic: true, business: true, enterprise: true },\n      { name: \"Scheduled reports\", tooltip: true, basic: true, business: true, enterprise: true },\n      { name: \"API access\", tooltip: true, basic: false, business: true, enterprise: true },\n      { name: \"Advanced reports\", tooltip: true, basic: false, business: true, enterprise: true },\n      { name: \"Saved reports\", tooltip: true, basic: false, business: true, enterprise: true },\n      { name: \"Customer properties\", tooltip: true, basic: false, business: false, enterprise: true },\n      { name: \"Custom fields\", tooltip: true, basic: false, business: false, enterprise: true },\n    ],\n  },\n  {\n    category: \"User access\",\n    items: [\n      { name: \"SSO/SAML authentication\", tooltip: true, basic: true, business: true, enterprise: true },\n      { name: \"Advanced permissions\", tooltip: true, basic: false, business: true, enterprise: true },\n      { name: \"Audit log\", tooltip: true, basic: false, business: false, enterprise: true },\n      { name: \"Data history\", tooltip: true, basic: false, business: false, enterprise: true },\n    ],\n  },\n]\n\nexport function PricingTableSix() {\n  const [selectedPlan, setSelectedPlan] = useState(\"business\")\n\n  const currentPlan = plans.find((plan) => plan.id === selectedPlan) || plans[1]\n  const sliderValue = [typeof currentPlan.users === \"string\" ? 25 : currentPlan.users]\n\n  const renderFeatureValue = (value: boolean | string) => {\n    if (typeof value === \"boolean\") {\n      return value ? <Check className=\"h-5 w-5 text-indigo-600\" /> : <span className=\"text-muted-foreground\">â€”</span>\n    }\n    return <span className=\"text-sm text-foreground\">{value}</span>\n  }\n\n  const handlePlanSelect = (planId: string) => {\n    setSelectedPlan(planId)\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 py-16 sm:px-6 lg:px-8\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold tracking-tight text-foreground sm:text-5xl text-balance\">\n          Choose a plan that's right for you\n        </h1>\n        <p className=\"mx-auto mt-6 max-w-2xl text-lg text-muted-foreground\">\n          We believe Untitled should be accessible to all companies, no matter the size of your startup.\n        </p>\n      </div>\n\n      <div className=\"mx-auto mt-12 max-w-md\">\n        <div className=\"relative\">\n          <Slider value={sliderValue} max={25} min={1} step={1} className=\"w-full\" disabled />\n          <div className=\"mt-2 text-center\">\n            <span className=\"text-sm font-medium text-foreground\">{currentPlan.users} users</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mt-16\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4 mb-8\">\n          <div></div>\n          {plans.map((plan) => (\n            <Card\n              key={plan.name}\n              className={cn(\n                \"relative cursor-pointer transition-all duration-200 hover:shadow-lg\",\n                selectedPlan === plan.id\n                  ? \"border-indigo-600 shadow-lg ring-2 ring-indigo-600\"\n                  : \"hover:border-border\",\n              )}\n              onClick={() => handlePlanSelect(plan.id)}\n            >\n              {plan.popular && (\n                <div className=\"absolute -top-3 left-1/2 -translate-x-1/2 z-10\">\n                  <Badge className=\"bg-indigo-600 hover:bg-indigo-600 text-white px-4 py-1 text-sm font-medium rounded-md shadow-sm\">\n                    Most popular\n                  </Badge>\n                </div>\n              )}\n              <CardHeader className=\"text-center\">\n                <CardTitle className=\"text-lg font-semibold text-foreground\">{plan.name}</CardTitle>\n                <CardDescription className=\"text-sm text-muted-foreground\">{plan.description}</CardDescription>\n                <div className=\"mt-4\">\n                  <span className=\"text-4xl font-bold text-foreground\">${plan.price}</span>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <Button\n                  className={cn(\n                    \"w-full\",\n                    selectedPlan === plan.id\n                      ? \"bg-indigo-600 hover:bg-indigo-700 text-white\"\n                      : \"bg-background border text-foreground hover:bg-muted\",\n                  )}\n                >\n                  Get started\n                </Button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        <div className=\"overflow-hidden rounded-lg border border-border bg-card\">\n          {features.map((category, categoryIndex) => (\n            <div key={category.category}>\n              {categoryIndex > 0 && <div className=\"border-t border-border\" />}\n\n              <div className=\"bg-muted px-6 py-4\">\n                <h3 className=\"text-sm font-semibold text-foreground\">{category.category}</h3>\n              </div>\n\n              {category.items.map((feature, featureIndex) => (\n                <div\n                  key={feature.name}\n                  className={cn(\n                    \"grid grid-cols-1 lg:grid-cols-4 gap-4 px-6 py-4\",\n                    featureIndex > 0 && \"border-t border-border\",\n                  )}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"text-sm text-foreground\">{feature.name}</span>\n                    {feature.tooltip && <Info className=\"h-4 w-4 text-muted-foreground\" />}\n                  </div>\n                  <div className=\"flex items-center justify-center\">\n                    {renderFeatureValue((feature as any).basic)}\n                  </div>\n                  <div className=\"flex items-center justify-center\">\n                    {renderFeatureValue((feature as any).business)}\n                  </div>\n                  <div className=\"flex items-center justify-center\">\n                    {renderFeatureValue((feature as any).enterprise)}\n                  </div>\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-8 grid grid-cols-1 lg:grid-cols-4 gap-4\">\n          <div></div>\n          {plans.map((plan) => (\n            <Button\n              key={plan.name}\n              variant={selectedPlan === plan.id ? \"default\" : \"outline\"}\n              className={cn(selectedPlan === plan.id && \"bg-indigo-600 hover:bg-indigo-700\")}\n              onClick={() => handlePlanSelect(plan.id)}\n            >\n              Get started\n            </Button>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}",
      "type": "registry:component",
      "target": "components/billingsdk/pricing-table-six.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/pricing-table-six-demo.tsx",
      "content": "\"use client\"\n\nimport { PricingTableSix } from \"@/components/billingsdk/pricing-table-six\"\n\nexport function PricingTableSixDemo() {\n  return (\n    <div className=\"w-full h-full flex flex-col gap-6 min-h-[500px] rounded-lg overflow-hidden bg-background-secondary border-2\">\n      <div className=\"flex flex-1 flex-col justify-center\">\n        <PricingTableSix />\n      </div>\n    </div>\n  )\n}",
      "type": "registry:component",
      "target": "components/pricing-table-six-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\n    id: string\n    title: string\n    description: string\n    highlight?: boolean\n    type?: 'monthly' | 'yearly'\n    currency?: string\n    monthlyPrice: string\n    yearlyPrice: string\n    buttonText: string\n    badge?: string\n    features: {\n        name: string\n        icon: string\n        iconColor?: string\n    }[]\n}\n\nexport interface CurrentPlan {\n    plan: Plan\n    type: 'monthly' | 'yearly' | 'custom'\n    price?: string\n    nextBillingDate: string\n    paymentMethod: string\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\n}\n\nexport const plans: Plan[] = [\n    {\n        id: 'starter',\n        title: 'Starter',\n        description: 'For developers testing out Liveblocks locally.',\n        currency: '$',\n        monthlyPrice: '0',\n        yearlyPrice: '0',\n        buttonText: 'Start today for free',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'pro',\n        title: 'Pro',\n        description: 'For companies adding collaboration in production.',\n        currency: '$',\n        monthlyPrice: '20',\n        yearlyPrice: '199',\n        buttonText: 'Sign up',\n        badge: 'Most popular',\n        highlight: true,\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'enterprise',\n        title: 'Enterprise',\n        description: 'For organizations that need more support and compliance features.',\n        currency: '$',\n        monthlyPrice: 'Custom',\n        yearlyPrice: 'Custom',\n        buttonText: 'Contact sales',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    }\n];",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}


