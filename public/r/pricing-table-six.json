{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-table-six",
  "type": "registry:block",
  "title": "Pricing Table Six",
  "description": "A modern pricing table component with contact us plan",
  "dependencies": [
    "lucide-react",
    "class-variance-authority",
    "framer-motion"
  ],
  "registryDependencies": [
    "button",
    "card",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/pricing-table-six.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Check } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { AnimatePresence, motion } from \"framer-motion\"\n\nexport interface PlanProps {\n  id: string\n  title: string\n  description: string\n  monthlyPrice: number\n  yearlyPrice: number\n  features: string[]\n  isFeatured?: boolean\n  isCustom?: boolean\n}\n\nexport interface PricingTableSixProps {\n  plans: PlanProps[]\n  onPlanSelect: (planId: string) => void\n}\n\nconst gradientFrom = [\"from-chart-1/70\",\"from-chart-2/70\",\"from-chart-3/70\"];\n\nconst getDiscountPercent=(plan: PlanProps) => {\n  return Math.min(100, Math.max(0, Math.round((1 - plan.yearlyPrice / (plan.monthlyPrice * 12)) * 100)));\n}\n\nexport function PricingTableSix({  plans, onPlanSelect}: PricingTableSixProps) {\n  const [isYearly, setIsYearly] = useState(false)\n\n  return (\n    <section className=\"py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"grid lg:grid-cols-2 gap-8 lg:gap-16 items-start mb-16\">\n          <div>\n            <h2 className=\"text-4xl sm:text-5xl lg:text-[3.5rem] font-bold leading-tight tracking-tight text-primary\">\n            Tailored plans for<span className=\"italic font-light\">every stage</span>\n            </h2>\n          </div>\n\n          <div className=\"lg:pt-4\">\n            <p className=\"text-primary/70 text-base mb-6 leading-relaxed\">\n            No matter where you are in your journey, find a plan that fits your goals and budget.\n            </p>\n\n            {/* Toggle */}\n\n          {/* Toggle with layoutId */}\n            <div className=\"relative inline-flex items-center bg-primary-foreground/70 rounded-full p-1.5 dark:!shadow-[inset_0_1.5px_0_color-mix(in_oklch,_var(--primary)_15%,_transparent)]\">\n              <button\n                onClick={() => setIsYearly(false)}\n                className={`relative z-10 text-primary px-4 py-2 rounded-full text-sm font-medium cursor-pointer ${\n                  !isYearly ? \"text-primary border border-muted-foreground/10\" : \"text-primary/50 \"\n                }`}\n                aria-pressed={!isYearly}\n              >\n                {!isYearly && (\n                  <motion.div\n                    layoutId=\"toggle-indicator\"\n                    className=\"absolute inset-0 bg-primary-foreground shadow-sm rounded-full\"\n                    transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                  />\n                )}\n                <span className=\"relative z-10\">Monthly</span>\n              </button>\n              \n              <button\n                onClick={() => setIsYearly(true)}\n                className={`relative z-10 text-primary px-4 py-2 rounded-full text-sm font-medium cursor-pointer ${\n                  isYearly ? \"text-primary border border-muted-foreground/10\" : \"text-primary/50 \"\n                }`}\n                aria-pressed={isYearly}\n              >\n                {isYearly && (\n                  <motion.div\n                    layoutId=\"toggle-indicator\"\n                    className=\"absolute inset-0 bg-primary-foreground shadow-sm rounded-full\"\n                    transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                  />\n                )}\n                <span className=\"relative z-10\">Yearly</span>\n              </button>\n            </div>\n\n          </div>\n        </div>\n\n        {/* Pricing Cards */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6 lg:gap-7\">\n          {plans.map((plan,index) => (\n            <div\n              key={plan.id}\n              className={`relative rounded-3xl p-6 border border-primary-foreground transition-all duration-300 hover:-translate-y-1 \n                hover:scale-[1.01] shadow-xl  bg-gradient-to-b ${gradientFrom[index]} from-[0%] via-primary-foreground/10 via-[40%] to-primary-foreground to-[100%]`}\n            >\n              {/* Most Popular Badge */}\n              {plan.isFeatured && (\n                <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                  <div className=\"bg-primary-foreground text-primary px-3 py-1 rounded-full text-xs font-medium ring-1 ring-muted-foreground/50 whitespace-nowrap\">\n                    Most popular\n                  </div>\n                </div>\n              )}\n\n              {/* Title and Description */}\n              <div className=\"mb-6\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h3 className=\"text-xl font-bold text-primary\">{plan.title}</h3>\n                  {isYearly && plan.monthlyPrice > 0 && plan.yearlyPrice < plan.monthlyPrice * 12 && (\n                  <motion.div className=\"\"\n                    initial={{ opacity: 0, y: 10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -10 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <span className=\"inline-block bg-primary-foreground text-primary text-xs px-2 py-1 rounded-full shadow-sm shadow-muted-foreground/40 whitespace-nowrap\">\n                    Save {getDiscountPercent(plan)}%\n                    </span>\n                  </motion.div>\n                )}\n                </div>\n                <p className=\"text-sm text-primary/70\">{plan.description}</p>\n              </div>\n\n              {/* Price */}\n              <div className=\"mb-8\">\n                <div className=\"flex items-baseline\">\n                  <span className=\"text-base text-primary/70\">$</span>\n                  <AnimatePresence mode=\"wait\" initial={false}>\n                    <motion.span\n                      key={isYearly ? \"yearly-price\" : \"monthly-price\"}\n                      className=\"text-5xl font-bold text-primary ml-1\"\n                      initial={{ opacity: 0, y: 8 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0, y: -8 }}\n                      transition={{ duration: 0.2 }}\n                    >\n                      {isYearly ? plan.yearlyPrice : plan.monthlyPrice}\n                    </motion.span>\n                  </AnimatePresence>\n                  <AnimatePresence mode=\"wait\" initial={false}>\n                    <motion.span\n                      key={isYearly ? \"per-year\" : \"per-month\"}\n                      className=\"text-sm text-primary/70 ml-2\"\n                      initial={{ opacity: 0, y: 8 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0, y: -8 }}\n                      transition={{ duration: 0.2 }}\n                    >\n                      / {isYearly ? \"year\" : \"month\"}\n                    </motion.span>\n                  </AnimatePresence>\n                </div>\n              </div>\n\n              {/* CTA Button */}\n              <div className=\"mb-8\">\n                <Button\n                  className={`w-full h-12 rounded-xl font-medium transition-all duration-200 bg-foreground text-primary-foreground hover:bg-foreground/90 hover:cursor-pointer\n                    border border-primary-foreground\n                    ${!plan.isFeatured ? \"bg-foreground/80 text-primary-foreground hover:bg-foreground/70\" : \"\"}\n                  `}\n                  aria-label={`Start ${plan.title} plan${(isYearly ? plan.yearlyPrice : plan.monthlyPrice) === 0 ? \" â€” free\" : \"\"}`}\n                  onClick={() => onPlanSelect(plan.id)}\n                >\n                  {plan.isCustom ? \"Contact team\" : \"Get started\"}\n                </Button>\n              </div>\n\n              {/* Features */}\n              <div>\n                <h4 className=\"text-sm font-medium text-primary/70 mb-4\">What's included:</h4>\n                <ul className=\"space-y-3\">\n                  {plan.features.map((feature, index) => (\n                    <li key={index} className=\"flex items-start\">\n                      <div className=\"flex-shrink-0 w-4 h-4 rounded-full bg-primary-foreground flex items-center justify-center mt-0.5 mr-3\">\n                        <Check className=\"w-2.5 h-2.5 text-primary\" />\n                      </div>\n                      <span className=\"text-sm text-primary leading-relaxed\">{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/billingsdk/pricing-table-six.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/pricing-table-six-demo.tsx",
      "content": "\"use client\"\n\nimport { PlanProps, PricingTableSix } from \"@/registry/billingsdk/pricing-table-six\"\n\nexport function PricingTableSixDemo() {\n\n    const plans: PlanProps[] = [\n        {\n          id: \"basic\",\n          title: \"Starter\",\n          description: \"Best for individuals and small teams\",\n          monthlyPrice: 0,\n          yearlyPrice: 0,\n          features: [\n            \"Core tools with modest usage allowances\",\n            \"Getting-started guides to launch quickly\",\n            \"Fundamental analytics and reports\",\n            \"Standard email assistance\",\n          ]\n        },\n        {\n          id: \"premium\",\n          title: \"Growth\",\n          description: \"Built for expanding teams\",\n          monthlyPrice: 50,\n          yearlyPrice: 500,\n          isFeatured: true,\n          features: [\n            \"Advanced tools with priority updates\",\n            \"Onboarding guides to ramp fast\",\n            \"Live chat support access\",\n            \"Automation to streamline workflows\",\n            \"Premium tutorials and webinars access\",\n          ]\n        },\n        {\n          id: \"custom\",\n          title: \"Enterprise\",\n          description: \"Tailored for specialized requirements\",\n          monthlyPrice: 99,\n          yearlyPrice: 990,\n          isCustom: true,\n          features: [\n            \"Unlimited users, projects, and data\",\n            \"Resources that scale with your needs\",\n            \"24/7 priority support\",\n            \"White-label reports, dashboards, and UIs\",\n            \"Support for custom API integrations\",\n            \"Works with advanced or proprietary systems\",\n          ]\n        },\n      ]\n\n    return (\n        <PricingTableSix\n            plans={plans}\n            onPlanSelect={(planId: string) => console.log('Selected plan:', planId)}\n        />\n    )\n}",
      "type": "registry:component",
      "target": "components/pricing-table-six-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\n    id: string\n    title: string\n    description: string\n    highlight?: boolean\n    type?: 'monthly' | 'yearly'\n    currency?: string\n    monthlyPrice: string\n    yearlyPrice: string\n    buttonText: string\n    badge?: string\n    features: {\n        name: string\n        icon: string\n        iconColor?: string\n    }[]\n}\n\nexport interface CurrentPlan {\n    plan: Plan\n    type: 'monthly' | 'yearly' | 'custom'\n    price?: string\n    nextBillingDate: string\n    paymentMethod: string\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\n}\n\nexport const plans: Plan[] = [\n    {\n        id: 'starter',\n        title: 'Starter',\n        description: 'For developers testing out Liveblocks locally.',\n        currency: '$',\n        monthlyPrice: '0',\n        yearlyPrice: '0',\n        buttonText: 'Start today for free',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'pro',\n        title: 'Pro',\n        description: 'For companies adding collaboration in production.',\n        currency: '$',\n        monthlyPrice: '20',\n        yearlyPrice: '199',\n        buttonText: 'Sign up',\n        badge: 'Most popular',\n        highlight: true,\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'enterprise',\n        title: 'Enterprise',\n        description: 'For organizations that need more support and compliance features.',\n        currency: '$',\n        monthlyPrice: 'Custom',\n        yearlyPrice: 'Custom',\n        buttonText: 'Contact sales',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    }\n];\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}