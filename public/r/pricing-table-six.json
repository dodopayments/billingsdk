{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-table-six",
  "type": "registry:block",
  "title": "Pricing Table Six",
  "description": "A modern pricing table component with contact us plan",
  "dependencies": [
    "lucide-react",
    "class-variance-authority",
    "framer-motion"
  ],
  "registryDependencies": [
    "button",
    "card",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/pricing-table-six.tsx",
      "content": "\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport { Check } from \"lucide-react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { AnimatePresence, motion } from \"framer-motion\"\r\n\r\nexport interface PlanProps {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  monthlyPrice: number\r\n  yearlyPrice: number\r\n  features: string[]\r\n  isFeatured?: boolean\r\n  isCustom?: boolean\r\n}\r\n\r\nexport interface PricingTableSixProps {\r\n  plans: PlanProps[]\r\n  onPlanSelect: (planId: string) => void\r\n}\r\n\r\nconst gradientFrom = [\"from-chart-1/70\",\"from-chart-2/70\",\"from-chart-3/70\"];\r\n\r\nconst getDiscountPercent=(plan: PlanProps) => {\r\n  return Math.min(100, Math.max(0, Math.round((1 - plan.yearlyPrice / (plan.monthlyPrice * 12)) * 100)));\r\n}\r\n\r\nexport function PricingTableSix({  plans, onPlanSelect}: PricingTableSixProps) {\r\n  const [isYearly, setIsYearly] = useState(false)\r\n\r\n  return (\r\n    <section className=\"py-16 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"grid lg:grid-cols-2 gap-8 lg:gap-16 items-start mb-16\">\r\n          <div>\r\n            <h2 className=\"text-4xl sm:text-5xl lg:text-[3.5rem] font-bold leading-tight tracking-tight text-primary\">\r\n            Tailored plans for<span className=\"italic font-light\">every stage</span>\r\n            </h2>\r\n          </div>\r\n\r\n          <div className=\"lg:pt-4\">\r\n            <p className=\"text-primary/70 text-base mb-6 leading-relaxed\">\r\n            No matter where you are in your journey, find a plan that fits your goals and budget.\r\n            </p>\r\n\r\n            {/* Toggle */}\r\n\r\n          {/* Toggle with layoutId */}\r\n            <div className=\"relative inline-flex items-center bg-primary-foreground/70 rounded-full p-1.5 dark:!shadow-[inset_0_1.5px_0_color-mix(in_oklch,_var(--primary)_15%,_transparent)]\">\r\n              <button\r\n                onClick={() => setIsYearly(false)}\r\n                className={`relative z-10 text-primary px-4 py-2 rounded-full text-sm font-medium cursor-pointer ${\r\n                  !isYearly ? \"text-primary border border-muted-foreground/10\" : \"text-primary/50 \"\r\n                }`}\r\n                aria-pressed={!isYearly}\r\n              >\r\n                {!isYearly && (\r\n                  <motion.div\r\n                    layoutId=\"toggle-indicator\"\r\n                    className=\"absolute inset-0 bg-primary-foreground shadow-sm rounded-full\"\r\n                    transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\r\n                  />\r\n                )}\r\n                <span className=\"relative z-10\">Monthly</span>\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => setIsYearly(true)}\r\n                className={`relative z-10 text-primary px-4 py-2 rounded-full text-sm font-medium cursor-pointer ${\r\n                  isYearly ? \"text-primary border border-muted-foreground/10\" : \"text-primary/50 \"\r\n                }`}\r\n                aria-pressed={isYearly}\r\n              >\r\n                {isYearly && (\r\n                  <motion.div\r\n                    layoutId=\"toggle-indicator\"\r\n                    className=\"absolute inset-0 bg-primary-foreground shadow-sm rounded-full\"\r\n                    transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\r\n                  />\r\n                )}\r\n                <span className=\"relative z-10\">Yearly</span>\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        {/* Pricing Cards */}\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6 lg:gap-7\">\r\n          {plans.map((plan,index) => (\r\n            <div\r\n              key={plan.id}\r\n              className={`relative rounded-3xl p-6 border border-primary-foreground transition-all duration-300 hover:-translate-y-1 \r\n                hover:scale-[1.01] shadow-xl  bg-gradient-to-b ${gradientFrom[index]} from-[0%] via-primary-foreground/10 via-[40%] to-primary-foreground to-[100%]`}\r\n            >\r\n              {/* Most Popular Badge */}\r\n              {plan.isFeatured && (\r\n                <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\r\n                  <div className=\"bg-primary-foreground text-primary px-3 py-1 rounded-full text-xs font-medium ring-1 ring-muted-foreground/50 whitespace-nowrap\">\r\n                    Most popular\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Title and Description */}\r\n              <div className=\"mb-6\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <h3 className=\"text-xl font-bold text-primary\">{plan.title}</h3>\r\n                  {isYearly && plan.monthlyPrice > 0 && plan.yearlyPrice < plan.monthlyPrice * 12 && (\r\n                  <motion.div className=\"\"\r\n                    initial={{ opacity: 0, y: 10 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    exit={{ opacity: 0, y: -10 }}\r\n                    transition={{ duration: 0.3 }}\r\n                  >\r\n                    <span className=\"inline-block bg-primary-foreground text-primary text-xs px-2 py-1 rounded-full shadow-sm shadow-muted-foreground/40 whitespace-nowrap\">\r\n                    Save {getDiscountPercent(plan)}%\r\n                    </span>\r\n                  </motion.div>\r\n                )}\r\n                </div>\r\n                <p className=\"text-sm text-primary/70\">{plan.description}</p>\r\n              </div>\r\n\r\n              {/* Price */}\r\n              <div className=\"mb-8\">\r\n                <div className=\"flex items-baseline\">\r\n                  <span className=\"text-base text-primary/70\">$</span>\r\n                  <AnimatePresence mode=\"wait\" initial={false}>\r\n                    <motion.span\r\n                      key={isYearly ? \"yearly-price\" : \"monthly-price\"}\r\n                      className=\"text-5xl font-bold text-primary ml-1\"\r\n                      initial={{ opacity: 0, y: 8 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      exit={{ opacity: 0, y: -8 }}\r\n                      transition={{ duration: 0.2 }}\r\n                    >\r\n                      {isYearly ? plan.yearlyPrice : plan.monthlyPrice}\r\n                    </motion.span>\r\n                  </AnimatePresence>\r\n                  <AnimatePresence mode=\"wait\" initial={false}>\r\n                    <motion.span\r\n                      key={isYearly ? \"per-year\" : \"per-month\"}\r\n                      className=\"text-sm text-primary/70 ml-2\"\r\n                      initial={{ opacity: 0, y: 8 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      exit={{ opacity: 0, y: -8 }}\r\n                      transition={{ duration: 0.2 }}\r\n                    >\r\n                      / {isYearly ? \"year\" : \"month\"}\r\n                    </motion.span>\r\n                  </AnimatePresence>\r\n                </div>\r\n              </div>\r\n\r\n              {/* CTA Button */}\r\n              <div className=\"mb-8\">\r\n                <Button\r\n                  className={`w-full h-12 rounded-xl font-medium transition-all duration-200 bg-foreground text-primary-foreground hover:bg-foreground/90 hover:cursor-pointer\r\n                    border border-primary-foreground\r\n                    ${!plan.isFeatured ? \"bg-foreground/80 text-primary-foreground hover:bg-foreground/70\" : \"\"}\r\n                  `}\r\n                  aria-label={`Start ${plan.title} plan${(isYearly ? plan.yearlyPrice : plan.monthlyPrice) === 0 ? \" â€” free\" : \"\"}`}\r\n                  onClick={() => onPlanSelect(plan.id)}\r\n                >\r\n                  {plan.isCustom ? \"Contact team\" : \"Get started\"}\r\n                </Button>\r\n              </div>\r\n\r\n              {/* Features */}\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-primary/70 mb-4\">What's included:</h4>\r\n                <ul className=\"space-y-3\">\r\n                  {plan.features.map((feature, index) => (\r\n                    <li key={index} className=\"flex items-start\">\r\n                      <div className=\"flex-shrink-0 w-4 h-4 rounded-full bg-primary-foreground flex items-center justify-center mt-0.5 mr-3\">\r\n                        <Check className=\"w-2.5 h-2.5 text-primary\" />\r\n                      </div>\r\n                      <span className=\"text-sm text-primary leading-relaxed\">{feature}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/billingsdk/pricing-table-six.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/pricing-table-six-demo.tsx",
      "content": "\"use client\"\r\n\r\nimport { PlanProps, PricingTableSix } from \"@/registry/billingsdk/pricing-table-six\"\r\n\r\nexport function PricingTableSixDemo() {\r\n\r\n    const plans: PlanProps[] = [\r\n        {\r\n          id: \"basic\",\r\n          title: \"Starter\",\r\n          description: \"Best for individuals and small teams\",\r\n          monthlyPrice: 0,\r\n          yearlyPrice: 0,\r\n          features: [\r\n            \"Core tools with modest usage allowances\",\r\n            \"Getting-started guides to launch quickly\",\r\n            \"Fundamental analytics and reports\",\r\n            \"Standard email assistance\",\r\n          ]\r\n        },\r\n        {\r\n          id: \"premium\",\r\n          title: \"Growth\",\r\n          description: \"Built for expanding teams\",\r\n          monthlyPrice: 50,\r\n          yearlyPrice: 500,\r\n          isFeatured: true,\r\n          features: [\r\n            \"Advanced tools with priority updates\",\r\n            \"Onboarding guides to ramp fast\",\r\n            \"Live chat support access\",\r\n            \"Automation to streamline workflows\",\r\n            \"Premium tutorials and webinars access\",\r\n          ]\r\n        },\r\n        {\r\n          id: \"custom\",\r\n          title: \"Enterprise\",\r\n          description: \"Tailored for specialized requirements\",\r\n          monthlyPrice: 99,\r\n          yearlyPrice: 990,\r\n          isCustom: true,\r\n          features: [\r\n            \"Unlimited users, projects, and data\",\r\n            \"Resources that scale with your needs\",\r\n            \"24/7 priority support\",\r\n            \"White-label reports, dashboards, and UIs\",\r\n            \"Support for custom API integrations\",\r\n            \"Works with advanced or proprietary systems\",\r\n          ]\r\n        },\r\n      ]\r\n\r\n    return (\r\n        <PricingTableSix\r\n            plans={plans}\r\n            onPlanSelect={(planId: string) => console.log('Selected plan:', planId)}\r\n        />\r\n    )\r\n}",
      "type": "registry:component",
      "target": "components/pricing-table-six-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\r\n    id: string\r\n    title: string\r\n    description: string\r\n    highlight?: boolean\r\n    type?: 'monthly' | 'yearly'\r\n    currency?: string\r\n    monthlyPrice: string\r\n    yearlyPrice: string\r\n    buttonText: string\r\n    badge?: string\r\n    features: {\r\n        name: string\r\n        icon: string\r\n        iconColor?: string\r\n    }[]\r\n}\r\n\r\nexport interface CurrentPlan {\r\n    plan: Plan\r\n    type: 'monthly' | 'yearly' | 'custom'\r\n    price?: string\r\n    nextBillingDate: string\r\n    paymentMethod: string\r\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\r\n}\r\n\r\nexport const plans: Plan[] = [\r\n    {\r\n        id: 'starter',\r\n        title: 'Starter',\r\n        description: 'For developers testing out Liveblocks locally.',\r\n        currency: '$',\r\n        monthlyPrice: '0',\r\n        yearlyPrice: '0',\r\n        buttonText: 'Start today for free',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'pro',\r\n        title: 'Pro',\r\n        description: 'For companies adding collaboration in production.',\r\n        currency: '$',\r\n        monthlyPrice: '20',\r\n        yearlyPrice: '199',\r\n        buttonText: 'Sign up',\r\n        badge: 'Most popular',\r\n        highlight: true,\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'enterprise',\r\n        title: 'Enterprise',\r\n        description: 'For organizations that need more support and compliance features.',\r\n        currency: '$',\r\n        monthlyPrice: 'Custom',\r\n        yearlyPrice: 'Custom',\r\n        buttonText: 'Contact sales',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    }\r\n];\r\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}