{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-table-four",
  "type": "registry:block",
  "title": "Pricing Table Four",
  "description": "A modern pricing table component with gradient design",
  "dependencies": [
    "lucide-react",
    "class-variance-authority",
    "motion"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/pricing-table-four.tsx",
      "content": "\"use client\";\n\nimport { ChevronRight, Package, Award, Building2 } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { type Plan } from \"@/lib/billingsdk-config\";\nimport { cn } from \"@/lib/utils\";\n\n// Animated Price Container\nfunction AnimatedPriceContainer({ \n  price, \n  period, \n  isHighlight\n}: { \n  price: string; \n  period: string; \n  isHighlight?: boolean;\n}) {\n  return (\n    <motion.div\n      className=\"flex items-end justify-end min-h-[3rem]\"\n      transition={{ duration: 0.2 }}\n    >\n      <motion.div\n        className=\"relative overflow-hidden\"\n        initial={false}\n        animate={{\n          scale: isHighlight ? 1.1 : 1,\n        }}\n        transition={{ duration: 0.3, ease: \"easeOut\" }}\n      >\n        <AnimatePresence mode=\"wait\">\n          <motion.span \n            className={cn(\n              \"text-3xl font-bold text-foreground relative inline-block\",\n              isHighlight && \"bg-gradient-to-r from-primary to-primary/70 bg-clip-text text-transparent\"\n            )}\n            key={`${price}-${period}`}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.4, ease: \"easeOut\" }}\n          >\n            {price}\n          </motion.span>\n        </AnimatePresence>\n        \n        {/* Highlight glow effect */}\n        {isHighlight && (\n          <motion.div\n            className=\"absolute inset-0 bg-gradient-to-r from-primary/20 to-transparent rounded-lg blur-xl\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 0.4 }}\n            transition={{\n              duration: 0.3,\n              ease: \"easeOut\"\n            }}\n          />\n        )}\n      </motion.div>\n      \n      <AnimatePresence mode=\"wait\">\n        <motion.span \n          className=\"text-muted-foreground ml-2 flex items-center\"\n          key={`period-${price}-${period}`}\n          initial={{ opacity: 0, x: 10 }}\n          animate={{ opacity: 1, x: 0 }}\n          exit={{ opacity: 0, x: -10 }}\n          transition={{ duration: 0.3, delay: 0.1 }}\n        >\n          <span className=\"mx-1\">/</span>\n          <span >{period}</span>\n        </motion.span>\n      </AnimatePresence>\n    </motion.div>\n  );\n}\n\nconst sectionVariants = cva(\"px-4 py-20 relative overflow-hidden bg-background\", {\n  variants: {\n    size: {\n      small: \"py-10\",\n      medium: \"py-20\",\n      large: \"py-32\",\n    },\n  },\n  defaultVariants: {\n    size: \"medium\",\n  },\n});\n\nconst titleVariants = cva(\"font-bold mb-6 text-foreground\", {\n  variants: {\n    size: {\n      small: \"text-3xl lg:text-4xl\",\n      medium: \"text-4xl lg:text-5xl\",\n      large: \"text-5xl lg:text-6xl\",\n    },\n  },\n  defaultVariants: {\n    size: \"medium\",\n  },\n});\n\nconst descriptionVariants = cva(\"text-muted-foreground max-w-3xl mx-auto leading-tight mb-8\", {\n  variants: {\n    size: {\n      small: \"text-base sm:text-lg\",\n      medium: \"text-lg sm:text-xl\",\n      large: \"text-xl sm:text-2xl\",\n    },\n  },\n  defaultVariants: {\n    size: \"medium\",\n  },\n});\n\nconst cardVariants = cva(\n  \"relative h-full transition-all rounded-lg duration-300 border bg-card border-border hover:bg-muted/50\",\n  {\n    variants: {\n      highlight: {\n        true: \"bg-primary/5 border-primary/20\",\n        false: \"\",\n      },\n    },\n    defaultVariants: {\n      highlight: false,\n    },\n  }\n);\n\nconst toggleVariants = cva(\n  \"inline-flex items-center p-2 rounded-lg border bg-muted border-border\"\n);\n\nconst buttonVariants = cva(\n  \"w-full py-3 px-4 text-sm font-medium transition-all duration-300 flex items-center justify-center gap-2 rounded-lg hover:cursor-pointer\",\n  {\n    variants: {\n      highlight: {\n        true: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        false: \"bg-muted/5 text-muted-foreground hover:bg-muted/80 border border-border\",\n      },\n    },\n    defaultVariants: {\n      highlight: false,\n    },\n  }\n);\n\nexport interface PricingTableFourProps extends VariantProps<typeof sectionVariants> {\n  plans: Plan[];\n  title?: string;\n  description?: string;\n  subtitle?: string;\n  onPlanSelect?: (planId: string) => void;\n  className?: string;\n  showBillingToggle?: boolean;\n  billingToggleLabels?: {\n    monthly: string;\n    yearly: string;\n  };\n}\n\nconst defaultIcons = {\n  starter: <Package className=\"w-5 h-5\" />,\n  pro: <Award className=\"w-5 h-5\" />,\n  enterprise: <Building2 className=\"w-5 h-5\" />,\n};\n\nexport function PricingTableFour({\n  plans,\n  title = \"Choose Your Perfect Plan\",\n  description = \"Transform your project with our comprehensive pricing options designed for every need.\",\n  subtitle = \"Simple Pricing\",\n  onPlanSelect,\n  className,\n  size = \"medium\",\n  showBillingToggle = true,\n  billingToggleLabels = {\n    monthly: \"Monthly\",\n    yearly: \"Yearly\",\n  },\n}: PricingTableFourProps) {\n  const [isYearly, setIsYearly] = useState(false);\n\n  const handlePlanSelect = (planId: string) => {\n    onPlanSelect?.(planId);\n  };\n\n  const getPlanIcon = (planId: string) => {\n    return defaultIcons[planId as keyof typeof defaultIcons] || <Package className=\"w-5 h-5\" />;\n  };\n\n  const getPlanPrice = (plan: Plan) => {\n    const price = isYearly ? plan.yearlyPrice : plan.monthlyPrice;\n    // Don't add currency symbol for \"Custom\" pricing\n    if (price.toLowerCase() === 'custom') {\n      return price;\n    }\n    return `${plan.currency || '$'}${price}`;\n  };\n\n  const getPlanPeriod = (plan: Plan) => {\n    if (plan.monthlyPrice === '0' || plan.yearlyPrice === '0') {\n      return 'Free';\n    }\n    return isYearly ? 'year' : 'month';\n  };\n\n  return (\n    <section className={cn(sectionVariants({ size }), className)}>\n\n      <div className=\"max-w-7xl mx-auto relative z-10\">\n        {/* Header */}\n        <div className=\"text-center mb-16\">\n          {subtitle && (\n            <p className=\"text-muted-foreground italic text-lg mb-4\">{subtitle}</p>\n          )}\n          <h2 className={cn(titleVariants({ size }))}>{title}</h2>\n          <p className={cn(descriptionVariants({ size }))}>{description}</p>\n\n          {showBillingToggle && (\n            <div className={cn(toggleVariants())}>\n              <button\n                onClick={() => setIsYearly(false)}\n                className={`px-4 py-2 rounded-lg text-sm font-medium transition-all duration-300 hover:cursor-pointer ${\n                  !isYearly ? \"bg-primary text-primary-foreground shadow-lg hover:cursor-pointer\" : \"hover:cursor-pointer text-muted-foreground hover:text-foreground\"\n                }`}\n              >\n                {billingToggleLabels.monthly}\n              </button>\n              <button\n                onClick={() => setIsYearly(true)}\n                className={`px-4 py-2 rounded-lg text-sm font-medium transition-all duration-300 hover:cursor-pointer ${\n                  isYearly ? \"bg-primary text-primary-foreground shadow-lg hover:cursor-pointer\" : \"hover:cursor-pointer text-muted-foreground hover:text-foreground\"\n                }`}\n              >\n                {billingToggleLabels.yearly}\n              </button>\n            </div>\n          )}\n        </div>\n\n        <div className=\"grid md:grid-cols-3 gap-8 max-w-6xl mx-auto items-stretch\">\n          {plans.map((plan, index) => (\n            <motion.div\n              key={plan.id}\n              className=\"relative group h-full\"\n              initial={{ opacity: 0, y: 50, scale: 0.9 }}\n              animate={{ opacity: 1, y: 0, scale: 1 }}\n              transition={{\n                duration: 0.6,\n                delay: index * 0.1,\n                ease: [0.25, 0.46, 0.45, 0.94]\n              }}\n\n            >\n              {/* Popular badge */}\n              {plan.badge && (\n                <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 z-20\">\n                  <div className=\"px-3 py-1 text-xs font-medium bg-primary text-primary-foreground rounded\">\n                    {plan.badge}\n                  </div>\n                </div>\n              )}\n\n              <div className={cn(cardVariants({ highlight: plan.highlight }))}>\n                <div className=\"p-4 flex flex-col h-full min-h-[500px]\">\n                  <div className=\"space-y-4 flex-shrink-0\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"w-12 h-12 flex items-center rounded-lg justify-center text-foreground bg-muted border border-border\">\n                        {getPlanIcon(plan.id)}\n                      </div>\n                      <div className=\"text-right\">\n                        <AnimatedPriceContainer\n                          price={getPlanPrice(plan)}\n                          period={getPlanPeriod(plan)}\n                          isHighlight={plan.highlight}\n                        />\n                      </div>\n                    </div>\n\n                    <div>\n                      <h3 className=\"text-xl font-bold text-foreground\">{plan.title}</h3>\n                    </div>\n\n                    {/* Description */}\n                    <p className=\"text-muted-foreground leading-relaxed\">{plan.description}</p>\n                  </div>\n\n                  <div className=\"rounded-lg p-4 bg-muted/50 border border-border/50 mt-4 flex flex-col flex-grow\">\n                    <div className=\"mb-4 flex-shrink-0\">\n                      <button\n                        onClick={() => handlePlanSelect(plan.id)}\n                        className={cn(buttonVariants({ highlight: plan.highlight }))}\n                      >\n                        {plan.buttonText}\n                        <ChevronRight className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n\n                    {/* Features */}\n                    <div className=\"flex-grow\">\n                      <h4 className=\"text-foreground font-semibold mb-4\">Features:</h4>\n                      <ul className=\"space-y-3\">\n                        {plan.features.map((feature, featureIndex) => (\n                          <li key={featureIndex} className=\"flex items-center text-muted-foreground\">\n                            <div className=\"w-5 h-5 flex rounded items-center justify-center mr-3 flex-shrink-0 bg-primary/10 border border-primary/20\">\n                              <ChevronRight className=\"w-3 h-3 text-primary rotate-90\" />\n                            </div>\n                            <span className=\"text-sm\">{feature.name}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}",
      "type": "registry:component",
      "target": "components/billingsdk/pricing-table-four.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/pricing-table-four-demo.tsx",
      "content": "\"use client\"\n\nimport { PricingTableFour } from \"@/registry/billingsdk/pricing-table-four\"\nimport { plans } from \"@/lib/billingsdk-config\"\n\nexport function PricingTableFourDemo() {\n  return (\n    <PricingTableFour\n      plans={plans}\n      title=\"Choose Your Perfect Plan\"\n      description=\"Transform your project with our comprehensive pricing options designed for every need.\"\n      subtitle=\"Simple Pricing\"\n      onPlanSelect={(planId: string) => console.log('Selected plan:', planId)}\n      size=\"medium\"\n      className=\"w-full\"\n      showBillingToggle={true}\n      billingToggleLabels={{\n        monthly: \"Monthly\",\n        yearly: \"Yearly\",\n      }}\n    />\n  )\n}",
      "type": "registry:component",
      "target": "components/pricing-table-four-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\n    id: string\n    title: string\n    description: string\n    highlight?: boolean\n    type?: 'monthly' | 'yearly'\n    currency?: string\n    monthlyPrice: string\n    yearlyPrice: string\n    buttonText: string\n    badge?: string\n    features: {\n        name: string\n        icon: string\n        iconColor?: string\n    }[]\n}\n\nexport interface CurrentPlan {\n    plan: Plan\n    type: 'monthly' | 'yearly' | 'custom'\n    price?: string\n    nextBillingDate: string\n    paymentMethod: string\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\n}\n\nexport const plans: Plan[] = [\n    {\n        id: 'starter',\n        title: 'Starter',\n        description: 'For developers testing out Liveblocks locally.',\n        currency: '$',\n        monthlyPrice: '0',\n        yearlyPrice: '0',\n        buttonText: 'Start today for free',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'pro',\n        title: 'Pro',\n        description: 'For companies adding collaboration in production.',\n        currency: '$',\n        monthlyPrice: '20',\n        yearlyPrice: '199',\n        buttonText: 'Sign up',\n        badge: 'Most popular',\n        highlight: true,\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'enterprise',\n        title: 'Enterprise',\n        description: 'For organizations that need more support and compliance features.',\n        currency: '$',\n        monthlyPrice: 'Custom',\n        yearlyPrice: 'Custom',\n        buttonText: 'Contact sales',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    }\n];\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}