{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-table-four",
  "type": "registry:block",
  "title": "Pricing Table Four",
  "description": "A modern pricing table component with gradient design",
  "dependencies": [
    "lucide-react",
    "class-variance-authority",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "label",
    "radio-group",
    "badge",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/pricing-table-four.tsx",
      "content": "\"use client\";\n\nimport { Check, Package, Award, Building2 } from \"lucide-react\";\nimport { useState, useId } from \"react\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { type Plan } from \"@/lib/billingsdk-config\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Badge } from \"@/components/ui/badge\";\n\nconst sectionVariants = cva(\"py-32 relative overflow-hidden\", {\n  variants: {\n    size: {\n      small: \"py-12\",\n      medium: \"py-20\",\n      large: \"py-32\",\n    },\n    theme: {\n      minimal: \"bg-background\",\n      classic: \"bg-gradient-to-b from-background to-muted/20\",\n    },\n  },\n  defaultVariants: {\n    size: \"medium\",\n    theme: \"minimal\",\n  },\n});\n\nconst titleVariants = cva(\"font-bold mb-4 text-foreground\", {\n  variants: {\n    size: {\n      small: \"text-3xl lg:text-4xl\",\n      medium: \"text-4xl lg:text-5xl\",\n      large: \"text-4xl lg:text-6xl\",\n    },\n    theme: {\n      minimal: \"\",\n      classic: \"bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\",\n    },\n  },\n  defaultVariants: {\n    size: \"medium\",\n    theme: \"minimal\",\n  },\n});\n\nconst descriptionVariants = cva(\"text-muted-foreground max-w-3xl mx-auto mb-2\", {\n  variants: {\n    size: {\n      small: \"text-base lg:text-lg\",\n      medium: \"text-lg lg:text-xl\",\n      large: \"lg:text-xl\",\n    },\n    theme: {\n      minimal: \"\",\n      classic: \"\",\n    },\n  },\n  defaultVariants: {\n    size: \"medium\",\n    theme: \"minimal\",\n  },\n});\n\nconst cardVariants = cva(\n  \"relative h-full transition-all duration-300 rounded-lg border bg-card text-card-foreground\",\n  {\n    variants: {\n      size: {\n        small: \"p-4\",\n        medium: \"p-5\",\n        large: \"p-6\",\n      },\n      theme: {\n        minimal: \"hover:bg-muted/30\",\n        classic: \"hover:shadow-xl backdrop-blur-sm bg-card/50 border-border/50\",\n      },\n      highlight: {\n        true: \"\",\n        false: \"\",\n      },\n    },\n    compoundVariants: [\n      {\n        theme: \"classic\",\n        highlight: true,\n        className: \"ring-2 ring-primary/20 border-primary/30 bg-gradient-to-b from-primary/5 to-transparent relative overflow-hidden shadow-xl\",\n      },\n      {\n        theme: \"minimal\",\n        highlight: true,\n        className: \"bg-muted/50 border-primary/20\",\n      },\n    ],\n    defaultVariants: {\n      size: \"large\",\n      theme: \"minimal\",\n      highlight: false,\n    },\n  }\n);\n\nconst toggleVariants = cva(\n  \"flex h-11 w-fit shrink-0 items-center rounded-md p-1 text-lg\",\n  {\n    variants: {\n      theme: {\n        minimal: \"bg-muted\",\n        classic: \"bg-muted/50 backdrop-blur-sm border border-border/50 shadow-lg\",\n      },\n    },\n    defaultVariants: {\n      theme: \"minimal\",\n    },\n  }\n);\n\nconst priceTextVariants = cva(\"font-medium\", {\n  variants: {\n    size: {\n      small: \"text-2xl\",\n      medium: \"text-3xl\",\n      large: \"text-4xl\",\n    },\n    theme: {\n      minimal: \"\",\n      classic: \"font-extrabold bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\",\n    },\n  },\n  defaultVariants: {\n    size: \"large\",\n    theme: \"minimal\",\n  },\n});\n\nconst buttonVariants = cva(\n  \"w-full transition-all duration-300 hover:cursor-pointer\",\n  {\n    variants: {\n      theme: {\n        minimal: \"shadow hover:bg-primary/90 h-9 py-2 group bg-primary text-primary-foreground ring-primary before:from-primary-foreground/20 after:from-primary-foreground/10 relative isolate inline-flex w-full items-center justify-center overflow-hidden rounded-md px-3 text-left text-sm font-medium ring-1 before:pointer-events-none before:absolute before:inset-0 before:-z-10 before:rounded-md before:bg-gradient-to-b before:opacity-80 before:transition-opacity before:duration-300 before:ease-[cubic-bezier(0.4,0.36,0,1)] after:pointer-events-none after:absolute after:inset-0 after:-z-10 after:rounded-md after:bg-gradient-to-b after:to-transparent after:mix-blend-overlay\",\n        classic: \"relative overflow-hidden bg-gradient-to-r from-primary to-primary/80 text-primary-foreground font-semibold py-3 px-6 rounded-lg hover:shadow-xl active:scale-95 border border-primary/20\",\n      },\n    },\n    defaultVariants: {\n      theme: \"minimal\",\n    },\n  }\n);\n\nconst featureIconVariants = cva(\"flex-none h-[1lh]\", {\n  variants: {\n    size: {\n      small: \"size-3\",\n      medium: \"size-4\",\n      large: \"size-4\",\n    },\n    theme: {\n      minimal: \"text-primary\",\n      classic: \"text-emerald-500\",\n    },\n  },\n  defaultVariants: {\n    size: \"large\",\n    theme: \"minimal\",\n  },\n});\n\nexport interface PricingTableFourProps extends VariantProps<typeof sectionVariants> {\n  plans: Plan[];\n  title?: string;\n  description?: string;\n  subtitle?: string;\n  onPlanSelect?: (planId: string) => void;\n  className?: string;\n  showBillingToggle?: boolean;\n  billingToggleLabels?: {\n    monthly: string;\n    yearly: string;\n  };\n}\n\nconst defaultIcons = {\n  starter: <Package className=\"w-4 h-4\" />,\n  pro: <Award className=\"w-4 h-4\" />,\n  enterprise: <Building2 className=\"w-4 h-4\" />,\n};\n\nexport function PricingTableFour({\n  plans,\n  title = \"Choose Your Perfect Plan\",\n  description = \"Transform your project with our comprehensive pricing options designed for every need.\",\n  subtitle,\n  onPlanSelect,\n  className,\n  size = \"medium\",\n  theme = \"minimal\",\n  showBillingToggle = true,\n  billingToggleLabels = {\n    monthly: \"Monthly\",\n    yearly: \"Yearly\",\n  },\n}: PricingTableFourProps) {\n  const [isAnnually, setIsAnnually] = useState(false);\n  const uniqueId = useId();\n\n  function calculateDiscount(monthlyPrice: string, yearlyPrice: string): number {\n    const monthly = parseFloat(monthlyPrice);\n    const yearly = parseFloat(yearlyPrice);\n\n    if (\n      monthlyPrice.toLowerCase() === \"custom\" ||\n      yearlyPrice.toLowerCase() === \"custom\" ||\n      isNaN(monthly) ||\n      isNaN(yearly) ||\n      monthly === 0\n    ) {\n      return 0;\n    }\n\n    const discount = ((monthly * 12 - yearly) / (monthly * 12)) * 100;\n    return Math.round(discount);\n  }\n\n  const yearlyPriceDiscount = plans.length\n    ? Math.max(\n      ...plans.map((plan) =>\n        calculateDiscount(plan.monthlyPrice, plan.yearlyPrice)\n      )\n    )\n    : 0;\n\n  const handlePlanSelect = (planId: string) => {\n    onPlanSelect?.(planId);\n  };\n\n  const getPlanIcon = (planId: string) => {\n    return defaultIcons[planId as keyof typeof defaultIcons] || <Package className=\"w-5 h-5\" />;\n  };\n\n  return (\n    <section className={cn(sectionVariants({ size, theme }), className)}>\n      {/* Classic theme background elements */}\n      {theme === \"classic\" && (\n        <>\n          <div className=\"absolute inset-0 bg-grid-pattern opacity-5\" />\n          <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-primary/5 rounded-full blur-3xl\" />\n          <div className=\"absolute top-1/4 right-1/4 w-64 h-64 bg-secondary/5 rounded-full blur-2xl\" />\n        </>\n      )}\n\n      <div className=\"container max-w-7xl mx-auto relative\">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          {subtitle && (\n            <p className=\"text-sm font-medium text-primary mb-3 tracking-wide uppercase\">{subtitle}</p>\n          )}\n          <h2 className={cn(titleVariants({ size, theme }))}>{title}</h2>\n          <p className={cn(descriptionVariants({ size, theme }))}>{description}</p>\n\n          {showBillingToggle && (\n            <div className={cn(\"flex justify-center mt-8 mx-auto\", toggleVariants({ theme }))}>\n              <RadioGroup\n                defaultValue=\"monthly\"\n                className=\"h-full grid-cols-2\"\n                onValueChange={(value) => {\n                  setIsAnnually(value === \"annually\");\n                }}\n              >\n                <div className='has-[button[data-state=\"checked\"]]:bg-background h-full rounded-md transition-all'>\n                  <RadioGroupItem\n                    value=\"monthly\"\n                    id={`${uniqueId}-monthly`}\n                    className=\"peer sr-only\"\n                  />\n                  <Label\n                    htmlFor={`${uniqueId}-monthly`}\n                    className=\"text-muted-foreground peer-data-[state=checked]:text-primary flex h-full cursor-pointer items-center justify-center px-2 md:px-7 font-semibold transition-all hover:text-foreground\"\n                  >\n                    {billingToggleLabels.monthly}\n                  </Label>\n                </div>\n                <div className='has-[button[data-state=\"checked\"]]:bg-background h-full rounded-md transition-all'>\n                  <RadioGroupItem\n                    value=\"annually\"\n                    id={`${uniqueId}-annually`}\n                    className=\"peer sr-only\"\n                  />\n                  <Label\n                    htmlFor={`${uniqueId}-annually`}\n                    className=\"text-muted-foreground peer-data-[state=checked]:text-primary flex h-full cursor-pointer items-center justify-center gap-1 px-2 md:px-7 font-semibold transition-all hover:text-foreground\"\n                  >\n                    {billingToggleLabels.yearly}\n                    {yearlyPriceDiscount > 0 && (\n                      <span className=\"ml-1 rounded bg-primary/10 px-2 py-0.5 text-xs text-primary border border-primary/20 font-medium\">\n                        Save {yearlyPriceDiscount}%\n                      </span>\n                    )}\n                  </Label>\n                </div>\n              </RadioGroup>\n            </div>\n          )}\n        </div>\n\n        <div className={cn(\n          \"grid gap-6\",\n          plans.length === 1 && \"grid-cols-1 max-w-md mx-auto\",\n          plans.length === 2 && \"grid-cols-1 md:grid-cols-2 max-w-4xl mx-auto\",\n          plans.length === 3 && \"grid-cols-1 md:grid-cols-3\",\n          plans.length >= 4 && \"grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\"\n        )}>\n          {plans.map((plan, index) => (\n            <motion.div\n              key={plan.id}\n              className=\"relative group h-full\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{\n                duration: 0.4,\n                delay: index * 0.1,\n                ease: \"easeOut\"\n              }}\n            >\n              {/* Popular badge */}\n              {plan.badge && (\n                <Badge className={cn(\n                  \"absolute -top-3 left-1/2 transform -translate-x-1/2 z-20\",\n                  theme === \"classic\" \n                    ? \"bg-gradient-to-r from-primary to-primary/80 text-primary-foreground border-primary/20 shadow-lg\"\n                    : \"bg-primary text-primary-foreground\"\n                )}>\n                  {plan.badge}\n                </Badge>\n              )}\n\n              {/* Classic theme highlight effect */}\n              {theme === \"classic\" && plan.highlight && (\n                <div className=\"absolute -top-px left-1/2 -translate-x-1/2 w-32 h-px bg-gradient-to-r from-transparent via-primary to-transparent\" />\n              )}\n\n              <div className={cn(cardVariants({ size, theme, highlight: plan.highlight }))}>\n                <div className=\"flex flex-col h-full\">\n                  {/* Icon and Title */}\n                  <div className=\"flex items-start gap-4 mb-4\">\n                    <div className=\"flex-1\">\n                      <h3 className={cn(\n                        \"text-xl font-bold mb-1\",\n                        theme === \"classic\" ? \"text-lg\" : \"\"\n                      )}>{plan.title}</h3>\n                      <p className={cn(\n                        \"text-sm text-muted-foreground\",\n                        theme === \"classic\" && \"text-foreground/80\"\n                      )}>{plan.description}</p>\n                    </div>\n                    <div className={cn(\n                      \"w-10 h-10 flex items-center rounded-lg justify-center flex-shrink-0\",\n                      theme === \"classic\" \n                        ? \"bg-primary/10 text-primary border border-primary/20\"\n                        : \"bg-muted text-foreground border border-border\"\n                    )}>\n                      {getPlanIcon(plan.id)}\n                    </div>\n                  </div>\n\n                  {/* Price */}\n                  <div className=\"mb-6\">\n                    <AnimatePresence mode=\"wait\">\n                      <motion.div\n                        key={isAnnually ? \"year\" : \"month\"}\n                        initial={{ opacity: 0, y: 10 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        exit={{ opacity: 0, y: -10 }}\n                        transition={{ duration: 0.2 }}\n                      >\n                        {isAnnually ? (\n                          <div className=\"flex items-baseline gap-1\">\n                            <span className={cn(priceTextVariants({ size, theme }))}>\n                              {parseFloat(plan.yearlyPrice) >= 0 && plan.yearlyPrice.toLowerCase() !== 'custom' && (\n                                <>{plan.currency}</>\n                              )}\n                              {plan.yearlyPrice}\n                            </span>\n                            <span className=\"text-muted-foreground text-sm\">/year</span>\n                            {calculateDiscount(plan.monthlyPrice, plan.yearlyPrice) > 0 && (\n                              <span className={cn(\n                                \"text-xs ml-2\",\n                                theme === \"classic\" ? \"text-emerald-500 font-semibold\" : \"text-primary font-medium\"\n                              )}>\n                                {calculateDiscount(plan.monthlyPrice, plan.yearlyPrice)}% off\n                              </span>\n                            )}\n                          </div>\n                        ) : (\n                          <div className=\"flex items-baseline gap-1\">\n                            <span className={cn(priceTextVariants({ size, theme }))}>\n                              {parseFloat(plan.monthlyPrice) >= 0 && plan.monthlyPrice.toLowerCase() !== 'custom' && (\n                                <>{plan.currency}</>\n                              )}\n                              {plan.monthlyPrice}\n                            </span>\n                            <span className=\"text-muted-foreground text-sm\">/month</span>\n                          </div>\n                        )}\n                      </motion.div>\n                    </AnimatePresence>\n                  </div>\n\n                  {/* CTA Button */}\n                  <div className=\"mb-6\">\n                    <Button\n                      onClick={() => handlePlanSelect(plan.id)}\n                      className={cn(\n                        buttonVariants({ theme }),\n                        !plan.highlight && theme === \"minimal\" && \"bg-secondary hover:bg-secondary/80 text-secondary-foreground\"\n                      )}\n                      variant={plan.highlight ? \"default\" : \"secondary\"}\n                    >\n                      {plan.buttonText}\n                      {theme === \"classic\" && plan.highlight && (\n                        <div className=\"absolute inset-0 bg-gradient-to-r from-white/0 via-white/10 to-white/0 translate-x-[-100%] hover:translate-x-[100%] transition-transform duration-700\" />\n                      )}\n                    </Button>\n                  </div>\n\n                  {/* Features */}\n                  <div className=\"flex-1\">\n                    <ul className=\"space-y-3\">\n                      {plan.features.map((feature, featureIndex) => (\n                        <motion.li \n                          key={featureIndex} \n                          className=\"flex gap-3 items-start\"\n                          initial={{ opacity: 0, x: -10 }}\n                          animate={{ opacity: 1, x: 0 }}\n                          transition={{ duration: 0.3, delay: featureIndex * 0.05 }}\n                        >\n                          <Check className={cn(featureIconVariants({ size, theme }))} />\n                          <span className={cn(\n                            \"text-sm\",\n                            theme === \"classic\" ? \"text-foreground/90\" : \"text-muted-foreground\"\n                          )}>\n                            {feature.name}\n                          </span>\n                        </motion.li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}",
      "type": "registry:component",
      "target": "components/billingsdk/pricing-table-four.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/pricing-table-four-demo.tsx",
      "content": "\"use client\"\n\nimport { PricingTableFour } from \"@/components/billingsdk/pricing-table-four\"\nimport { plans } from \"@/lib/billingsdk-config\"\n\nexport function PricingTableFourDemo() {\n  return (\n    <PricingTableFour\n      plans={plans}\n      title=\"Choose Your Perfect Plan\"\n      theme=\"classic\"\n      description=\"Transform your project with our comprehensive pricing options designed for every need.\"\n      subtitle=\"Simple Pricing\"\n      onPlanSelect={(planId: string) => console.log('Selected plan:', planId)}\n      size=\"medium\"\n      className=\"w-full\"\n      showBillingToggle={true}\n      billingToggleLabels={{\n        monthly: \"Monthly\",\n        yearly: \"Yearly\",\n      }}\n    />\n  )\n}\n",
      "type": "registry:component",
      "target": "components/pricing-table-four-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\n    id: string\n    title: string\n    description: string\n    highlight?: boolean\n    type?: 'monthly' | 'yearly'\n    currency?: string\n    monthlyPrice: string\n    yearlyPrice: string\n    buttonText: string\n    badge?: string\n    features: {\n        name: string\n        icon: string\n        iconColor?: string\n    }[]\n}\n\nexport interface CurrentPlan {\n    plan: Plan\n    type: 'monthly' | 'yearly' | 'custom'\n    price?: string\n    nextBillingDate: string\n    paymentMethod: string\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\n}\n\nexport const plans: Plan[] = [\n    {\n        id: 'starter',\n        title: 'Starter',\n        description: 'For developers testing out Liveblocks locally.',\n        currency: '$',\n        monthlyPrice: '0',\n        yearlyPrice: '0',\n        buttonText: 'Start today for free',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'pro',\n        title: 'Pro',\n        description: 'For companies adding collaboration in production.',\n        currency: '$',\n        monthlyPrice: '20',\n        yearlyPrice: '199',\n        buttonText: 'Sign up',\n        badge: 'Most popular',\n        highlight: true,\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'enterprise',\n        title: 'Enterprise',\n        description: 'For organizations that need more support and compliance features.',\n        currency: '$',\n        monthlyPrice: 'Custom',\n        yearlyPrice: 'Custom',\n        buttonText: 'Contact sales',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    }\n];\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}