{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-table-four",
  "type": "registry:block",
  "title": "Pricing Table Four",
  "description": "A modern pricing table component with gradient design",
  "dependencies": [
    "lucide-react",
    "class-variance-authority",
    "motion"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/pricing-table-four.tsx",
      "content": "\"use client\";\r\n\r\nimport { ChevronRight, Package, Award, Building2 } from \"lucide-react\";\r\nimport { useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"motion/react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { type Plan } from \"@/lib/billingsdk-config\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// Animated Price Container\r\nfunction AnimatedPriceContainer({ \r\n  price, \r\n  period, \r\n  isHighlight\r\n}: { \r\n  price: string; \r\n  period: string; \r\n  isHighlight?: boolean;\r\n}) {\r\n  return (\r\n    <motion.div\r\n      className=\"flex items-end justify-end min-h-[3rem]\"\r\n      transition={{ duration: 0.2 }}\r\n    >\r\n      <motion.div\r\n        className=\"relative overflow-hidden\"\r\n        initial={false}\r\n        animate={{\r\n          scale: isHighlight ? 1.1 : 1,\r\n        }}\r\n        transition={{ duration: 0.3, ease: \"easeOut\" }}\r\n      >\r\n        <AnimatePresence mode=\"wait\">\r\n          <motion.span \r\n            className={cn(\r\n              \"text-3xl font-bold text-foreground relative inline-block\",\r\n              isHighlight && \"bg-gradient-to-r from-primary to-primary/70 bg-clip-text text-transparent\"\r\n            )}\r\n            key={`${price}-${period}`}\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -20 }}\r\n            transition={{ duration: 0.4, ease: \"easeOut\" }}\r\n          >\r\n            {price}\r\n          </motion.span>\r\n        </AnimatePresence>\r\n        \r\n        {/* Highlight glow effect */}\r\n        {isHighlight && (\r\n          <motion.div\r\n            className=\"absolute inset-0 bg-gradient-to-r from-primary/20 to-transparent rounded-lg blur-xl\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 0.4 }}\r\n            transition={{\r\n              duration: 0.3,\r\n              ease: \"easeOut\"\r\n            }}\r\n          />\r\n        )}\r\n      </motion.div>\r\n      \r\n      <AnimatePresence mode=\"wait\">\r\n        <motion.span \r\n          className=\"text-muted-foreground ml-2 flex items-center\"\r\n          key={`period-${price}-${period}`}\r\n          initial={{ opacity: 0, x: 10 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          exit={{ opacity: 0, x: -10 }}\r\n          transition={{ duration: 0.3, delay: 0.1 }}\r\n        >\r\n          <span className=\"mx-1\">/</span>\r\n          <span >{period}</span>\r\n        </motion.span>\r\n      </AnimatePresence>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nconst sectionVariants = cva(\"px-4 py-20 relative overflow-hidden bg-background\", {\r\n  variants: {\r\n    size: {\r\n      small: \"py-10\",\r\n      medium: \"py-20\",\r\n      large: \"py-32\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"medium\",\r\n  },\r\n});\r\n\r\nconst titleVariants = cva(\"font-bold mb-6 text-foreground\", {\r\n  variants: {\r\n    size: {\r\n      small: \"text-3xl lg:text-4xl\",\r\n      medium: \"text-4xl lg:text-5xl\",\r\n      large: \"text-5xl lg:text-6xl\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"medium\",\r\n  },\r\n});\r\n\r\nconst descriptionVariants = cva(\"text-muted-foreground max-w-3xl mx-auto leading-tight mb-8\", {\r\n  variants: {\r\n    size: {\r\n      small: \"text-base sm:text-lg\",\r\n      medium: \"text-lg sm:text-xl\",\r\n      large: \"text-xl sm:text-2xl\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"medium\",\r\n  },\r\n});\r\n\r\nconst cardVariants = cva(\r\n  \"relative h-full transition-all rounded-lg duration-300 border bg-card border-border hover:bg-muted/50\",\r\n  {\r\n    variants: {\r\n      highlight: {\r\n        true: \"bg-primary/5 border-primary/20\",\r\n        false: \"\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      highlight: false,\r\n    },\r\n  }\r\n);\r\n\r\nconst toggleVariants = cva(\r\n  \"inline-flex items-center p-2 rounded-lg border bg-muted border-border\"\r\n);\r\n\r\nconst buttonVariants = cva(\r\n  \"w-full py-3 px-4 text-sm font-medium transition-all duration-300 flex items-center justify-center gap-2 rounded-lg hover:cursor-pointer\",\r\n  {\r\n    variants: {\r\n      highlight: {\r\n        true: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        false: \"bg-muted/5 text-muted-foreground hover:bg-muted/80 border border-border\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      highlight: false,\r\n    },\r\n  }\r\n);\r\n\r\nexport interface PricingTableFourProps extends VariantProps<typeof sectionVariants> {\r\n  plans: Plan[];\r\n  title?: string;\r\n  description?: string;\r\n  subtitle?: string;\r\n  onPlanSelect?: (planId: string) => void;\r\n  className?: string;\r\n  showBillingToggle?: boolean;\r\n  billingToggleLabels?: {\r\n    monthly: string;\r\n    yearly: string;\r\n  };\r\n}\r\n\r\nconst defaultIcons = {\r\n  starter: <Package className=\"w-5 h-5\" />,\r\n  pro: <Award className=\"w-5 h-5\" />,\r\n  enterprise: <Building2 className=\"w-5 h-5\" />,\r\n};\r\n\r\nexport function PricingTableFour({\r\n  plans,\r\n  title = \"Choose Your Perfect Plan\",\r\n  description = \"Transform your project with our comprehensive pricing options designed for every need.\",\r\n  subtitle = \"Simple Pricing\",\r\n  onPlanSelect,\r\n  className,\r\n  size = \"medium\",\r\n  showBillingToggle = true,\r\n  billingToggleLabels = {\r\n    monthly: \"Monthly\",\r\n    yearly: \"Yearly\",\r\n  },\r\n}: PricingTableFourProps) {\r\n  const [isYearly, setIsYearly] = useState(false);\r\n\r\n  const handlePlanSelect = (planId: string) => {\r\n    onPlanSelect?.(planId);\r\n  };\r\n\r\n  const getPlanIcon = (planId: string) => {\r\n    return defaultIcons[planId as keyof typeof defaultIcons] || <Package className=\"w-5 h-5\" />;\r\n  };\r\n\r\n  const getPlanPrice = (plan: Plan) => {\r\n    const price = isYearly ? plan.yearlyPrice : plan.monthlyPrice;\r\n    // Don't add currency symbol for \"Custom\" pricing\r\n    if (price.toLowerCase() === 'custom') {\r\n      return price;\r\n    }\r\n    return `${plan.currency || '$'}${price}`;\r\n  };\r\n\r\n  const getPlanPeriod = (plan: Plan) => {\r\n    if (plan.monthlyPrice === '0' || plan.yearlyPrice === '0') {\r\n      return 'Free';\r\n    }\r\n    return isYearly ? 'year' : 'month';\r\n  };\r\n\r\n  return (\r\n    <section className={cn(sectionVariants({ size }), className)}>\r\n\r\n      <div className=\"max-w-7xl mx-auto relative z-10\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-16\">\r\n          {subtitle && (\r\n            <p className=\"text-muted-foreground italic text-lg mb-4\">{subtitle}</p>\r\n          )}\r\n          <h2 className={cn(titleVariants({ size }))}>{title}</h2>\r\n          <p className={cn(descriptionVariants({ size }))}>{description}</p>\r\n\r\n          {showBillingToggle && (\r\n            <div className={cn(toggleVariants())}>\r\n              <button\r\n                onClick={() => setIsYearly(false)}\r\n                className={`px-4 py-2 rounded-lg text-sm font-medium transition-all duration-300 hover:cursor-pointer ${\r\n                  !isYearly ? \"bg-primary text-primary-foreground shadow-lg hover:cursor-pointer\" : \"hover:cursor-pointer text-muted-foreground hover:text-foreground\"\r\n                }`}\r\n              >\r\n                {billingToggleLabels.monthly}\r\n              </button>\r\n              <button\r\n                onClick={() => setIsYearly(true)}\r\n                className={`px-4 py-2 rounded-lg text-sm font-medium transition-all duration-300 hover:cursor-pointer ${\r\n                  isYearly ? \"bg-primary text-primary-foreground shadow-lg hover:cursor-pointer\" : \"hover:cursor-pointer text-muted-foreground hover:text-foreground\"\r\n                }`}\r\n              >\r\n                {billingToggleLabels.yearly}\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"grid md:grid-cols-3 gap-8 max-w-6xl mx-auto items-stretch\">\r\n          {plans.map((plan, index) => (\r\n            <motion.div\r\n              key={plan.id}\r\n              className=\"relative group h-full\"\r\n              initial={{ opacity: 0, y: 50, scale: 0.9 }}\r\n              animate={{ opacity: 1, y: 0, scale: 1 }}\r\n              transition={{\r\n                duration: 0.6,\r\n                delay: index * 0.1,\r\n                ease: [0.25, 0.46, 0.45, 0.94]\r\n              }}\r\n\r\n            >\r\n              {/* Popular badge */}\r\n              {plan.badge && (\r\n                <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 z-20\">\r\n                  <div className=\"px-3 py-1 text-xs font-medium bg-primary text-primary-foreground rounded\">\r\n                    {plan.badge}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className={cn(cardVariants({ highlight: plan.highlight }))}>\r\n                <div className=\"p-4 flex flex-col h-full min-h-[500px]\">\r\n                  <div className=\"space-y-4 flex-shrink-0\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"w-12 h-12 flex items-center rounded-lg justify-center text-foreground bg-muted border border-border\">\r\n                        {getPlanIcon(plan.id)}\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <AnimatedPriceContainer\r\n                          price={getPlanPrice(plan)}\r\n                          period={getPlanPeriod(plan)}\r\n                          isHighlight={plan.highlight}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <h3 className=\"text-xl font-bold text-foreground\">{plan.title}</h3>\r\n                    </div>\r\n\r\n                    {/* Description */}\r\n                    <p className=\"text-muted-foreground leading-relaxed\">{plan.description}</p>\r\n                  </div>\r\n\r\n                  <div className=\"rounded-lg p-4 bg-muted/50 border border-border/50 mt-4 flex flex-col flex-grow\">\r\n                    <div className=\"mb-4 flex-shrink-0\">\r\n                      <button\r\n                        onClick={() => handlePlanSelect(plan.id)}\r\n                        className={cn(buttonVariants({ highlight: plan.highlight }))}\r\n                      >\r\n                        {plan.buttonText}\r\n                        <ChevronRight className=\"w-4 h-4\" />\r\n                      </button>\r\n                    </div>\r\n\r\n                    {/* Features */}\r\n                    <div className=\"flex-grow\">\r\n                      <h4 className=\"text-foreground font-semibold mb-4\">Features:</h4>\r\n                      <ul className=\"space-y-3\">\r\n                        {plan.features.map((feature, featureIndex) => (\r\n                          <li key={featureIndex} className=\"flex items-center text-muted-foreground\">\r\n                            <div className=\"w-5 h-5 flex rounded items-center justify-center mr-3 flex-shrink-0 bg-primary/10 border border-primary/20\">\r\n                              <ChevronRight className=\"w-3 h-3 text-primary rotate-90\" />\r\n                            </div>\r\n                            <span className=\"text-sm\">{feature.name}</span>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}",
      "type": "registry:component",
      "target": "components/billingsdk/pricing-table-four.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/pricing-table-four-demo.tsx",
      "content": "\"use client\";\r\n\r\nimport { PricingTableFour } from \"@/registry/billingsdk/pricing-table-four\";\r\nimport { plans } from \"@/lib/billingsdk-config\";\r\n\r\nexport function PricingTableFourDemo() {\r\n  return (\r\n    <PricingTableFour\r\n      plans={plans}\r\n      title=\"Choose Your Perfect Plan\"\r\n      description=\"Transform your project with our comprehensive pricing options designed for every need.\"\r\n      subtitle=\"Simple Pricing\"\r\n      onPlanSelect={(planId: string) => console.log('Selected plan:', planId)}\r\n      size=\"medium\"\r\n      className=\"w-full\"\r\n      showBillingToggle={true}\r\n      billingToggleLabels={{\r\n        monthly: \"Monthly\",\r\n        yearly: \"Yearly\",\r\n      }}\r\n    />\r\n  );\r\n}",
      "type": "registry:component",
      "target": "components/pricing-table-four-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\r\n    id: string\r\n    title: string\r\n    description: string\r\n    highlight?: boolean\r\n    type?: 'monthly' | 'yearly'\r\n    currency?: string\r\n    monthlyPrice: string\r\n    yearlyPrice: string\r\n    buttonText: string\r\n    badge?: string\r\n    features: {\r\n        name: string\r\n        icon: string\r\n        iconColor?: string\r\n    }[]\r\n}\r\n\r\nexport interface CurrentPlan {\r\n    plan: Plan\r\n    type: 'monthly' | 'yearly' | 'custom'\r\n    price?: string\r\n    nextBillingDate: string\r\n    paymentMethod: string\r\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\r\n}\r\n\r\nexport const plans: Plan[] = [\r\n    {\r\n        id: 'starter',\r\n        title: 'Starter',\r\n        description: 'For developers testing out Liveblocks locally.',\r\n        currency: '$',\r\n        monthlyPrice: '0',\r\n        yearlyPrice: '0',\r\n        buttonText: 'Start today for free',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'pro',\r\n        title: 'Pro',\r\n        description: 'For companies adding collaboration in production.',\r\n        currency: '$',\r\n        monthlyPrice: '20',\r\n        yearlyPrice: '199',\r\n        buttonText: 'Sign up',\r\n        badge: 'Most popular',\r\n        highlight: true,\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'enterprise',\r\n        title: 'Enterprise',\r\n        description: 'For organizations that need more support and compliance features.',\r\n        currency: '$',\r\n        monthlyPrice: 'Custom',\r\n        yearlyPrice: 'Custom',\r\n        buttonText: 'Contact sales',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    }\r\n];\r\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}