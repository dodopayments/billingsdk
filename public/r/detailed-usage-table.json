{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "detailed-usage-table",
  "type": "registry:block",
  "title": "Detailed Usage Table",
  "description": "A detailed usage table component with resource consumption breakdown",
  "registryDependencies": [
    "table",
    "card",
    "badge",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/detailed-usage-table.tsx",
      "content": "\"use client\"\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\"\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCaption,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface UsageResource {\r\n  name: string\r\n  used: number\r\n  limit: number\r\n  percentage?: number\r\n  unit?: string\r\n}\r\n\r\nexport interface DetailedUsageTableProps {\r\n  className?: string\r\n  title?: string\r\n  description?: string\r\n  resources: UsageResource[]\r\n}\r\n\r\nexport function DetailedUsageTable({\r\n  className,\r\n  title = \"Detailed Usage\",\r\n  description,\r\n  resources,\r\n}: DetailedUsageTableProps) {\r\n  const formatNumber = (num: number) => {\r\n    return new Intl.NumberFormat().format(num)\r\n  }\r\n\r\n  const getPercentageBar = (percentage: number) => {\r\n    let bgColor = \"bg-emerald-500\"\r\n    if (percentage >= 90) bgColor = \"bg-destructive\"\r\n    else if (percentage >= 75) bgColor = \"bg-orange-500\"\r\n\r\n    return (\r\n      <div className=\"flex items-center gap-2 min-w-[120px]\">\r\n        <div className=\"h-2 flex-1 rounded-full bg-secondary\">\r\n          <div\r\n            className={cn(\"h-2 rounded-full transition-all\", bgColor)}\r\n            style={{ width: `${Math.max(0, Math.min(percentage, 100))}%` }}\r\n          />\r\n        </div>\r\n        <span className=\"text-xs font-medium tabular-nums w-10 text-right\">{Math.round(percentage)}%</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card className={cn(\"w-full\", className)}>\r\n      <CardHeader>\r\n        <CardTitle>{title}</CardTitle>\r\n        {description && <CardDescription>{description}</CardDescription>}\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"rounded-md border overflow-x-auto\">\r\n          <Table>\r\n            <TableCaption className=\"sr-only\">\r\n              Detailed usage of resources\r\n            </TableCaption>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead className=\"w-[180px]\">Resource</TableHead>\r\n                <TableHead className=\"text-right\">Used</TableHead>\r\n                <TableHead className=\"text-right\">Limit</TableHead>\r\n                <TableHead className=\"text-right min-w-[160px]\">Usage</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {resources.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={4}\r\n                    className=\"h-24 text-center text-muted-foreground\"\r\n                  >\r\n                    No resources found\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                resources.map((resource, index) => {\r\n                  const percentage =\r\n                    resource.percentage ??\r\n                    (resource.limit > 0\r\n                      ? (resource.used / resource.limit) * 100\r\n                      : 0)\r\n\r\n                  const unit = resource.unit ? ` ${resource.unit}` : \"\"\r\n\r\n                  return (\r\n                    <TableRow key={resource.name || index}>\r\n                      <TableCell className=\"font-medium\">\r\n                        {resource.name}\r\n                      </TableCell>\r\n                      <TableCell className=\"text-right tabular-nums\">\r\n                        {formatNumber(resource.used)}\r\n                        {unit}\r\n                      </TableCell>\r\n                      <TableCell className=\"text-right tabular-nums text-muted-foreground\">\r\n                        {formatNumber(resource.limit)}\r\n                        {unit}\r\n                      </TableCell>\r\n                      <TableCell className=\"text-right\">\r\n                        {getPercentageBar(percentage)}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": "components/billingsdk/detailed-usage-table.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/detailed-usage-table-demo.tsx",
      "content": "'use client';\r\n\r\nimport { DetailedUsageTable } from '@/registry/billingsdk/detailed-usage-table';\r\n\r\nexport function DetailedUsageTableDemo() {\r\n\treturn (\r\n\t\t<DetailedUsageTable\r\n\t\t\ttitle=\"Resource Usage\"\r\n\t\t\tdescription=\"Detailed breakdown of your resource consumption\"\r\n\t\t\tresources={[\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'API Calls',\r\n\t\t\t\t\tused: 12300,\r\n\t\t\t\t\tlimit: 20000,\r\n\t\t\t\t\t// percentage will be automatically calculated as 61.5%\r\n\t\t\t\t\tunit: 'calls',\r\n\t\t\t\t},\r\n\t\t\t\t{ name: 'Storage', used: 850, limit: 1000, percentage: 85, unit: 'GB' },\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Team Members',\r\n\t\t\t\t\tused: 4,\r\n\t\t\t\t\tlimit: 5,\r\n\t\t\t\t\t// percentage will be automatically calculated as 80%\r\n\t\t\t\t\tunit: 'users',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Bandwidth',\r\n\t\t\t\t\tused: 1500,\r\n\t\t\t\t\tlimit: 2000,\r\n\t\t\t\t\tpercentage: 75,\r\n\t\t\t\t\tunit: 'GB',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'Emails',\r\n\t\t\t\t\tused: 8500,\r\n\t\t\t\t\tlimit: 10000,\r\n\t\t\t\t\t// percentage will be automatically calculated as 85%\r\n\t\t\t\t\tunit: 'emails',\r\n\t\t\t\t},\r\n\t\t\t]}\r\n\t\t/>\r\n\t);\r\n}\r\n",
      "type": "registry:component",
      "target": "components/detailed-usage-table-demo.tsx"
    }
  ]
}